// Generated by Rec Studio 4 - build Sep 19 2015

L00401180(
    _unknown_ __ebx                        // r1
)
{
    intOrPtr _v20;                         // _cfa_ffffffec
    intOrPtr _v24;                         // _cfa_ffffffe8
    char _v28;                             // _cfa_ffffffe4
    char _v48;                             // _cfa_ffffffd0
    char _v52;                             // _cfa_ffffffcc
    char* _v76;                            // _cfa_ffffffb4
    signed int _v80;                       // _cfa_ffffffb0
    char* _v84;                            // _cfa_ffffffac
    char* _v88;                            // _cfa_ffffffa8
    intOrPtr* _t18;                        // _t18
    intOrPtr* _t19;                        // _t19
    char _t22;                             // _t22
    intOrPtr _t33;                         // _t33
    _unknown_ _t34;                        // _t34

    _push(_t34);
    _push(__ebx);
    __esp = __esp - 20;
    _t18 = ___dyn_tls_init_callback;
    if(_t18 != 0) {
        _v20 = 0;
        _v24 = 2;
         *__esp = 0;
         *_t18();
        __esp = __esp - 12;
    }
     *__esp =  &__Jv_RegisterClasses;
    _SetUnhandledExceptionFilter$4();
    __esp = __esp - 4;
    ___cpu_features_init(__ecx);
    __fpreset(_t18);
    __setargv(_t18);
    _t19 = __CRT_fmode;
    if(_t19 != 0) {
        _t33 = __imp___iob;
        __fmode = _t19;
        _v28 = _t19;
         *__esp =  *((intOrPtr*)(_t33 + 16));
        __setmode();
        _v28 = __CRT_fmode;
         *__esp =  *((intOrPtr*)(_t33 + 48));
        __setmode();
        _v28 = __CRT_fmode;
        _t19 =  *((intOrPtr*)(_t33 + 80));
         *__esp = _t19;
        __setmode();
    }
    ___p__fmode();
     *_t19 = __fmode;
    __pei386_runtime_relocator();
    __esp = __esp & 240;
    ___main(__esi);
    ___p__environ();
    _v24 =  *_t19;
    _v28 = __argv;
    _t22 = __argc;
     *__esp = _t22;
    _main();
    __cexit();
     *__esp = _t22;
    _ExitProcess$4();
    __esp = __esp - 60;
    _v76 =  &_v48;
    _v88 =  &__argv;
     *__esp =  &__argc;
    _v48 = 0;
    _v80 = __CRT_glob & 1;
    _v84 =  &_v52;
    ___getmainargs();
    __esp = __esp + 60;
}

L00401260()
{
    char _v16;                             // _cfa_fffffff0
    char _v20;                             // _cfa_ffffffec
    char* _v44;                            // _cfa_ffffffd4
    signed int _v48;                       // _cfa_ffffffd0
    char* _v52;                            // _cfa_ffffffcc
    char* _v56;                            // _cfa_ffffffc8

    _v44 =  &_v16;
    _v56 =  &__argv;
     *__esp =  &__argc;
    _v16 = 0;
    _v48 = __CRT_glob & 1;
    _v52 =  &_v20;
    ___getmainargs();
    return  &_v20;
}

L004012E0()
{
    goto atexit;
}

_main()
{// addr = 0x00401410
    _unknown_ _v8;                         // _cfa_fffffff8
    char _v20;                             // _cfa_ffffffec
    intOrPtr _v28;                         // _cfa_ffffffe4
    intOrPtr _v32;                         // _cfa_ffffffe0
    char _v36;                             // _cfa_ffffffdc
    intOrPtr _v40;                         // _cfa_ffffffd8
    intOrPtr _v44;                         // _cfa_ffffffd4
    intOrPtr _v48;                         // _cfa_ffffffd0
    long long _v56;                        // _cfa_ffffffc8
    char* _v60;                            // _cfa_ffffffc4
    long long _v64;                        // _cfa_ffffffc0
    long long _t38;                        // _t38

    __esp = __esp & 240;
    __esp = __esp - 64;
    ___main(__esi);
    _v8 =  *4235476;
    _v20 =  *4235480;
    _v36 = -1717987328;
    _v32 = -2120640103;
    _v28 = 16387;
    _v56 =  &_v36;
    _v60 =  &_v20;
    _v64 =  &_v8;
    _scanf("%f %f %f");
    _t38 = _v8;
    asm("fxch st0, st1");
    _v48 = _v36;
    _v44 = _v32;
    _v40 = _v28;
    _v56 = _t38;
    _v64 = _t38;
    _printf("%f %f %f\n");
    return 0;
}

__setargv(
    signed int __eax                       // r0
)
{// addr = 0x004014C0
    _unknown_ _v16;                        // _cfa_fffffff0
    signed int _v32;                       // _cfa_ffffffe0
    char _v36;                             // _cfa_ffffffdc
    char _v40;                             // _cfa_ffffffd8
    char _v44;                             // _cfa_ffffffd4
    signed int _v48;                       // _cfa_ffffffd0
    signed int _v52;                       // _cfa_ffffffcc
    signed int _v56;                       // _cfa_ffffffc8
    signed int _v60;                       // _cfa_ffffffc4
    signed int _v64;                       // _cfa_ffffffc0
    signed int* _v68;                      // _cfa_ffffffbc
    char _v76;                             // _cfa_ffffffb4
    char* _v80;                            // _cfa_ffffffb0 (outparam)
    signed int _v84;                       // _cfa_ffffffac (outparam)
    signed int _v88;                       // _cfa_ffffffa8 (outparam)
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed char _t97;                      // _t97
    signed int _t98;                       // _t98
    char _t104;                            // _t104
    signed int _t105;                      // _t105
    signed int _t106;                      // _t106
    signed int _t113;                      // _t113
    signed int _t115;                      // _t115
    signed int _t116;                      // _t116
    signed int _t118;                      // _t118
    signed int _t119;                      // _t119
    signed int _t123;                      // _t123
    signed int _t126;                      // _t126
    signed int _t128;                      // _t128
    signed int _t129;                      // _t129
    signed int _t130;                      // _t130
    signed int _t131;                      // _t131
    signed int _t132;                      // _t132
    signed int _t134;                      // _t134
    signed int _t135;                      // _t135
    signed int _t136;                      // _t136
    _unknown_ _t142;                       // _t142
    _unknown_ _t145;                       // _t145

    if((__CRT_glob & 2) == 0) {
        return L00401260();
    } else {
        _GetCommandLineA$0();
        _v68 = __esp;
         *__esp = __eax;
        _t136 = __eax;
        __esp = __esp - ___chkstk_ms(_strlen() + _t90 + 17 & 240);
        _v64 =  &_v76;
        _v32 = 0;
        _v52 = 0;
        _v56 = 0;
        asm("sbb eax, eax");
        _v60 = __CRT_glob & 64;
        _t97 = 0;
        _v60 = _v60 & -16384;
        _v60 = _v60 + 16400;
        _v48 =  &_v76;
        while(1) {
L2:
            _t136 = _t136 + 1;
            _t113 =  *(_t136 - 1) & 255;
            _t119 = _t113;
            if(_t119 == 0) {
                break;
            } else {
                goto L3;
            }
            while(1) {
L3:
                _t142 = _t113 - 63;
                if(_t142 == 0) {
                    break;
                }
                if(_t142 > 0) {
                    __eflags = _t113 - 92;
                    if(_t113 == 92) {
                        _t97 = _t97 + 1;
                        goto L2;
                    } else {
                        __eflags = _t113 - 127;
                        if(_t113 == 127) {
                            break;
                        } else {
                            __eflags = _t113 - 91;
                            if(_t113 != 91) {
                                goto L34;
                            } else {
                                __eflags = __CRT_glob & 32;
                                _t132 = 1;
                                if((__CRT_glob & 32) != 0) {
                                    break;
                                }
L28:
                                __eflags = _t97;
                                if(_t97 == 0) {
                                    _t105 = _v48;
                                } else {
                                    _t131 = _v48;
                                    _t105 = _t97 + _t131;
                                    __eflags = _t105;
                                    do {
                                        _t131 = _t131 + 1;
                                        __eflags = _t131 - _t105;
                                         *((char*)(_t131 - 1)) = 92;
                                    } while(_t131 != _t105);
                                }
                                __eflags = _t132;
                                if(_t132 != 0) {
L42:
                                     *_t105 = 127;
                                    _t105 = _t105 + 1;
                                } else {
                                    __eflags = _t119 - 127;
                                    if(_t119 == 127) {
                                        goto L42;
                                    }
                                }
                                 *_t105 = _t113;
                                _t97 = 0;
                                _v48 = _t105 + 1;
                                goto L2;
                            }
                        }
                    }
                    goto L18;
                } else {
                    if(_t113 == 39) {
                        __eflags = __CRT_glob & 16;
                        if(__eflags == 0) {
                            goto L34;
                        } else {
                            _t115 = _t97 >> 1;
                            if(__eflags == 0) {
                                _t116 = _v48;
                            } else {
                                _t130 = _v48;
                                _t116 = _t115 + _t130;
                                __eflags = _t116;
                                do {
                                    _t130 = _t130 + 1;
                                    __eflags = _t130 - _t116;
                                     *((char*)(_t130 - 1)) = 92;
                                } while(_t130 != _t116);
                            }
                            __eflags = _t97 & 1;
                            if((_t97 & 1) != 0) {
L49:
                                _v48 = _t116 + 1;
                                _t97 = 0;
                                 *_t116 = 39;
                                _v56 = 1;
                                goto L2;
                            } else {
                                __eflags = _v52 - 34;
                                if(_v52 != 34) {
                                    goto L13;
                                } else {
                                    goto L49;
                                }
                            }
                        }
                        goto L58;
                    } else {
                        if(_t113 == 42) {
                            break;
                        } else {
                            _t145 = _t113 - 34;
                            if(_t145 != 0) {
L34:
                                _t128 = _v48;
                                _t134 = _v48 + _t97;
                                __eflags = _t97;
                                if(_t97 == 0) {
                                    _t134 = _v48;
                                } else {
                                    do {
                                        _t128 = _t128 + 1;
                                        __eflags = _t128 - _t134;
                                         *((char*)(_t128 - 1)) = 92;
                                    } while(_t128 != _t134);
                                }
                                _t106 = _v52;
                                __eflags = _t106;
                                if(_t106 != 0) {
L41:
                                    _v48 = _t134 + 1;
                                    _t97 = 0;
                                     *_t134 = _t113;
                                    goto L2;
                                } else {
                                     *__esp = _t119;
                                    _isspace();
                                    __eflags = _t106;
                                    if(_t106 == 0) {
                                        goto L41;
                                    } else {
                                        __eflags = _v56;
                                        if(_v56 != 0) {
L40:
                                             *_t134 = 0;
                                            _v80 =  &_v44;
                                            _v84 = 0;
                                            _v88 = _v60;
                                            _t135 = _v64;
                                             *__esp = _t135;
                                            ___mingw_glob();
                                            _t97 = 0;
                                            _v60 = _v60 | 1;
                                            _v48 = _t135;
                                            _v56 = 0;
                                            goto L2;
                                        } else {
                                            __eflags = _v64 - _t134;
                                            if(_v64 >= _t134) {
                                                _v48 = _t134;
                                                _t97 = 0;
                                                goto L2;
                                            } else {
                                                goto L40;
                                            }
                                        }
                                    }
                                }
L18:
                                if(_v56 != 0 || _v64 < _t98) {
                                     *_t98 = 0;
                                    ___mingw_glob(_v64, _v60, 0,  &_v44);
                                }
                                __argc = _v40;
                                _t104 = _v36;
                                __argv = _t104;
                                __esp = _v68;
                                return _t104;
                                goto L58;
                            } else {
                                _t118 = _t97 >> 1;
                                if(_t145 == 0) {
                                    _t116 = _v48;
                                } else {
                                    _t129 = _v48;
                                    _t116 = _t118 + _t129;
                                    asm("o16 nop ");
                                    do {
                                        _t129 = _t129 + 1;
                                         *((char*)(_t129 - 1)) = 92;
                                    } while(_t129 != _t116);
                                }
                                if((_t97 & 1) != 0 || _v52 == 39) {
                                    _v48 = _t116 + 1;
                                    _t97 = 0;
                                     *_t116 = 34;
                                    _v56 = 1;
                                    goto L2;
                                } else {
L13:
                                    _t136 = _t136 + 1;
                                    _t97 = 0;
                                    _v48 = _t116;
                                    _t113 =  *(_t136 - 1) & 255;
                                    _v52 = _v52 ^ _t119;
                                    _v56 = 1;
                                    _t119 = _t113;
                                    if(_t119 != 0) {
                                        continue;
                                    } else {
                                        _t136 = _t136;
                                    }
                                }
                            }
                        }
                    }
                }
                goto L15;
            }
            __eflags = _v52;
            _t126 = _v52 != 0;
            __eflags = _t126;
            _t132 = _t126;
            goto L28;
        }
L15:
        _t123 = _v48;
        if(_t97 == 0) {
            _t98 = _t123;
        } else {
            _t98 = _t97 + _t123;
            do {
                _t123 = _t123 + 1;
                 *((char*)(_t123 - 1)) = 92;
            } while(_t123 != _t98);
        }
        goto L18;
    }
L58:
}

signed int ___cpu_features_init(
    signed int __ecx                       // r2
)
{// addr = 0x004017D0
    _unknown_ __ebx;                       // r1
    signed int _t14;                       // _t14
    signed int _t15;                       // _t15
    signed int _t16;                       // _t16
    _unknown_ _t17;                        // _t17
    signed int _t21;                       // _t21
    signed int _t22;                       // _t22

    asm("pushfd ");
    asm("pushfd ");
    _pop(__eax);
    _t21 = _t14;
    _t15 = _t14 ^ 2097152;
    _push(_t15);
    asm("popfd ");
    asm("pushfd ");
    _pop(__eax);
    asm("popfd ");
    _t16 = _t15 ^ _t21;
    if((_t16 & 2097152) == 0) {
        return _t16;
    }
    _push(__ebx);
    _t17 = 0;
    asm("cpuid ");
    if(0 == 0) {
L21:
        _pop(__ebx);
        return _t17;
    }
    asm("cpuid ");
    if((_t21 & 1) != 0) {
        ___cpu_features = ___cpu_features | 1;
    }
    if((_t21 & 128) != 0) {
        ___cpu_features = ___cpu_features | 2;
    }
    if((_t21 & 8388608) != 0) {
        ___cpu_features = ___cpu_features | 4;
    }
    if((_t21 & 16777216) != 0) {
        ___cpu_features = ___cpu_features | 8;
    }
    if((_t21 & 33554432) != 0) {
        ___cpu_features = ___cpu_features | 16;
    }
    _t22 = _t21 & 67108864;
    if(_t22 != 0) {
        ___cpu_features = ___cpu_features | 32;
    }
    if((__ecx & 1) != 0) {
        ___cpu_features = ___cpu_features | 64;
    }
    if((__ecx & 32) != 0) {
        ___cpu_features = ___cpu_features | 128;
    }
    _t17 = -2147483648;
    asm("cpuid ");
    if(-2147483648 > -2147483648) {
        _t17 = -2147483647;
        asm("cpuid ");
        if(_t22 < 0) {
            ___cpu_features = ___cpu_features | 256;
        }
        if((_t22 & 1073741824) != 0) {
            ___cpu_features = ___cpu_features | 512;
        }
    }
    goto L21;
}

__fpreset(
    _unknown_ __eax                        // r0
)
{// addr = 0x004018B0
    __eax = __eax;
    asm("fninit ");
    return __eax;
}

___main(
    _unknown_ __esi                        // r5
)
{// addr = 0x00401940
    _unknown_ __ebx;                       // r1
    _unknown_ _t7;                         // _t7
    signed int _t8;                        // _t8

    __esi = __esi;
    if( *4247592 == 0) {
         *4247592 = 1;
        _push(_t7);
        __esp = __esp - 24;
        _t8 = ___CTOR_LIST__;
        if(_t8 == 255) {
            _t8 = 0;
            while(1) {
                __eax = _t8 + 1;
                if( *((intOrPtr*)( &___CTOR_LIST__ + __eax * 4)) == 0) {
                    break;
                }
                _t8 = __eax;
            }
        }
        if(_t8 != 0) {
            do {
                ((char*)( &___CTOR_LIST__))[_t8]();
                _t8 = _t8 - 1;
                __esi = __esi;
            } while(_t8 != 0);
        }
         *__esp =  &___do_global_dtors;
        L004012E0();
        __esp = __esp + 24;
        _pop(__ebx);
        return;
    } else {
        return;
    }
}

L00401A50()
{
    char _v12;                             // _cfa_fffffff4
    intOrPtr* __ebx;                       // r1
    intOrPtr __esi;                        // r5

    __esp = __esp - 16;
     *__esp = 4247620;
    _EnterCriticalSection$4();
    __ebx =  *4247612;
    __esp = __esp - 4;
    if(__ebx == 0) {
L5:
         *__esp = 4247620;
        _LeaveCriticalSection$4();
        __esp = __esp - 4;
        __esp =  &_v12;
        return;
    } else {
        goto L1;
    }
    do {
L1:
        __eax =  *__ebx;
         *__esp = __eax;
        _TlsGetValue$4();
        __esp = __esp - 4;
        __esi = __eax;
        _GetLastError$0();
        if(__eax == 0 && __esi != 0) {
            __eax =  *((intOrPtr*)(__ebx + 4));
             *__esp = __esi;
             *((intOrPtr*)( *((intOrPtr*)(__ebx + 4))))();
        }
        __ebx = __ebx[2];
    } while(__ebx != 0);
    goto L5;
}

___mingw_TLScallback(
    _unknown_ __esi,                       // r5
    intOrPtr _a8                           // _cfa_8
)
{// addr = 0x00401BF0
    intOrPtr _t3;                          // _t3
    _unknown_ _t14;                        // _t14

    _t3 = _a8;
    _t14 = _t3 - 1;
    if(_t14 == 0) {
        if( *4247616 == 0) {
             *__esp = 4247620;
            _InitializeCriticalSection$4();
            __esp = __esp - 4;
        }
         *4247616 = 1;
        return 1;
    } else {
        if(_t14 < 0) {
            if( *4247616 != 0) {
                L00401A50();
            }
            if( *4247616 == 1) {
                 *__esp = 4247620;
                 *4247616 = 0;
                _DeleteCriticalSection$4();
                __esp = __esp - 4;
            }
        } else {
            if(_t3 == 3 &&  *4247616 != 0) {
                L00401A50();
            }
        }
        return 1;
    }
}

void* L00401C90(
    int __ecx,                             // r2
    void* __edx,          // r3
    char* _a4,                             // _cfa_4
    void _a8                               // _cfa_8
)
{
    char _v16;                             // _cfa_fffffff0
    intOrPtr _v20;                         // _cfa_ffffffec
    signed int _v24;                       // _cfa_ffffffe8
    intOrPtr _v36;                         // _cfa_ffffffdc
    intOrPtr _v44;                         // _cfa_ffffffd4
    void* _v56;           // _cfa_ffffffc8
    char _v60;                             // _cfa_ffffffc4
    char* _v64;                            // _cfa_ffffffc0
    intOrPtr _v68;                         // _cfa_ffffffbc
    char _v84;                             // _cfa_ffffffac
    intOrPtr _v112;                        // _cfa_ffffff90
    char* _v116;                           // _cfa_ffffff8c
    char* _v120;                           // _cfa_ffffff88
    void* _v124;          // _cfa_ffffff84
    intOrPtr _v128;                        // _cfa_ffffff80
    intOrPtr _v136;                        // _cfa_ffffff78
    intOrPtr _v140;                        // _cfa_ffffff74 (outparam)
    intOrPtr _v144;                        // _cfa_ffffff70 (outparam)
    int _v148;                             // _cfa_ffffff6c (outparam)
    signed int _v172;                      // _cfa_ffffff54
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    void* _t67;           // _t67
    signed int _t70;                       // _t70
    intOrPtr _t73;                         // _t73
    void* _t74;           // _t74
    void* _t79;           // _t79
    _unknown_ _t80;                        // _t80
    struct _IO_FILE* _t81;   // _t81
    void* _t82;           // _t82
    char* _t83;                            // _t83
    void* _t87;           // _t87
    intOrPtr _t93;                         // _t93
    signed short _t95;                     // _t95
    signed int _t99;                       // _t99
    signed int _t100;                      // _t100
    signed char _t106;                     // _t106
    _unknown_ _t113;                       // _t113
    int _t114;                             // _t114
    int _t115;                             // _t115
    _unknown_ _t117;                       // _t117
    void* _t119;          // _t119
    void* _t120;          // _t120
    signed int _t122;                      // _t122
    _unknown_ _t123;                       // _t123

    _t94 = __edx;
    _t85 = __ecx;
    _push(_t117);
    _push(_t80);
    __esp = __esp - 20;
    _v20 = 23;
    _v24 = 1;
     *__esp = "Mingw runtime failure:\n";
    _t81 = 64 + __imp___iob;
    _v16 = _t81;
    _fwrite();
    _t67 = _vfprintf(_t81, _a4,  &_a8);
    _abort();
    _t119 =  &_a8;
    _push(_t123);
    _push(_t113);
    _t114 = _t85;
    _push(_t119);
    _t120 = _t94;
    _push(_t81);
    _t82 = _t67;
    __esp = __esp - 76;
    _v112 = 28;
    _v116 =  &_v84;
     *__esp = _t82;
    _VirtualQuery$12();
    __esp = __esp - 12;
    if( &_v84 == 0) {
        _v124 = _t82;
        L00401C90(_t85, _t94, "  VirtualQuery failed for %d bytes at address %p", 28);
        _t121 = _t120;
        _t115 = _t114;
        _t70 =  *4247644;
        if(_t70 == 0) {
            _t70 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__ -  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
             *4247644 = 1;
            if( &__RUNTIME_PSEUDO_RELOC_LIST_END__ <= 7) {
                goto L11;
            } else {
                _push(_t115);
                _push(_t121);
                _push(_t82);
                __esp = __esp - 32;
                if( &__RUNTIME_PSEUDO_RELOC_LIST_END__ <= 11) {
                    _t83 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
                    goto L30;
                } else {
                    _t121 = __RUNTIME_PSEUDO_RELOC_LIST_END__;
                    if(_t121 != 0 ||  *4237292 != 0) {
L24:
                        _t83 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
                        goto L25;
                    } else {
                        _t85 =  *4237296;
                        _t83 = 4237300;
                        if( *4237296 == 0) {
L30:
                            _t94 =  *_t83;
                            if( *_t83 != 0) {
L25:
                                if(_t83 <  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                                    _t121 = _t121;
                                    do {
                                        _t95 = _t83[4];
                                        _t83 =  &(_t83[8]);
                                        _t70 = _t95 + 4194304;
                                        _v148 =  *(_t95 + 4194304) +  *((intOrPtr*)(_t83 - 8));
                                        L1();
                                    } while(_t83 <  &__RUNTIME_PSEUDO_RELOC_LIST_END__);
                                }
                            } else {
                                _t70 = _t83[4];
                                if(_t70 == 0) {
                                    goto L18;
                                } else {
                                    goto L25;
                                }
                            }
                        } else {
                            _t83 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
L18:
                            _t70 = _t83[8];
                            if(_t70 != 1) {
                                L00401C90(_t85, _t94, "  Unknown pseudo relocation protocol version %d.\n", _t70);
                                0;
                                0;
                                0;
                                goto __imp____register_frame_info;
                            } else {
                                goto L19;
                            }
                            while(1) {
L19:
                                _t83 =  &(_t83[0xc]);
                                if(_t83 >=  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                                    goto L28;
                                }
                                _t99 = _t83[8] & 255;
                                _t121 = _t83[4];
                                _t87 =  *_t83;
                                _t70 = _t121 + 4194304;
                                _t115 =  *(_t87 + 4194304);
                                if(_t99 == 16) {
                                    _t121 =  *(_t121 + 4194304) & 65535;
                                    _t100 = _t121 & 65535;
                                    if(_t121 < 0) {
                                        _t100 = _t100 | -65536;
                                    }
                                    _v148 = _t100 - _t87 - 4194304 + _t115;
                                    L1();
                                    continue;
                                } else {
                                    if(_t99 == 32) {
                                        _v148 = _t115;
                                        L1();
                                        continue;
                                    } else {
                                        if(_t99 == 8) {
                                            _t106 =  *_t70 & 255;
                                            _t122 = _t106 & 255;
                                            if(_t106 < 0) {
                                                _t122 = _t122 | -256;
                                            }
                                            _t121 = _t122 - 4194304;
                                            _v148 = _t122 - 4194304 - _t87 + _t115;
                                            L1();
                                            continue;
                                        } else {
                                            _v172 = _t99;
                                             *__esp = "  Unknown pseudo relocation bit size %d.\n";
                                            _v148 = 0;
                                            _t70 = L00401C90(_t87, _t99);
                                            goto L24;
                                        }
                                    }
                                }
                                goto L28;
                            }
                        }
                    }
                }
L28:
                __esp =  &(__esp[0x20]);
                _pop(__ebx);
                _pop(__esi);
                _pop(__edi);
                return _t70;
            }
        } else {
L11:
            return _t70;
        }
    } else {
        _t73 = _v36;
        if(_t73 != 4) {
            if(_t73 == 64) {
                goto L3;
            } else {
                _v120 =  &_v60;
                _v124 = 64;
                _v64 =  &_v60;
                _v128 = _v44;
                 *__esp = _v56;
                _VirtualProtect$16();
                _v68 = _v36;
                __esp = __esp - 16;
                _t74 = _memcpy(_t82, _t120, _t114);
                _t93 = _v68;
                if(_t93 == 4 || _t93 == 64) {
                    goto L4;
                } else {
                    _v140 = _v60;
                    _v136 = _v64;
                    _v144 = _v44;
                    _t79 = _v56;
                     *__esp = _t79;
                    _VirtualProtect$16();
                    __esp = __esp - 16;
                    __esp =  &_v16;
                    _pop(__ebx);
                    _pop(__esi);
                    _pop(__edi);
                    _pop(__ebp);
                    return _t79;
                }
            }
        } else {
L3:
            _t74 = _memcpy(_t82, _t120, _t114);
L4:
            __esp =  &_v16;
            _pop(__ebx);
            _pop(__esi);
            _pop(__edi);
            _pop(__ebp);
            return _t74;
        }
    }
}

signed int L00401CE0(
    void* __eax,          // r0
    int __ecx,                             // r2
    void* __edx           // r3
)
{
    char _v16;                             // _cfa_fffffff0
    intOrPtr _v36;                         // _cfa_ffffffdc
    intOrPtr _v44;                         // _cfa_ffffffd4
    char _v56;                             // _cfa_ffffffc8
    char _v60;                             // _cfa_ffffffc4
    char* _v64;                            // _cfa_ffffffc0
    intOrPtr _v68;                         // _cfa_ffffffbc
    intOrPtr _v84;                         // _cfa_ffffffac
    char* _v88;                            // _cfa_ffffffa8
    char* _v92;                            // _cfa_ffffffa4
    void* _v96;           // _cfa_ffffffa0
    intOrPtr _v100;                        // _cfa_ffffff9c
    intOrPtr _v108;                        // _cfa_ffffff94
    intOrPtr _v112;                        // _cfa_ffffff90 (outparam)
    intOrPtr _v116;                        // _cfa_ffffff8c (outparam)
    char _v120;                            // _cfa_ffffff88 (outparam)
    signed int _v144;                      // _cfa_ffffff70
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t58;                       // _t58
    signed char* _t62;                     // _t62
    intOrPtr _t63;                         // _t63
    void* _t64;           // _t64
    char _t69;                             // _t69
    _unknown_ _t70;                        // _t70
    char* _t72;                            // _t72
    int _t76;                              // _t76
    intOrPtr _t82;                         // _t82
    signed short _t84;                     // _t84
    signed int _t88;                       // _t88
    signed int _t89;                       // _t89
    signed char _t95;                      // _t95
    _unknown_ _t102;                       // _t102
    _unknown_ _t104;                       // _t104
    _unknown_ _t106;                       // _t106
    signed int _t109;                      // _t109
    _unknown_ _t110;                       // _t110

    _t83 = __edx;
    _t74 = __ecx;
    _push(_t110);
    _push(_t102);
    _push(_t106);
    _push(_t70);
    __esp = __esp - 76;
    _v84 = 28;
    _v88 =  &_v56;
     *__esp = __eax;
    _VirtualQuery$12();
    __esp = __esp - 12;
    if( &_v56 == 0) {
        _v96 = __eax;
        L00401C90(__ecx, __edx, "  VirtualQuery failed for %d bytes at address %p", 28);
        _t108 = __edx;
        _t104 = __ecx;
        _t58 =  *4247644;
        if(_t58 == 0) {
            _t58 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__ -  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
             *4247644 = 1;
            if( &__RUNTIME_PSEUDO_RELOC_LIST_END__ <= 7) {
                goto L10;
            } else {
                _push(_t104);
                _push(_t108);
                _push(__eax);
                __esp = __esp - 32;
                if( &__RUNTIME_PSEUDO_RELOC_LIST_END__ <= 11) {
                    _t72 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
                    goto L29;
                } else {
                    _t108 = __RUNTIME_PSEUDO_RELOC_LIST_END__;
                    if(_t108 != 0 ||  *4237292 != 0) {
L23:
                        _t72 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
                        goto L24;
                    } else {
                        _t74 =  *4237296;
                        _t72 = 4237300;
                        if( *4237296 == 0) {
L29:
                            _t83 =  *_t72;
                            if( *_t72 != 0) {
L24:
                                if(_t72 <  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                                    _t108 = _t108;
                                    do {
                                        _t84 = _t72[4];
                                        _t72 =  &(_t72[8]);
                                        _v120 =  *((intOrPtr*)(_t84 + 4194304)) +  *((intOrPtr*)(_t72 - 8));
                                        _t58 = L00401CE0(_t84 + 4194304, 4,  &_v120);
                                    } while(_t72 <  &__RUNTIME_PSEUDO_RELOC_LIST_END__);
                                }
                            } else {
                                _t58 = _t72[4];
                                if(_t58 == 0) {
                                    goto L17;
                                } else {
                                    goto L24;
                                }
                            }
                        } else {
                            _t72 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
L17:
                            _t58 = _t72[8];
                            if(_t58 != 1) {
                                L00401C90(_t74, _t83, "  Unknown pseudo relocation protocol version %d.\n", _t58);
                                0;
                                0;
                                0;
                                goto __imp____register_frame_info;
                            } else {
                                goto L18;
                            }
                            while(1) {
L18:
                                _t72 =  &(_t72[0xc]);
                                if(_t72 >=  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                                    goto L27;
                                }
                                _t88 = _t72[8] & 255;
                                _t108 = _t72[4];
                                _t76 =  *_t72;
                                _t62 = _t108 + 4194304;
                                _t104 =  *((intOrPtr*)(_t76 + 4194304));
                                if(_t88 == 16) {
                                    _t108 =  *(_t108 + 4194304) & 65535;
                                    _t89 = _t108 & 65535;
                                    if(_t108 < 0) {
                                        _t89 = _t89 | -65536;
                                    }
                                    _v120 = _t89 - _t76 - 4194304 + _t104;
                                    _t58 = L00401CE0(_t62, 2,  &_v120);
                                    continue;
                                } else {
                                    if(_t88 == 32) {
                                        _v120 = _t104;
                                        _t58 = L00401CE0(_t62, 4,  &_v120);
                                        continue;
                                    } else {
                                        if(_t88 == 8) {
                                            _t95 =  *_t62 & 255;
                                            _t109 = _t95 & 255;
                                            if(_t95 < 0) {
                                                _t109 = _t109 | -256;
                                            }
                                            _t108 = _t109 - 4194304;
                                            _v120 = _t109 - 4194304 - _t76 + _t104;
                                            _t58 = L00401CE0(_t62, 1,  &_v120);
                                            continue;
                                        } else {
                                            _v144 = _t88;
                                             *__esp = "  Unknown pseudo relocation bit size %d.\n";
                                            _v120 = 0;
                                            _t58 = L00401C90(_t76, _t88);
                                            goto L23;
                                        }
                                    }
                                }
                                goto L27;
                            }
                        }
                    }
                }
L27:
                __esp = __esp + 32;
                _pop(__ebx);
                _pop(__esi);
                _pop(__edi);
                return _t58;
            }
        } else {
L10:
            return _t58;
        }
    } else {
        _t63 = _v36;
        if(_t63 != 4) {
            if(_t63 == 64) {
                goto L2;
            } else {
                _v92 =  &_v60;
                _v96 = 64;
                _v64 =  &_v60;
                _v100 = _v44;
                 *__esp = _v56;
                _VirtualProtect$16();
                _v68 = _v36;
                __esp = __esp - 16;
                _t64 = _memcpy(__eax, __edx, __ecx);
                _t82 = _v68;
                if(_t82 == 4 || _t82 == 64) {
                    goto L3;
                } else {
                    _v112 = _v60;
                    _v108 = _v64;
                    _v116 = _v44;
                    _t69 = _v56;
                     *__esp = _t69;
                    _VirtualProtect$16();
                    __esp = __esp - 16;
                    __esp =  &_v16;
                    _pop(__ebx);
                    _pop(__esi);
                    _pop(__edi);
                    _pop(__ebp);
                    return _t69;
                }
            }
        } else {
L2:
            _t64 = _memcpy(__eax, __edx, __ecx);
L3:
            __esp =  &_v16;
            _pop(__ebx);
            _pop(__esi);
            _pop(__edi);
            _pop(__ebp);
            return _t64;
        }
    }
}

signed int __pei386_runtime_relocator()
{// addr = 0x00401DD0
    char _v16;                             // _cfa_fffffff0
    signed int _v40;                       // _cfa_ffffffd8 (outparam)
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t24;                       // _t24
    signed char* _t28;                     // _t28
    _unknown_ _t29;                        // _t29
    char* _t30;                            // _t30
    int _t34;                              // _t34
    signed short _t40;                     // _t40
    signed int _t44;                       // _t44
    signed int _t45;                       // _t45
    signed char _t51;                      // _t51
    char _t56;                             // _t56
    signed int _t59;                       // _t59

    _t24 =  *4247644;
    if(_t24 == 0) {
        _t24 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__ -  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
         *4247644 = 1;
        if( &__RUNTIME_PSEUDO_RELOC_LIST_END__ <= 7) {
            goto L1;
        } else {
            _push(_t56);
            _push(_t58);
            _push(_t29);
            __esp = __esp - 32;
            if( &__RUNTIME_PSEUDO_RELOC_LIST_END__ <= 11) {
                _t30 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
                goto L20;
            } else {
                _t58 = __RUNTIME_PSEUDO_RELOC_LIST_END__;
                if(_t58 != 0 ||  *4237292 != 0) {
L14:
                    _t30 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
                    goto L15;
                } else {
                    _t32 =  *4237296;
                    _t30 = 4237300;
                    if( *4237296 == 0) {
L20:
                        _t39 =  *_t30;
                        if( *_t30 != 0) {
L15:
                            if(_t30 <  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                                _t58 = _t58;
                                do {
                                    _t40 = _t30[4];
                                    _t30 =  &(_t30[8]);
                                    _v16 =  *((intOrPtr*)(_t40 + 4194304)) +  *((intOrPtr*)(_t30 - 8));
                                    _t24 = L00401CE0(_t40 + 4194304, 4,  &_v16);
                                } while(_t30 <  &__RUNTIME_PSEUDO_RELOC_LIST_END__);
                            }
                        } else {
                            _t24 = _t30[4];
                            if(_t24 == 0) {
                                goto L8;
                            } else {
                                goto L15;
                            }
                        }
                    } else {
                        _t30 =  &__RUNTIME_PSEUDO_RELOC_LIST_END__;
L8:
                        _t24 = _t30[8];
                        if(_t24 != 1) {
                            L00401C90(_t32, _t39, "  Unknown pseudo relocation protocol version %d.\n", _t24);
                            0;
                            0;
                            0;
                            goto __imp____register_frame_info;
                        } else {
                            goto L9;
                        }
                        while(1) {
L9:
                            _t30 =  &(_t30[0xc]);
                            if(_t30 >=  &__RUNTIME_PSEUDO_RELOC_LIST_END__) {
                                goto L18;
                            }
                            _t44 = _t30[8] & 255;
                            _t58 = _t30[4];
                            _t34 =  *_t30;
                            _t28 = _t58 + 4194304;
                            _t56 =  *((intOrPtr*)(_t34 + 4194304));
                            if(_t44 == 16) {
                                _t58 =  *(_t58 + 4194304) & 65535;
                                _t45 = _t58 & 65535;
                                if(_t58 < 0) {
                                    _t45 = _t45 | -65536;
                                }
                                _v16 = _t45 - _t34 - 4194304 + _t56;
                                _t24 = L00401CE0(_t28, 2,  &_v16);
                                continue;
                            } else {
                                if(_t44 == 32) {
                                    _v16 = _t56;
                                    _t24 = L00401CE0(_t28, 4,  &_v16);
                                    continue;
                                } else {
                                    if(_t44 == 8) {
                                        _t51 =  *_t28 & 255;
                                        _t59 = _t51 & 255;
                                        if(_t51 < 0) {
                                            _t59 = _t59 | -256;
                                        }
                                        _t58 = _t59 - 4194304;
                                        _v16 = _t59 - 4194304 - _t34 + _t56;
                                        _t24 = L00401CE0(_t28, 1,  &_v16);
                                        continue;
                                    } else {
                                        _v40 = _t44;
                                         *__esp = "  Unknown pseudo relocation bit size %d.\n";
                                        _v16 = 0;
                                        _t24 = L00401C90(_t34, _t44);
                                        goto L14;
                                    }
                                }
                            }
                            goto L18;
                        }
                    }
                }
            }
L18:
            __esp = __esp + 32;
            _pop(__ebx);
            _pop(__esi);
            _pop(__edi);
            return _t24;
        }
    } else {
L1:
        return _t24;
    }
}

___chkstk_ms(
    _unknown_ __eax,                       // r0
    char _a4                               // _cfa_4
)
{// addr = 0x00401FC0
    _unknown_ __ecx;                       // r2
    intOrPtr* _t2;                         // _t2

    __eax = __eax;
    _t2 =  &_a4;
    if(__eax >= 4096) {
        do {
            _t2 = _t2 - 4096;
             *_t2 =  *_t2;
            __eax = __eax - 4096;
        } while(__eax > 4096);
    }
     *((intOrPtr*)(_t2 - __eax)) =  *((intOrPtr*)(_t2 - __eax));
    return __eax;
}

___mingw_vprintf(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8                           // _cfa_8
)
{// addr = 0x00401FF0
    intOrPtr _v28;                         // _cfa_ffffffe4
    intOrPtr _v32;                         // _cfa_ffffffe0
    intOrPtr _v36;                         // _cfa_ffffffdc
    intOrPtr _v40;                         // _cfa_ffffffd8

    _v36 = 0;
     *__esp = 12288;
    _v28 = _a8;
    _v32 = _a4;
    _v40 = __imp___iob + 32;
    return ___mingw_pformat();
}

signed int L00402030(
    char* __eax,                           // r0
    signed int __edx                       // r3
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ _t8;                         // _t8
    _unknown_ _t11;                        // _t11
    char* _t12;                            // _t12
    char _t13;                             // _t13
    char* _t17;                            // _t17
    signed int _t18;                       // _t18
    signed int _t20;                       // _t20

    _push(_t20);
    _push(_t11);
    _t12 = __eax;
    if(__eax == 0) {
L10:
        _t18 = 0;
        goto L11;
    } else {
        _t13 =  *__eax;
        _t8 = 0;
        _t20 = __edx & 32;
        _t17 = __eax + 1;
        if(_t13 != 0) {
            _t20 = _t20;
            do {
                _t18 = _t20;
                if(_t20 != 0 || _t13 != 127) {
L5:
                    if(_t8 != 0) {
                        if(_t13 == 93) {
                            if(_t8 <= 1) {
                                goto L13;
                            } else {
                                goto L17;
                            }
                        } else {
L13:
                            _t12 = _t17;
                            _t8 = _t8 + (_t13 != 33 & 255);
                            goto L9;
                        }
                    } else {
                        if(_t13 == 63 || _t13 == 42) {
L17:
                            _pop(__ebx);
                            _pop(__esi);
                            return 1;
                        } else {
                            _t8 = _t13 == 91;
                            _t12 = _t17;
                            goto L9;
                        }
                    }
                } else {
                    _t17 = _t12 + 2;
                    if(_t12[1] != 0) {
                        goto L5;
                    } else {
L11:
                        _pop(__ebx);
                        _pop(__esi);
                        return _t18;
                    }
                }
                goto L18;
L9:
                _t13 =  *_t12;
                _t17 = _t12 + 1;
            } while(_t13 != 0);
        }
        goto L10;
    }
L18:
}

signed char* L004020C0(
    signed char* __eax,                    // r0
    signed int __ecx,                      // r2
    _unknown_ __edx                        // r3
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed char* _t14;                     // _t14
    signed char* _t15;                     // _t15
    signed int _t18;                       // _t18
    signed int _t19;                       // _t19
    signed int _t21;                       // _t21
    _unknown_ _t22;                        // _t22
    signed int _t23;                       // _t23
    signed int _t26;                       // _t26
    signed int _t27;                       // _t27
    signed int _t29;                       // _t29
    signed int _t31;                       // _t31
    signed int _t33;                       // _t33
    signed int _t35;                       // _t35
    signed int _t36;                       // _t36
    signed int _t37;                       // _t37
    _unknown_ _t39;                        // _t39
    signed char* _t41;                     // _t41
    signed int _t42;                       // _t42
    _unknown_ _t43;                        // _t43

    _t14 = __eax;
    _push(_t22);
    __esp = __esp - 4;
    _t23 =  *__eax & 255;
     *__esp = __ecx;
    _t36 = _t23;
    if(_t36 == 93) {
L27:
        if(_t36 == __edx) {
            _t15 =  &(_t14[1]);
            _t26 =  *__esp & 32;
            while(1) {
                _t33 =  *_t15 & 255;
                if(_t33 == 93) {
                    goto L57;
                }
                if(_t33 == 127) {
                    if(_t26 != 0) {
                        _t15 =  &(_t15[1]);
                        continue;
                    } else {
                        _t33 = _t15[1] & 255;
                        _t15 =  &(_t15[1]);
                        goto L52;
                    }
                } else {
L52:
                    _t15 =  &(_t15[1]);
                    if(_t33 != 0) {
                        continue;
                    } else {
                        goto L26;
                    }
                }
                goto L60;
            }
            goto L57;
        } else {
            _t27 = _t14[1] & 255;
            _t14 =  &(_t14[1]);
            goto L7;
        }
    } else {
        _t27 = _t23;
        if(_t36 != 45) {
            while(1) {
L7:
                _t23 = _t27;
                _t41 =  &(_t14[1]);
                if(_t23 == 93) {
                    break;
                }
                if(_t23 != 45) {
                    if(_t23 == 0) {
                        break;
                    } else {
                        goto L4;
                    }
                } else {
                    _t23 = _t14[1] & 255;
                    if(_t23 == 93) {
                        _t37 = 45;
                        _t14 = _t41;
                        _t27 = 93;
                        if(45 != __edx) {
                            continue;
                        } else {
                            goto L30;
                        }
                    } else {
                        _t42 = _t23;
                        _t23 = _t42;
                        if(_t42 == 0) {
                            break;
                        } else {
                            _t41 =  &(_t14[2]);
                            if(_t37 >= _t42) {
                                _t18 = _t37;
                                goto L16;
                            } else {
                                _t18 = _t37 + 1;
                                if(_t37 != __edx) {
                                    while(_t42 > _t18) {
                                        _t18 = _t18 + 1;
                                        if(__edx == _t18 - 1) {
                                            goto L37;
                                        } else {
                                            continue;
                                        }
                                        goto L60;
                                    }
L16:
                                    if(_t42 >= _t18) {
L4:
                                        if(_t23 == 92 || _t23 == 47) {
                                            break;
                                        } else {
                                            _t37 = _t23;
                                            _t27 =  *_t41 & 255;
                                            _t15 = _t41;
                                            if(_t37 == __edx) {
L30:
                                                _t35 =  *__esp & 32;
                                                while(_t27 != 93) {
                                                    if(_t27 != 127) {
L31:
                                                        _t15 =  &(_t15[1]);
                                                        if(_t27 == 0) {
                                                            goto L26;
                                                        } else {
                                                            goto L32;
                                                        }
                                                    } else {
                                                        if(_t35 != 0) {
                                                            _t15 =  &(_t15[1]);
L32:
                                                            _t27 =  *_t15 & 255;
                                                            continue;
                                                        } else {
                                                            _t27 = _t15[1] & 255;
                                                            _t15 =  &(_t15[1]);
                                                            goto L31;
                                                        }
                                                    }
                                                    goto L60;
                                                }
L57:
                                                __esp =  &(__esp[1]);
                                                _pop(__ebx);
                                                return  &(_t15[1]);
                                            } else {
                                                continue;
                                            }
                                        }
                                    } else {
                                        if(__edx == _t18) {
L21:
                                            _t29 =  *__esp & 32;
                                            while(1) {
                                                _t19 =  *_t41 & 255;
                                                if(_t19 == 93) {
                                                    goto L42;
                                                }
                                                if(_t19 == 127) {
                                                    if(_t29 != 0) {
                                                        _t41 =  &(_t41[1]);
                                                        continue;
                                                    } else {
                                                        _t19 = _t41[1] & 255;
                                                        _t41 =  &(_t41[1]);
                                                        goto L24;
                                                    }
                                                } else {
L24:
                                                    _t41 =  &(_t41[1]);
                                                    if(_t19 != 0) {
                                                        continue;
                                                    } else {
                                                        goto L26;
                                                    }
                                                }
                                                goto L60;
                                            }
                                            goto L42;
                                        } else {
                                            _t43 = _t42 + 1;
                                            _t41 = _t41;
                                            while(_t18 != _t43) {
                                                _t18 = _t18 - 1;
                                                if(__edx != _t18) {
                                                    continue;
                                                } else {
                                                    goto L21;
                                                }
                                                goto L60;
                                            }
                                            goto L4;
                                        }
                                    }
                                } else {
L37:
                                    _t31 =  *__esp & 32;
                                    while(1) {
L38:
                                        _t21 =  *_t41 & 255;
                                        if(_t21 == 93) {
                                            break;
                                        } else {
                                            goto L39;
                                        }
                                        do {
L39:
                                            if(_t21 == 127) {
                                                if(_t31 != 0) {
                                                    _t41 =  &(_t41[1]);
                                                    goto L38;
                                                } else {
                                                    _t21 = _t41[1] & 255;
                                                    _t41 =  &(_t41[1]);
                                                    goto L40;
                                                }
                                            } else {
L40:
                                                _t41 =  &(_t41[1]);
                                                if(_t21 == 0) {
                                                    goto L26;
                                                } else {
                                                    goto L41;
                                                }
                                            }
                                            goto L60;
L41:
                                            _t21 =  *_t41 & 255;
                                        } while(_t21 != 93);
                                        break;
                                    }
L42:
                                    __esp =  &(__esp[1]);
                                    _pop(__ebx);
                                    return  &(_t41[1]);
                                }
                            }
                        }
                    }
                }
                goto L60;
            }
L26:
            __esp =  &(__esp[1]);
            _pop(__ebx);
            return 0;
        } else {
            goto L27;
        }
    }
L60:
}

L004022D0(
    _unknown_ __eax                        // r0
)
{
    intOrPtr __ebx;                        // r1
    signed int __edi;                      // r4
    _unknown_ _t11;                        // _t11
    void* _t13;           // _t13

    __esp = __esp - 28;
    if(__eax == 0) {
L6:
        _t11 = 0;
    } else {
        __edi =  *((intOrPtr*)(__eax + 12)) + 1;
        __ebp = 0 + __edi * 4;
        _t13 = _malloc(__ebp);
        __ebx = _t13;
         *((intOrPtr*)(__eax + 8)) = _t13;
        _t11 = 3;
        if(__ebx != 0) {
            __edx = __edi;
             *((intOrPtr*)(__eax + 4)) = 0;
            if(__edi > 0) {
                __ecx = __ebp - 4;
                while(1) {
                     *((intOrPtr*)(__ebx + __ecx)) = 0;
                    __ecx = __ecx - 4;
                    __edx = __edx - 1;
                    if(__edx == 0) {
                        goto L6;
                    }
                    __ebx =  *((intOrPtr*)(__eax + 8));
                }
            }
            goto L6;
        }
    }
    __esp = __esp + 28;
    return _t11;
}

signed int L00402330(
    signed char* __eax,                    // r0
    signed int __ecx,                      // r2
    char* __edx                            // r3
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t34;                       // _t34
    signed char* _t39;                     // _t39
    signed int _t41;                       // _t41
    signed int _t44;                       // _t44
    signed char* _t45;                     // _t45
    signed int _t49;                       // _t49
    signed char* _t50;                     // _t50
    signed char* _t52;                     // _t52
    signed char _t53;                      // _t53
    signed int _t55;                       // _t55
    signed char _t61;                      // _t61
    signed int _t63;                       // _t63
    signed int _t64;                       // _t64
    signed char* _t66;                     // _t66
    signed int _t68;                       // _t68
    signed int _t69;                       // _t69
    signed char* _t70;                     // _t70

    _t66 = __eax;
    __esp = __esp - 44;
     *(__esp + 16) = __ecx;
    if( *__edx == 46) {
        _t34 =  *__eax;
        if(_t34 == 46) {
            _t55 = 46;
            asm("o16 nop ");
            goto L2;
        } else {
            _t55 = _t34;
            _t41 = _t34 - 46;
            if(( *(__esp + 16) & 65536) != 0) {
                goto L2;
            } else {
                goto L14;
            }
        }
    } else {
        _t55 =  *__eax & 255;
L2:
        _t69 =  *(__esp + 16);
        __ebp = __edx + 1;
         *(__esp + 20) = _t69 & 32;
         *(__esp + 24) = _t69 & 16384;
        while(1) {
            _t61 = _t55;
            _t70 = __ebp - 1;
            _t39 =  &(_t66[1]);
            if(_t61 == 0) {
                break;
            }
            if(_t55 == 63) {
                if( *(__ebp - 1) == 0) {
                    _t41 = 63;
                    goto L14;
                } else {
                    _t66 = _t39;
                    goto L25;
                }
            } else {
                if(_t55 == 91) {
                    _t62 =  *(__ebp - 1);
                    if( *(__ebp - 1) == 0) {
                        _t41 = 91;
                        goto L14;
                    } else {
                        if(_t66[1] == 33) {
                            _t50 =  &(_t66[2]);
                            if(L004020C0(_t50,  *(__esp + 16), _t62) == 0) {
                                _t44 = _t66[2] & 255;
                                _t63 =  *(__esp + 20);
                                if(_t44 == 93) {
                                    _t50 =  &(_t66[3]);
                                    _t44 = _t66[3] & 255;
                                    _t63 =  *(__esp + 20);
L43:
                                    while(_t44 != 93) {
                                        if(_t44 != 127) {
L41:
                                            _t50 =  &(_t50[1]);
                                            if(_t44 == 0) {
                                                goto L49;
                                            } else {
                                                goto L42;
                                            }
                                        } else {
                                            if(_t63 != 0) {
                                                _t50 =  &(_t50[1]);
L42:
                                                _t44 =  *_t50 & 255;
                                                continue;
                                            } else {
                                                _t44 = _t50[1] & 255;
                                                _t50 =  &(_t50[1]);
                                                goto L41;
                                            }
                                        }
                                        goto L54;
                                    }
                                    _t66 =  &(_t50[1]);
                                    goto L25;
                                }
                                goto L43;
                            } else {
                                _t66 = _t50;
                                goto L25;
                            }
                        } else {
                            _t45 = L004020C0(_t39,  *(__esp + 16), _t62);
                            _t66 = _t45;
                            if(_t45 == 0) {
L49:
                                _t41 = 93;
                                goto L14;
                            } else {
                                goto L25;
                            }
                        }
                    }
                } else {
                    if(_t55 == 42) {
                        _t64 = _t66[1] & 255;
                        _t52 = _t39;
                        while(_t64 == 42) {
                            _t52 =  &(_t52[1]);
                            _t64 =  *_t52 & 255;
                        }
                        _t41 = 0;
                        if(_t64 == 0) {
                            goto L14;
                        } else {
                            _t68 =  *(__esp + 16) | 65536;
                            while(1) {
                                _t41 = L00402330(_t52, _t68, _t70);
                                if(_t41 == 0) {
                                    break;
                                }
                                _t70 =  &(_t70[1]);
                                if( *((char*)(_t70 - 1)) == 0) {
                                    goto L14;
                                } else {
                                    continue;
                                }
                                goto L54;
                            }
                            __esp = __esp + 44;
                            return 0;
                        }
                    } else {
                        if( *(__esp + 20) == 0) {
                            if(_t61 != 127) {
                                goto L8;
                            } else {
                                _t61 = _t66[1];
                                _t66 =  &(_t66[2]);
                                if(_t61 == 0) {
                                    goto L8;
                                }
                            }
                        } else {
L8:
                            _t66 = _t39;
                        }
                        _t53 =  *(__ebp - 1);
                        if(_t53 == 0) {
                            _t53 = 0;
                            goto L13;
                        } else {
                            _t49 =  *(__esp + 24);
                            if(_t49 != 0) {
                                _t70 = _t61 - _t53;
                            } else {
                                 *__esp = _t61;
                                __esp[7] = _t61;
                                _tolower();
                                 *__esp = _t53;
                                _tolower();
                                _t61 = __esp[7];
                                _t70 = _t49 - _t49;
                            }
                            if(_t70 == 0) {
L25:
                                _t55 =  *_t66 & 255;
                                __ebp = __ebp + 1;
                                continue;
                            } else {
L13:
                                _t41 = _t61 - _t53;
L14:
                                __esp = __esp + 44;
                                return _t41;
                            }
                        }
                    }
                }
            }
            goto L54;
        }
        _t41 =  ~( *_t70);
        goto L14;
    }
L54:
}

L004025B0(
    intOrPtr __eax,                        // r0
    _unknown_ __edx                        // r3
)
{
    _unknown_ _v24;                        // _cfa_ffffffe8 (outparam)
    _unknown_ __edi;                       // r4
    void* _t20;           // _t20
    intOrPtr _t22;                         // _t22
    void* _t28;           // _t28
    intOrPtr _t30;                         // _t30

    __esp = __esp - 16;
    _t20 = _realloc( *(__edx + 8), 8 + ( *((intOrPtr*)(__edx + 4)) +  *((intOrPtr*)(__edx + 12))) * 4);
    _t28 = _t20;
    if(_t20 == 0) {
        __esp = __esp + 16;
        return 1;
    } else {
        _t30 =  *((intOrPtr*)(__edx + 4));
         *(__edx + 8) = _t20;
        _t22 =  *((intOrPtr*)(__edx + 12));
        __ecx = _t30 + 1;
         *((intOrPtr*)(__edx + 4)) = __ecx;
         *((intOrPtr*)(_t28 + (_t30 + _t22) * 4)) = __eax;
         *((intOrPtr*)( *(__edx + 8) + (_t22 + __ecx) * 4)) = 0;
        __esp = __esp + 16;
        return 0;
    }
}

L00402620(
    intOrPtr __eax,                        // r0
    _unknown_ __edx                        // r3
)
{
    _unknown_ _v24;                        // _cfa_ffffffe8 (outparam)
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    void* _t21;           // _t21
    intOrPtr _t23;                         // _t23
    _unknown_ _t26;                        // _t26
    void* _t31;           // _t31
    _unknown_ _t33;                        // _t33
    intOrPtr _t34;                         // _t34
    _unknown_ _t36;                        // _t36

    if(__eax != 0) {
        if(__edx == 0) {
            goto L4;
        } else {
            _push(_t33);
            _push(_t36);
            _push(_t26);
            __esp = __esp - 16;
            _t21 = _realloc( *(__edx + 8), 8 + ( *((intOrPtr*)(__edx + 4)) +  *((intOrPtr*)(__edx + 12))) * 4);
            _t31 = _t21;
            if(_t21 == 0) {
                __esp = __esp + 16;
                _pop(__ebx);
                _pop(__esi);
                _pop(__edi);
                return 1;
            } else {
                _t34 =  *((intOrPtr*)(__edx + 4));
                 *(__edx + 8) = _t21;
                _t23 =  *((intOrPtr*)(__edx + 12));
                __ecx = _t34 + 1;
                 *((intOrPtr*)(__edx + 4)) = __ecx;
                 *((intOrPtr*)(_t31 + (_t34 + _t23) * 4)) = __eax;
                 *((intOrPtr*)( *(__edx + 8) + (_t23 + __ecx) * 4)) = 0;
                __esp = __esp + 16;
                _pop(__ebx);
                _pop(__esi);
                _pop(__edi);
                return 0;
            }
        }
    } else {
L4:
        return 1;
    }
}

L00402640(
    void* __eax,          // r0
    _unknown_ __edx                        // r3
)
{
    intOrPtr _t7;                          // _t7

    __esp = __esp - 20;
    _t4 =  *__eax;
    if( *__eax != 0) {
        L00402640(_t4, __edx);
    }
    L00402620( *((intOrPtr*)(__eax + 8)), __edx);
    _t7 =  *((intOrPtr*)(__eax + 4));
    if(_t7 != 0) {
        _t7 = L00402640(_t7, __edx);
    }
    _free(__eax);
    __esp = __esp + 20;
    return _t7;
}

signed int L00402680(
    char* __eax,                           // r0
    signed int __ecx,                      // r2
    signed int __edx,                      // r3
    intOrPtr _a4                           // _cfa_4
)
{
    _unknown_ _v16;                        // _cfa_fffffff0
    signed int _v32;                       // _cfa_ffffffe0
    void* _v36;           // _cfa_ffffffdc
    char _v44;                             // _cfa_ffffffd4
    signed int _v48;                       // _cfa_ffffffd0
    signed int _v52;                       // _cfa_ffffffcc
    signed int _v56;                       // _cfa_ffffffc8
    void* _v60;           // _cfa_ffffffc4
    signed int _v64;                       // _cfa_ffffffc0
    void* _v68;           // _cfa_ffffffbc
    signed int _v72;                       // _cfa_ffffffb8
    char* _v76;                            // _cfa_ffffffb4
    signed int _v80;                       // _cfa_ffffffb0
    void* _v84;           // _cfa_ffffffac
    char* _v88;                            // _cfa_ffffffa8
    signed int _v92;                       // _cfa_ffffffa4
    signed int _v96;                       // _cfa_ffffffa0
    signed int _v97;                       // _cfa_ffffff9f
    signed int _v104;                      // _cfa_ffffff98
    signed int _v108;                      // _cfa_ffffff94
    char _v112;                            // _cfa_ffffff90
    intOrPtr _v116;                        // _cfa_ffffff8c (outparam)
    signed int _v120;                      // _cfa_ffffff88 (outparam)
    void* __ebx;          // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    int _t147;                             // _t147
    signed int _t153;                      // _t153
    signed int _t155;                      // _t155
    signed int _t157;                      // _t157
    _unknown_ _t162;                       // _t162
    signed int _t163;                      // _t163
    signed int _t164;                      // _t164
    signed int _t166;                      // _t166
    void* _t169;          // _t169
    void* _t171;          // _t171
    void* _t173;          // _t173
    signed int _t174;                      // _t174
    void* _t175;          // _t175
    signed int _t178;                      // _t178
    signed int _t181;                      // _t181
    signed int _t184;                      // _t184
    signed int _t186;                      // _t186
    signed int _t193;                      // _t193
    signed int _t197;                      // _t197
    signed int _t201;                      // _t201
    _unknown_ _t207;                       // _t207
    signed int _t208;                      // _t208
    char* _t209;                           // _t209
    signed char _t216;                     // _t216
    signed int _t217;                      // _t217
    signed int _t218;                      // _t218
    signed int _t223;                      // _t223
    signed int _t225;                      // _t225
    signed int _t226;                      // _t226
    signed int _t227;                      // _t227
    signed int _t229;                      // _t229
    char* _t233;                           // _t233
    signed int _t234;                      // _t234
    signed int _t236;                      // _t236
    signed int _t237;                      // _t237
    signed int _t239;                      // _t239
    char* _t241;                           // _t241
    void* _t243;          // _t243
    signed int _t251;                      // _t251
    signed int _t253;                      // _t253
    signed int _t256;                      // _t256
    char* _t258;                           // _t258
    void* _t261;          // _t261
    char* _t263;                           // _t263
    signed int _t265;                      // _t265
    void* _t266;          // _t266
    signed int _t274;                      // _t274
    void* _t275;          // _t275
    signed int _t276;                      // _t276
    signed int _t281;                      // _t281
    void* _t283;          // _t283
    signed int _t284;                      // _t284
    int _t286;                             // _t286
    char* _t287;                           // _t287
    char* _t288;                           // _t288
    signed int _t290;                      // _t290
    void* _t291;          // _t291

    __ebx = __eax;
    _v56 = __edx;
    _v96 = __ecx;
    _t147 = _strlen(__eax);
    __esp = __esp - ___chkstk_ms(_t147 + 16 & 240);
    _t153 = ___mingw_dirname(_memcpy( &_v112, __ebx, _t147 + 1), _t152);
    _v32 = 0;
    _v76 = _t153;
    _t155 = L004022D0( &_v44);
    __eflags = _t155;
    if(_t155 == 0) {
        _t157 = L00402030(_v76, _v56);
        __eflags = _t157;
        if(_t157 == 0) {
            _t283 = __esp;
            _t162 = ___chkstk_ms(_strlen(_v76) + 16 & 240);
            _t251 = _v76;
            __esp = __esp - _t162;
            _t233 =  &_v112;
            while(1) {
L45:
                _t163 =  *_t251 & 255;
                __eflags = _t163 - 127;
                if(_t163 == 127) {
                    break;
                }
                _t233 =  &(_t233[1]);
                _t251 = _t251 + 1;
                __eflags = _t163;
                 *((char*)(_t233 - 1)) = _t163;
                if(_t163 != 0) {
                    continue;
                }
L47:
                _t164 = _strdup( &_v112);
                __esp = _t283;
                _t234 = _t164;
                _t155 = 1;
                __eflags = _t234;
                if(_t234 == 0) {
                    goto L1;
                } else {
                    _t155 = L004025B0(_t234,  &_v44);
                    goto L4;
                }
                goto L96;
            }
            _t229 =  *(_t251 + 1) & 255;
            _t233 =  &(_t233[1]);
            _t251 = _t251 + 2;
            __eflags = _t229;
             *((char*)(_t233 - 1)) = _t229;
            if(_t229 != 0) {
                goto L45;
            }
            goto L47;
        } else {
             *__esp =  &_v44;
            __eflags = _v56 | 128;
            _t155 = L00402680(_v76, _v96, _v56 | 128);
L4:
            __eflags = _t155;
            if(_t155 != 0) {
                goto L1;
            } else {
                _t166 =  *(__ebx + 1) & 255;
                __eflags = _t166 - 92;
                if(_t166 == 92) {
L60:
                    _t169 = __ebx + _strlen(_v76);
                    __eflags = __ebx - _t169;
                    if(__ebx >= _t169) {
                        _v68 = _t169;
                        _v97 =  *_t169 & 255;
                    } else {
                        _t265 =  *_t169 & 255;
                        __eflags = _t265 - 47;
                        if(_t265 == 47) {
L94:
                            _v97 = _t265;
                            _v68 = _t169;
                        } else {
                            __eflags = _t265 - 92;
                            if(_t265 != 92) {
                                while(1) {
                                    _t266 = _t169 - 1;
                                    __eflags = _t266 - __ebx;
                                    if(_t266 == __ebx) {
                                        break;
                                    }
                                    _t227 =  *(_t169 - 1) & 255;
                                    __eflags = _t227 - 92;
                                    if(_t227 == 92) {
L83:
                                        _v68 = _t266;
                                        _v97 = _t227;
                                    } else {
                                        __eflags = _t227 - 47;
                                        if(_t227 == 47) {
                                            goto L83;
                                        } else {
                                            _t169 = _t266;
                                            continue;
                                        }
                                    }
                                    goto L69;
                                }
                                _v68 = _t266;
                                _v97 =  *(_t169 - 1) & 255;
                            } else {
                                asm("o16 nop ");
                                goto L94;
                            }
                        }
                    }
L69:
                    __eflags = _v97 - 92;
                    if(_v97 != 92) {
                        __eflags = _v97 - 47;
                        if(_v97 == 47) {
                            goto L70;
                        } else {
                            _v97 = 92;
                        }
                    } else {
L70:
                        _t236 = _v97 & 255;
                        _t171 = _v68 + 1;
                        _t253 =  *_t171 & 255;
                        __eflags = _t253 - 92;
                        while(_t253 == 92) {
L71:
                            _t171 = _t171 + 1;
                            _t236 = _t253;
                            _t253 =  *_t171 & 255;
                            __eflags = _t253 - 92;
                        }
                        __eflags = _t253 - 47;
                        if(_t253 == 47) {
                            goto L71;
                        }
                        _v68 = _t171;
                        _v97 = _t236;
                    }
                    __eflags = _v76;
                    if(_v76 != 0) {
                        goto L10;
                    } else {
                        __ebx = _v68;
                        goto L9;
                    }
                } else {
                    __eflags = _t166 - 47;
                    if(__eflags == 0) {
                        goto L60;
                    } else {
                        asm("rep cmpsb ");
                        if(__eflags != 0) {
                            goto L60;
                        } else {
                            _v97 = 92;
L9:
                            __eflags = _v56 & 16;
                            _v68 = __ebx;
                            _v76 = 0;
                            if((_v56 & 16) != 0) {
                                _t223 = __ebx;
                                L00402030(_t223, _v56);
                                __eflags = _t223;
                                if(_t223 != 0) {
                                    goto L10;
                                } else {
                                     *__esp = __ebx;
                                    _t291 = __esp;
                                    _strlen();
                                    _t225 = _t223 + 16 & 240;
                                    ___chkstk_ms(_t225);
                                    __esp = __esp - _t225;
                                    _t263 =  &_v112;
                                    do {
                                        _t226 =  *__ebx & 255;
                                        __eflags = _t226 - 127;
                                        if(_t226 == 127) {
                                            _t226 =  *(__ebx + 1) & 255;
                                            __ebx = __ebx + 1;
                                        }
                                        _t263 =  &(_t263[1]);
                                        __ebx = __ebx + 1;
                                        __eflags = _t226;
                                         *((char*)(_t263 - 1)) = _t226;
                                    } while(_t226 != 0);
                                    __eax = _strdup( &_v112);
                                    __esp = _t291;
                                    L00402620(_t226, _a4);
                                    _t175 = _v36;
                                    _v64 = 0;
                                }
                            } else {
L10:
                                _t173 = _v36;
                                _v60 = _t173;
                                _t174 =  *_t173;
                                __eflags = _t174;
                                if(_t174 == 0) {
                                    _t175 = _v60;
                                    _v64 = 2;
                                } else {
                                    _t237 = _v56;
                                    _v64 = 2;
                                    _v108 = _t237 & 4;
                                    _t274 = _t237 & 32768;
                                    __eflags = _t274;
                                    _v52 = _t274;
                                    do {
                                        __eflags = _v64 - 1;
                                        if(_v64 != 1) {
                                            _t178 = ___mingw_opendir(_t174);
                                            __eflags = _t178;
                                            _v48 = _t178;
                                            if(_t178 == 0) {
                                                __ebx = _v108;
                                                __eflags = __ebx;
                                                if(__ebx != 0) {
L79:
                                                    _v64 = 1;
                                                    goto L51;
                                                } else {
                                                    _t276 = _v96;
                                                    __eflags = _t276;
                                                    if(_t276 == 0) {
                                                        goto L51;
                                                    } else {
                                                        __errno();
                                                        _v120 =  *_t178;
                                                        _t181 =  *_v60;
                                                         *__esp = _t181;
                                                         *_t276();
                                                        __eflags = _t181;
                                                        if(_t181 == 0) {
                                                            goto L51;
                                                        } else {
                                                            goto L79;
                                                        }
                                                    }
                                                }
                                                goto L53;
                                            } else {
                                                __eflags = _v76;
                                                if(_v76 == 0) {
                                                    _v80 = 0;
                                                } else {
                                                    _v80 = _strlen( *_v60);
                                                }
                                                _v72 = 0;
                                                _t184 = _v56 & 64;
                                                __eflags = _t184;
                                                _v92 = _t184;
                                                while(1) {
L17:
                                                    _t186 = ___mingw_readdir(_v48);
                                                    __eflags = _t186;
                                                    _t284 = _t186;
                                                    if(_t186 == 0) {
                                                        break;
                                                    }
                                                    __eflags = _v52;
                                                    if(_v52 == 0) {
L20:
                                                        __ebx = _t284 + 12;
                                                        _t193 = L00402330(_v68, _v56, __ebx);
                                                        __eflags = _t193;
                                                        if(_t193 != 0) {
                                                            continue;
                                                        } else {
                                                            _t256 =  *(_t284 + 6) & 65535;
                                                            _t239 = _v80;
                                                            _v84 = __esp;
                                                            __esp = __esp - ___chkstk_ms(_t239 + _t256 + 17 & 240);
                                                            _t197 = 0;
                                                            __eflags = _t239;
                                                            _v88 =  &_v112;
                                                            if(_t239 != 0) {
                                                                _t286 = _v80;
                                                                _v104 = _t256;
                                                                _memcpy( &_v112,  *_v60, _t286);
                                                                _t201 =  *(__esp + _t286 + 11) & 255;
                                                                _t256 = _v104;
                                                                __eflags = _t201 - 92;
                                                                if(_t201 == 92) {
L59:
                                                                    _t197 = _v80;
                                                                    goto L22;
                                                                } else {
                                                                    __eflags = _t201 - 47;
                                                                    if(_t201 == 47) {
                                                                        goto L59;
                                                                    } else {
                                                                        _t290 = _v80;
                                                                        _t197 = _t290 + 1;
                                                                        ((char*)( &_v112))[_t290] = _v97 & 255;
                                                                        goto L22;
                                                                    }
                                                                }
                                                                goto L53;
                                                            }
L22:
                                                            _v116 = _t256 + 1;
                                                            _v120 = __ebx;
                                                            __ebx = __esp;
                                                             *__esp =  &(((char*)( &_v112))[_t197]);
                                                            _memcpy();
                                                            _t207 = ___chkstk_ms(_strlen( &_v112) + 16 & 240);
                                                            _t287 = _v88;
                                                            __esp = __esp - _t207;
                                                            _t258 =  &_v112;
                                                            while(1) {
L24:
                                                                _t208 =  *_t287 & 255;
                                                                __eflags = _t208 - 127;
                                                                if(_t208 == 127) {
                                                                    break;
                                                                }
                                                                _t258 =  &(_t258[1]);
                                                                _t287 =  &(_t287[1]);
                                                                __eflags = _t208;
                                                                 *((char*)(_t258 - 1)) = _t208;
                                                                if(_t208 != 0) {
                                                                    continue;
                                                                }
L26:
                                                                _t209 = _strdup( &_v112);
                                                                __esp = __ebx;
                                                                __eflags = _t209;
                                                                _t288 = _t209;
                                                                if(_t209 == 0) {
                                                                    _v64 = 3;
                                                                } else {
                                                                    __eflags = _v64 - 2;
                                                                    _v64 = _v64 & 0xffffffffffffffff;
                                                                    __eflags = _v92;
                                                                    if(_v92 != 0) {
                                                                        L00402620(_t288, _a4);
                                                                    } else {
                                                                        __ebx = _v72;
                                                                        __eflags = __ebx;
                                                                        if(__ebx == 0) {
                                                                            __ebx = 0;
                                                                            _t241 = 0;
                                                                        } else {
                                                                            _t281 = _v56 & 16384;
                                                                            while(1) {
                                                                                _t217 =  *(__ebx + 8);
                                                                                __eflags = _t281;
                                                                                 *__esp = _t288;
                                                                                _v120 = _t217;
                                                                                if(_t281 != 0) {
                                                                                    goto L30;
                                                                                }
L34:
                                                                                _stricoll();
                                                                                _t243 =  *__ebx;
                                                                                _t261 =  *(__ebx + 4);
                                                                                __eflags = _t217;
                                                                                if(_t217 > 0) {
L31:
                                                                                    __eflags = _t261;
                                                                                    if(_t261 != 0) {
                                                                                        goto L32;
                                                                                    }
                                                                                } else {
L35:
                                                                                    _t261 = _t243;
                                                                                    __eflags = _t261;
                                                                                    if(_t261 != 0) {
L32:
                                                                                        __ebx = _t261;
                                                                                        _t217 =  *(__ebx + 8);
                                                                                        __eflags = _t281;
                                                                                         *__esp = _t288;
                                                                                        _v120 = _t217;
                                                                                        if(_t281 != 0) {
                                                                                            goto L30;
                                                                                        }
                                                                                    }
                                                                                }
L36:
                                                                                _t241 = _t217;
                                                                                goto L37;
L30:
                                                                                _t217 = _strcoll();
                                                                                _t243 =  *__ebx;
                                                                                __eflags = _t217;
                                                                                if(_t217 <= 0) {
                                                                                    goto L35;
                                                                                } else {
                                                                                    goto L31;
                                                                                }
                                                                                goto L36;
                                                                            }
                                                                        }
L37:
                                                                        _v88 = _t241;
                                                                        _t216 = _malloc(12);
                                                                        __eflags = _t216;
                                                                        if(_t216 == 0) {
L41:
                                                                            __eflags = _v72;
                                                                            if(_v72 == 0) {
                                                                                goto L81;
                                                                            }
                                                                        } else {
                                                                            __eflags = __ebx;
                                                                             *(_t216 + 8) = _t288;
                                                                             *(_t216 + 4) = 0;
                                                                             *_t216 = 0;
                                                                            if(__ebx == 0) {
                                                                                goto L41;
                                                                            } else {
                                                                                __eflags = _v88;
                                                                                if(_v88 <= 0) {
                                                                                     *__ebx = _t216;
                                                                                    __eflags = _v72;
                                                                                    if(_v72 == 0) {
L81:
                                                                                        _v72 = _t216;
                                                                                    }
                                                                                } else {
                                                                                     *(__ebx + 4) = _t216;
                                                                                    goto L41;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                __esp = _v84;
                                                                goto L17;
                                                            }
                                                            _t218 = _t287[1] & 255;
                                                            _t258 =  &(_t258[1]);
                                                            _t287 =  &(_t287[2]);
                                                            __eflags = _t218;
                                                             *((char*)(_t258 - 1)) = _t218;
                                                            if(_t218 != 0) {
                                                                goto L24;
                                                            }
                                                            goto L26;
                                                        }
                                                    } else {
                                                        __eflags =  *((intOrPtr*)(_t284 + 8)) - 16;
                                                        if( *((intOrPtr*)(_t284 + 8)) != 16) {
                                                            continue;
                                                        } else {
                                                            goto L20;
                                                        }
                                                    }
                                                    goto L51;
                                                }
                                                ___mingw_closedir(__ebx, _v48);
                                                __eflags = _v72;
                                                if(_v72 != 0) {
                                                    L00402640(_v72, _a4);
                                                }
                                            }
                                        }
L51:
                                        _v60 = _v60 + 4;
                                        _t275 = _v60;
                                        _free( *(_t275 - 4));
                                        _t174 =  *_t275;
                                        __eflags = _t174;
                                    } while(_t174 != 0);
                                    _t175 = _v36;
                                }
                            }
                        }
                    }
                }
L53:
                _free(_t175);
                return _v64;
            }
        }
    } else {
L1:
        return _t155;
    }
L96:
}

___mingw_glob(
    char* _a4,                             // _cfa_4
    signed int _a8,                        // _cfa_8
    signed int _a12,                       // _cfa_c
    intOrPtr* _a16                         // _cfa_10
)
{// addr = 0x00402C30
    char _v16;                             // _cfa_fffffff0
    char* _v32;                            // _cfa_ffffffe0
    intOrPtr _v36;                         // _cfa_ffffffdc
    char _v40;                             // _cfa_ffffffd8
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t21;                       // _t21
    _unknown_ _t26;                        // _t26
    signed int _t27;                       // _t27
    char* _t28;                            // _t28
    signed int _t31;                       // _t31
    _unknown_ _t34;                        // _t34
    char* _t35;                            // _t35
    intOrPtr _t38;                         // _t38
    intOrPtr _t39;                         // _t39
    char* _t42;                            // _t42
    _unknown_ _t44;                        // _t44
    signed int _t45;                       // _t45
    _unknown_ _t47;                        // _t47
    intOrPtr* _t48;                        // _t48

    _push(_t44);
    _push(_t47);
    _push(_t34);
    __esp = __esp - 28;
    _t48 = _a16;
    _t35 = _a4;
    _t45 = _a8;
    if(_t48 != 0 && (_t45 & 2) == 0) {
        _t48[3] = 0;
    }
    if( *_t48 != "glob-1.0-mingw32") {
        L004022D0(_t48);
         *_t48 = "glob-1.0-mingw32";
    }
    _t21 = L00402680(_t35, _a12, _t45, _t48);
    _t38 = _t21;
    if(_t21 == 2) {
        if(_t45 == 0) {
            goto L5;
        } else {
            _v36 = _t21;
            _v32 = __esp;
            _t26 = ___chkstk_ms(_strlen(_t35) + 16 & 240);
            _t39 = _v36;
            __esp = __esp - _t26;
            _t42 =  &_v40;
            while(1) {
L10:
                _t27 =  *_t35 & 255;
                if(_t27 == 127) {
                    break;
                }
                _t42 =  &(_t42[1]);
                _t35 =  &(_t35[1]);
                 *((char*)(_t42 - 1)) = _t27;
                if(_t27 != 0) {
                    continue;
                }
L12:
                _v36 = _t39;
                _t28 = _strdup( &_v40);
                __esp = _v32;
                L00402620(_t28, _t48);
                __esp =  &_v16;
                _pop(__ebx);
                _pop(__esi);
                _pop(__edi);
                return _v36;
                goto L13;
            }
            _t31 = _t35[1] & 255;
            _t42 =  &(_t42[1]);
            _t35 =  &(_t35[2]);
             *((char*)(_t42 - 1)) = _t31;
            if(_t31 != 0) {
                goto L10;
            }
            goto L12;
        }
    } else {
L5:
        __esp =  &_v16;
        _pop(__ebx);
        _pop(__esi);
        _pop(__edi);
        return _t38;
    }
L13:
}

char* ___mingw_dirname(
    char* __eax,                           // r0
    char* _a4                              // _cfa_4
)
{// addr = 0x00402D30
    char _v16;                             // _cfa_fffffff0
    unsigned int _v32;                     // _cfa_ffffffe0
    long* _v36;                            // _cfa_ffffffdc
    long* _v40;                            // _cfa_ffffffd8
    signed int _v42;                       // _cfa_ffffffd6
    char* _v48;                            // _cfa_ffffffd0
    int _v52;                              // _cfa_ffffffcc
    char _v63;                             // _cfa_ffffffc1
    _unknown_ _v68;                        // _cfa_ffffffbc (outparam)
    void* _v72;           // _cfa_ffffffb8 (outparam)
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    char* _t107;                           // _t107
    int _t110;                             // _t110
    long* _t116;                           // _t116
    signed int _t117;                      // _t117
    signed int _t119;                      // _t119
    signed int _t121;                      // _t121
    signed int _t122;                      // _t122
    long* _t123;                           // _t123
    long* _t125;                           // _t125
    signed int _t128;                      // _t128
    long* _t131;                           // _t131
    char* _t135;                           // _t135
    _unknown_ _t146;                       // _t146
    void* _t147;          // _t147
    long* _t149;                           // _t149
    signed int _t151;                      // _t151
    long* _t154;                           // _t154
    long* _t156;                           // _t156
    long* _t158;                           // _t158
    signed int _t160;                      // _t160
    signed int _t161;                      // _t161
    signed int _t162;                      // _t162
    long* _t165;                           // _t165
    long* _t168;                           // _t168
    int _t169;                             // _t169
    long* _t170;                           // _t170
    unsigned int _t172;                    // _t172
    char* _t173;                           // _t173
    int _t174;                             // _t174

    _push(_t146);
    __esp = __esp - 60;
    _t173 = _a4;
    _v72 = 0;
     *__esp = 2;
    _setlocale();
    _t147 = __eax;
    if(__eax != 0) {
        _t147 = _strdup(__eax);
    }
    _v72 = 4235684;
     *__esp = 2;
    _setlocale();
    if(_t173 == 0 ||  *_t173 == 0) {
L4:
        _t174 = _wcstombs(0, ".", 0) + 1;
        _t107 = _realloc( *4247656, _t174);
         *4247656 = _t107;
        _wcstombs(_t107, ".", _t174);
        _v72 = _t147;
         *__esp = 2;
        _setlocale();
        _free(_t147);
        __esp =  &_v16;
        _pop(__ebx);
        return  *4247656;
    } else {
        _v48 = __esp;
        _t110 = _mbstowcs(0, _t173, 0);
        __esp = __esp - ___chkstk_ms(_t110 + _t110 + 18 & 240);
        _v32 =  &_v63;
        _v32 = _v32 >> 1;
        _t116 = _v32 + _v32;
        _v36 = _t116;
        _t117 = _mbstowcs(_t116, _t173, _t110);
         *((short*)(_t116 + _t117 * 2)) = 0;
        _v52 = _t117;
        _t119 =  *(_v32 + _v32) & 65535;
        _v42 = _t119;
        if(_t117 <= 1) {
            _v40 = _v36;
L9:
            _t121 = _v42 & 65535;
            if(_t121 == 0) {
                __esp = _v48;
                goto L4;
            } else {
                _t158 = _v40;
                _t165 = _t158;
L14:
                while(1) {
                    if(_t121 != 92) {
                        if(_t121 == 47) {
                            goto L17;
                        } else {
                            _t121 = _t158[0] & 65535;
                            _t156 =  &(_t158[0]);
                            if(_t121 != 0) {
                                goto L13;
                            }
                        }
                    } else {
                        _t122 =  *_t158 & 65535;
                        if(_t122 == 92) {
L16:
                            _t158 =  &(_t158[0]);
L17:
                            _t122 =  *_t158 & 65535;
                            if(_t122 == 92) {
                                goto L16;
                            }
                        }
                        if(_t122 == 47) {
                            goto L16;
                        }
                        if(_t122 != 0) {
                            _t121 = _t158[0] & 65535;
                            _t165 = _t158;
                            _t156 =  &(_t158[0]);
                            if(_t121 != 0) {
L13:
                                _t158 = _t156;
                                continue;
                            }
                        }
                    }
                    _t149 = _v40;
                    if(_t149 < _t165) {
                        while(1) {
                            _t123 = _t165 - 2;
                            if(_t149 >= _t123) {
                                break;
                            }
                            _t162 =  *(_t165 - 2) & 65535;
                            if(_t162 != 92) {
                                if(_t162 == 47) {
                                    _t165 = _t123;
                                    continue;
                                }
                            } else {
                                _t165 = _t123;
                                continue;
                            }
                            break;
                        }
                        if(_v40 == _t123) {
                            if(_v42 == 92) {
L65:
                                _t123 = _v40;
                                if(_t123[0] == (_v42 & 65535)) {
                                    _t161 = _t123[1] & 65535;
                                    if(_t161 != 47) {
                                        _t123 = _t165;
                                        if(_t161 == 92) {
                                            _t123 = _v40;
                                        }
                                    }
                                }
                                goto L35;
                            } else {
                                _t123 = _v40;
                                if(_v42 != 47) {
                                    goto L35;
                                } else {
                                    goto L65;
                                }
                            }
                            goto L47;
                        }
L35:
                        _t123[0] = 0;
                        _t160 =  *(_v32 + _v32) & 65535;
                        _t125 = _v36;
                        if(_t160 != 92) {
                            if(_t160 == 47) {
                                goto L36;
                            } else {
                                goto L56;
                            }
                            goto L69;
                        } else {
                            do {
L36:
                                _t125 =  &(_t125[0]);
                                _t151 =  *_t125 & 65535;
                            } while(_t151 == 92 || _t151 == 47);
                            if(_t125 - _v36 <= 5) {
L56:
                                if( *((intOrPtr*)(_v32 + _v32 + 2)) != _t160) {
                                    goto L39;
                                } else {
                                    _t160 =  *_t125 & 65535;
                                    goto L40;
                                }
                                goto L69;
                            } else {
L39:
                                _t125 = _v36;
                            }
                        }
L40:
                        _t154 = _t125;
                        while(_t160 != 0) {
                            while(1) {
                                _t154 =  &(_t154[0]);
                                 *((short*)(_t154 - 2)) = _t160;
                                if(_t160 == 47) {
                                    break;
                                }
                                _t168 =  &(_t125[0]);
                                if( *_t125 == 92) {
                                    _t125 = _t168;
                                    break;
                                } else {
                                    _t160 = _t125[0] & 65535;
                                    _t125 = _t168;
                                    if(_t160 != 0) {
                                        continue;
                                    }
                                }
                                goto L45;
                            }
                            _t160 =  *_t125 & 65535;
                            if(_t160 != 47) {
                                if(_t160 == 92) {
                                    goto L51;
                                } else {
                                    continue;
                                }
                            } else {
                                _t173 = _t173;
                                do {
L51:
                                    _t125 =  &(_t125[0]);
                                    _t160 =  *_t125 & 65535;
                                } while(_t160 == 92 || _t160 == 47);
                                continue;
                            }
                            goto L47;
                        }
L45:
                         *_t154 = 0;
                        _t128 = _wcstombs(_t173, _v36, _v52);
                        if(_t128 != 255) {
                            _t173[_t128] = 0;
                        }
                    } else {
                        if(_v42 != 92 && _v42 != 47) {
                            _t170 = _v40;
                            _t131 =  &(_t170[0]);
                             *_t170 = 46;
                        } else {
                            _t131 =  &(_v40[0]);
                        }
                         *_t131 = 0;
                        _t169 = _wcstombs(0, _v36, 0) + 1;
                        _t135 = _realloc( *4247656, _t169);
                         *4247656 = _t135;
                        _t173 = _t135;
                        _wcstombs(_t173, _v36, _t169);
                    }
                    goto L47;
                }
            }
        } else {
            if(_t119 == 92 || _t119 == 47) {
                _v40 = _v36;
                _t172 = _v32;
                if(_t119 ==  *((intOrPtr*)(_t172 + _t172 + 2))) {
                    if( *((short*)(_t172 + _t172 + 4)) != 0) {
                        goto L9;
                    } else {
                        _t173 = _t173;
L47:
                        _v72 = _t147;
                         *__esp = 2;
                        _setlocale();
                        _free(_t147);
                        __esp = _v48;
                        __esp =  &_v16;
                        _pop(__ebx);
                        return _t173;
                    }
                } else {
                    goto L9;
                }
            } else {
                _v40 = _v36;
                if( *((short*)(_v32 + _v32 + 2)) == 58) {
                    _v40 =  &(_v36[1]);
                    _v42 =  *(_v32 + _v32 + 4) & 65535;
                }
                goto L9;
            }
        }
    }
L69:
}

L00403130(
    intOrPtr* __eax,                       // r0
    _unknown_ __edx                        // r3
)
{
    char _v12;                             // _cfa_fffffff4
    char _v288;                            // _cfa_fffffee0
    signed int _v332;                      // _cfa_fffffeb4
    char* _v344;                           // _cfa_fffffea8 (outparam)
    _unknown_ _v348;                       // _cfa_fffffea4 (outparam)
    _unknown_ _v352;                       // _cfa_fffffea0 (outparam)
    _unknown_ __ebx;                       // r1
    signed char _t20;                      // _t20

    __esp = __esp - 336;
    _v344 =  &_v332;
     *__esp = __eax;
    _FindNextFileA$8();
    __esp = __esp - 8;
    if(__eax != 0) {
         *((short*)(__edx + 6)) = ___mingw_snprintf(__edx + 12, 260, "%s",  &_v288);
        _t20 = _v332 & 88;
        if(_t20 <= 16) {
             *((intOrPtr*)(__edx + 8)) = _t20;
            __esp =  &_v12;
            return __eax;
        } else {
             *((intOrPtr*)(__edx + 8)) = 24;
            __esp =  &_v12;
            return __eax;
        }
    } else {
        _GetLastError$0();
        if(__eax != 18) {
            __errno();
             *__eax = 2;
        }
        __esp =  &_v12;
        return 0;
    }
}

L004031D0(
    intOrPtr* __eax,                       // r0
    _unknown_ __edx                        // r3
)
{
    char _v12;                             // _cfa_fffffff4
    char _v288;                            // _cfa_fffffee0
    signed int _v332;                      // _cfa_fffffeb4
    char* _v344;                           // _cfa_fffffea8 (outparam)
    _unknown_ _v348;                       // _cfa_fffffea4 (outparam)
    _unknown_ _v352;                       // _cfa_fffffea0 (outparam)
    _unknown_ __ebx;                       // r1
    intOrPtr* __esi;                       // r5
    short _t18;                            // _t18
    signed char _t22;                      // _t22

    __esp = __esp - 336;
    _v344 =  &_v332;
     *__esp = __eax;
    _FindFirstFileA$8();
    __esp = __esp - 8;
    __esi = __eax;
    if(__eax == 255) {
        __errno();
        _GetLastError$0();
         *__eax = __eax;
        if(__eax == 3) {
            __errno();
             *__eax = 2;
        } else {
            __errno();
            if( *__eax == 267) {
                __errno();
                 *__eax = 20;
            } else {
                __errno();
                if( *__eax != 2) {
                    __esi = __eax;
                    __errno();
                     *__eax = 22;
                }
            }
        }
    } else {
        _t18 = ___mingw_snprintf(__edx + 12, 260, "%s",  &_v288);
        _t22 = _v332 & 88;
         *((short*)(__edx + 6)) = _t18;
         *((intOrPtr*)(__edx + 8)) = _t22;
        if(_t22 > 16) {
             *((intOrPtr*)(__edx + 8)) = 24;
        }
    }
    __esp =  &_v12;
    return __esi;
}

void* ___mingw_opendir(
    intOrPtr* _a4                          // _cfa_4
)
{// addr = 0x004032A0
    void _v288;                            // _cfa_fffffee0
    intOrPtr _v308;                        // _cfa_fffffecc (outparam)
    intOrPtr _v312;                        // _cfa_fffffec8 (outparam)
    _unknown_ __ebx;                       // r1
    void* __esi;          // r5
    intOrPtr* _t26;                        // _t26
    signed int _t31;                       // _t31
    void* _t34;           // _t34
    intOrPtr _t38;                         // _t38
    signed int _t44;                       // _t44
    signed int _t47;                       // _t47
    void* _t51;           // _t51
    signed int _t52;                       // _t52
    void* _t55;           // _t55
    signed int _t56;                       // _t56
    signed int _t60;                       // _t60
    signed int _t62;                       // _t62

    _t26 = _a4;
    if(_t26 == 0) {
        __errno();
         *_t26 = 22;
        return 0;
    }
    if( *_t26 == 0) {
        __errno();
         *_t26 = 2;
        return 0;
    }
    _v308 = 260;
    _t51 =  &_v288;
    _v312 = _t26;
     *__esp =  &_v288;
    __fullpath();
    if(_v288 == 0) {
        do {
            _t56 =  *_t51;
            _t51 = _t51 + 4;
            _t31 = _t56 + -16843009 &  !_t56 & -2139062144;
        } while(_t31 == 0);
L11:
        if((_t31 & 32896) == 0) {
            _t31 = _t31 >> 16;
            _t51 = _t51 + 2;
        }
        asm("sbb ebx, 0x3");
        _t52 = _t51 -  &_v288;
L13:
         *((short*)( &_v288 + _t52)) = 42;
        _t34 = _malloc(_t52 + 285);
        __esi = _t34;
        if(_t34 == 0) {
            __errno();
             *_t34 = 12;
            return 0;
        }
        _memcpy(_t34 + 280,  &_v288, _t52 + 2);
        _t38 = L004031D0(_t34 + 280, __esi);
         *((intOrPtr*)(__esi + 272)) = _t38;
        if(_t38 == 255) {
            _free(__esi);
            return 0;
        }
         *((short*)(__esi + 4)) = 272;
         *((intOrPtr*)(__esi + 276)) = 0;
         *__esi = 0;
        return __esi;
    } else {
        goto L3;
    }
    do {
L3:
        _t60 =  *_t51;
        _t51 = _t51 + 4;
        _t44 = _t60 + -16843009 &  !_t60 & -2139062144;
    } while(_t44 == 0);
    if((_t44 & 32896) == 0) {
        asm("sbb ebx, 0x3");
        _t52 = _t51 + 2 -  &_v288;
        _t47 =  *(__esp + _t52 + 27) & 255;
        if(_t47 == 92) {
            goto L13;
        }
L6:
        if(_t47 == 47) {
            goto L13;
        }
         *((short*)( &_v288 + _t52)) = 92;
        _t55 =  &_v288;
        do {
            _t62 =  *_t55;
            _t55 = _t55 + 4;
            _t31 = _t62 + -16843009 &  !_t62 & -2139062144;
        } while(_t31 == 0);
        goto L11;
    }
    asm("sbb ebx, 0x3");
    _t52 = _t51 -  &_v288;
    _t47 =  *(__esp + _t52 + 27) & 255;
    if(_t47 == 92) {
        goto L13;
    }
    goto L6;
}

___mingw_readdir(
    intOrPtr _a4                           // _cfa_4
)
{// addr = 0x00403440
    intOrPtr __ebx;                        // r1
    intOrPtr* _t6;                         // _t6
    intOrPtr _t8;                          // _t8
    _unknown_ _t11;                        // _t11

    __ebx = _a4;
    if(__ebx == 0) {
        __errno();
         *_t6 = 9;
        return 0;
    }
    _t8 =  *((intOrPtr*)(__ebx + 276));
     *((intOrPtr*)(__ebx + 276)) = _t8 + 1;
    if(_t8 <= 0) {
L3:
        return __ebx;
    }
    _t11 = L00403130( *((intOrPtr*)(__ebx + 272)), __ebx);
    if(_t11 != 0) {
        goto L3;
    }
    return _t11;
}

___mingw_closedir(
    _unknown_ __ebx,                       // r1
    void* _a4             // _cfa_4
)
{// addr = 0x00403490
    _unknown_ _v8;                         // _cfa_fffffff8
    intOrPtr* _t4;                         // _t4
    _unknown_ _t5;                         // _t5
    void* _t7;            // _t7

    _push(__ebx);
    __esp = __esp - 20;
    _t7 = _a4;
    if(_t7 == 0) {
L4:
        __errno();
         *_t4 = 9;
        _t5 = -1;
    } else {
        _t4 =  *((intOrPtr*)(_t7 + 272));
         *__esp = _t4;
        _FindClose$4();
        __esp = __esp - 4;
        if(_t4 == 0) {
            goto L4;
        } else {
            _free(_t7);
            _t5 = 0;
        }
    }
    return _t5;
}

___mingw_rewinddir(
    _unknown_ __ebx,                       // r1
    intOrPtr _a4                           // _cfa_4
)
{// addr = 0x004034E0
    _unknown_ _v8;                         // _cfa_fffffff8
    intOrPtr* _t8;                         // _t8
    intOrPtr _t11;                         // _t11

    _push(__ebx);
    __esp = __esp - 20;
    _t11 = _a4;
    if(_t11 == 0) {
L2:
        __errno();
         *_t8 = 9;
        goto L3;
    } else {
        _t8 =  *((intOrPtr*)(_t11 + 272));
         *__esp = _t8;
        _FindClose$4();
        __esp = __esp - 4;
        if(_t8 != 0) {
            __edx = _t11;
            _t8 = L004031D0(_t11 + 280, _t11);
             *((intOrPtr*)(_t11 + 272)) = _t8;
            if(_t8 == 255) {
L3:
                return _t8;
            } else {
                 *((intOrPtr*)(_t11 + 276)) = 0;
                return _t8;
            }
        } else {
            goto L2;
        }
    }
}

L004035E0(
    intOrPtr __eax,                        // r0
    char _a4,                              // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    signed short _a12,                     // _cfa_c
    signed char _a16,                      // _cfa_10
    intOrPtr _a20,                         // _cfa_14
    intOrPtr _a24,                         // _cfa_18
    signed int* _a28                       // _cfa_1c
)
{
    char _v16;                             // _cfa_fffffff0
    char _v20;                             // _cfa_ffffffec
    signed char _v32;                      // _cfa_ffffffe0
    signed int _v36;                       // _cfa_ffffffdc
    intOrPtr _v40;                         // _cfa_ffffffd8
    char _v44;                             // _cfa_ffffffd4
    char* _v48;                            // _cfa_ffffffd0
    intOrPtr _v52;                         // _cfa_ffffffcc
    intOrPtr _v56;                         // _cfa_ffffffc8
    intOrPtr _v60;                         // _cfa_ffffffc4
    char* _v64;                            // _cfa_ffffffc0
    char* _v68;                            // _cfa_ffffffbc
    signed int _v72;                       // _cfa_ffffffb8
    signed char _t43;                      // _t43
    signed int _t46;                       // _t46
    _unknown_ _t47;                        // _t47
    signed int _t48;                       // _t48
    signed int _t49;                       // _t49

    __esp = __esp - 72;
    _v44 = _a4;
    _v40 = _a8;
    _v36 = _a12;
    _t43 = _a16;
    __fp0 = tword [esp+0x20];
    _v32 = _t43;
    asm("fxam ");
    asm("wait ");
    asm("fnstsw ax");
    st0 = __fp0;
    if((_t43 & 1) == 0) {
        if((_t43 & 4) != 0) {
            if((_t43 & 64) == 0) {
                _t48 = _v36 & 65535;
                _v20 = 1;
                _t46 = (_t48 & 32767) - 16446;
            } else {
                _v20 = 2;
                _t48 = _v36 & 65535;
                _t46 = -16445;
            }
        } else {
            _t48 = _v36 & 65535;
            _t46 = 0;
            _v20 = 0;
        }
L5:
        _t49 = _t48 & 32768;
L6:
         *_a28 = _t49;
        _v48 =  &_v16;
        _v60 = __eax;
        _v72 = _t46;
         *__esp = 4231180;
        _v52 = _a24;
        _v56 = _a20;
        _v64 =  &_v20;
        _v68 =  &_v44;
        _t47 = ___gdtoa(__fp0);
        __esp = __esp + 72;
        return _t47;
    }
    if((_t43 & 4) == 0) {
        _v20 = 4;
        _t46 = 0;
        _t49 = 0;
        goto L6;
    } else {
        _v20 = 3;
        _t48 = _v36 & 65535;
        _t46 = 0;
        goto L5;
    }
}

L004036E0(
    char __eax,                            // r0
    intOrPtr* __edx                        // r3
)
{
    intOrPtr* _v16;                        // _cfa_fffffff0
    intOrPtr _v24;                         // _cfa_ffffffe8
    _unknown_ __ebx;                       // r1
    int _t16;                              // _t16
    intOrPtr _t20;                         // _t20
    signed char _t22;                      // _t22

    _t22 =  *(__edx + 4);
    if((_t22 & 32) != 0) {
L2:
        if((_t22 & 16) != 0) {
             *__esp = __eax;
            _v16 = __edx;
            _v24 =  *__edx;
            _t16 = _fputc();
             *((intOrPtr*)(_v16 + 24)) =  *((intOrPtr*)(_v16 + 24)) + 1;
            return _t16;
        } else {
             *((char*)( *__edx +  *((intOrPtr*)(__edx + 24)))) = __eax;
            _t20 =  *((intOrPtr*)(__edx + 24));
            goto L4;
        }
    } else {
        _t20 =  *((intOrPtr*)(__edx + 24));
        if( *((intOrPtr*)(__edx + 28)) <= _t20) {
L4:
             *((intOrPtr*)(__edx + 24)) = _t20 + 1;
            return __eax;
        } else {
            goto L2;
        }
    }
}

L00403740(
    intOrPtr __eax,                        // r0
    intOrPtr* __ecx,                       // r2
    intOrPtr __edx                         // r3
)
{
    char _v44;                             // _cfa_ffffffd4
    char _v48;                             // _cfa_ffffffd0
    intOrPtr _v64;                         // _cfa_ffffffc0
    intOrPtr _v68;                         // _cfa_ffffffbc
    char* _v84;                            // _cfa_ffffffac
    _unknown_ _v88;                        // _cfa_ffffffa8 (outparam)
    char* __edi;                           // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t38;                         // _t38
    intOrPtr _t39;                         // _t39
    intOrPtr _t41;                         // _t41
    _unknown_ _t47;                        // _t47
    intOrPtr _t50;                         // _t50
    intOrPtr _t54;                         // _t54
    intOrPtr _t61;                         // _t61
    _unknown_ _t63;                        // _t63

    __ecx = __ecx;
    _t61 = __edx;
    __esp = __esp - 76;
    _v68 = __eax;
    _v84 =  &_v48;
    _wcrtomb( &_v44, 0);
    _t38 =  *((intOrPtr*)(__ecx + 12));
    if(_t38 >= 0 && _t61 > _t38) {
        _t61 = _t38;
    }
    _t39 =  *((intOrPtr*)(__ecx + 8));
    if(_t61 >= _t39) {
         *((intOrPtr*)(__ecx + 8)) = -1;
        goto L5;
    } else {
        _t50 = _t39 - _t61;
         *((intOrPtr*)(__ecx + 8)) = _t50;
        if(_t50 <= 0 || ( *(__ecx + 5) & 4) != 0) {
L5:
            _v64 = _t61;
            while(_v64 > 0) {
                _v68 = _v68 + 2;
                _v84 =  &_v48;
                _t47 = _wcrtomb( &_v44,  *(_v68 - 2) & 65535);
                if(_t47 <= 0) {
                    while(1) {
L12:
                        _t41 =  *((intOrPtr*)(__ecx + 8));
                         *((intOrPtr*)(__ecx + 8)) = _t41 - 1;
                        if(_t41 <= 0) {
                            break;
                        }
                        L004036E0(32, __ecx);
                    }
                    __esp = __esp + 76;
                    return _t41;
                } else {
                    _t63 =  &_v44 + _t47;
                    __edi =  &_v44;
                    do {
                        __edi = __edi + 1;
                        L004036E0( *((char*)(__edi - 1)), __ecx);
                    } while(__edi != _t63);
                    _v64 = _v64 - 1;
                    continue;
                }
            }
            goto L12;
        } else {
             *((intOrPtr*)(__ecx + 8)) = _t50 - 1;
            do {
                L004036E0(32, __ecx);
                _t54 =  *((intOrPtr*)(__ecx + 8));
                 *((intOrPtr*)(__ecx + 8)) = _t54 - 1;
            } while(_t54 != 0);
            goto L5;
        }
    }
}

L00403850(
    _unknown_ __eax,                       // r0
    intOrPtr* __ecx,                       // r2
    intOrPtr __edx                         // r3
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t20;                         // _t20
    intOrPtr _t21;                         // _t21
    intOrPtr _t22;                         // _t22
    intOrPtr _t27;                         // _t27
    intOrPtr _t31;                         // _t31
    _unknown_ _t32;                        // _t32
    _unknown_ _t41;                        // _t41
    intOrPtr _t42;                         // _t42

    __ecx = __ecx;
    __edi = __eax;
    _t20 =  *((intOrPtr*)(__ecx + 12));
    _push(_t41);
    _t42 = __edx;
    _push(_t32);
    if(_t20 >= 0 && __edx > _t20) {
        _t42 = _t20;
    }
    _t21 =  *((intOrPtr*)(__ecx + 8));
    if(_t42 >= _t21) {
         *((intOrPtr*)(__ecx + 8)) = -1;
        goto L7;
    } else {
        _t27 = _t21 - _t42;
         *((intOrPtr*)(__ecx + 8)) = _t27;
        if(_t27 <= 0 || ( *(__ecx + 5) & 4) != 0) {
L7:
            if(_t42 == 0) {
L11:
                _t22 =  *((intOrPtr*)(__ecx + 8));
                 *((intOrPtr*)(__ecx + 8)) = _t22 - 1;
                if(_t22 > 0) {
L10:
                    L004036E0(32, __ecx);
                    goto L11;
                }
L12:
                _pop(__ebx);
                _pop(__esi);
                return _t22;
            } else {
                goto L8;
            }
            do {
L8:
                __edi = __edi + 1;
                L004036E0( *((char*)(__edi - 1)), __ecx);
                _t42 = _t42 - 1;
            } while(_t42 != 0);
            _t22 =  *((intOrPtr*)(__ecx + 8));
             *((intOrPtr*)(__ecx + 8)) = _t22 - 1;
            if(_t22 <= 0) {
                goto L12;
            }
            goto L10;
        } else {
             *((intOrPtr*)(__ecx + 8)) = _t27 - 1;
            do {
                L004036E0(32, __ecx);
                _t31 =  *((intOrPtr*)(__ecx + 8));
                 *((intOrPtr*)(__ecx + 8)) = _t31 - 1;
            } while(_t31 != 0);
            goto L7;
        }
    }
}

L00403900(
    _unknown_ __eax,                       // r0
    _unknown_ __ecx,                       // r2
    _unknown_ __edx                        // r3
)
{
    char _v31;                             // _cfa_ffffffe1
    char _v32;                             // _cfa_ffffffe0
    _unknown_ __ebx;                       // r1
    char* __edi;                           // r4
    _unknown_ __esi;                       // r5
    _unknown_ __ebp;                       // r6
    signed int _t30;                       // _t30
    signed int _t31;                       // _t31

    __ecx = __ecx;
     *((intOrPtr*)(__ecx + 12)) = -1;
    if(__eax == 0) {
        _t30 =  *(__ecx + 4);
        if((_t30 & 256) == 0) {
            if((_t30 & 64) == 0) {
                __edi =  &_v32;
            } else {
                _v32 = 32;
                __edi =  &_v31;
            }
        } else {
            _v32 = 43;
            __edi =  &_v31;
        }
    } else {
        _t30 =  *(__ecx + 4);
        __edi =  &_v31;
        _v32 = 45;
    }
    _t31 = _t30 & 32;
    __esi = 0;
    do {
         *((char*)(__edi + __esi)) =  *(__edx + __esi) & 0xdf | _t31;
        __esi = __esi + 1;
    } while(__esi != 3);
    return L00403850( &_v32, __ecx, __edi + 3 -  &_v32);
}

L00403990(
    signed int __eax,                      // r0
    signed int __ecx,                      // r2
    signed int __edx                       // r3
)
{
    _unknown_ _v16;                        // _cfa_fffffff0
    char* _v32;                            // _cfa_ffffffe0
    signed int _v40;                       // _cfa_ffffffd8
    signed int _v44;                       // _cfa_ffffffd4
    intOrPtr _v48;                         // _cfa_ffffffd0
    intOrPtr _v52;                         // _cfa_ffffffcc
    signed int _v56;                       // _cfa_ffffffc8
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed char _t84;                      // _t84
    signed int _t86;                       // _t86
    intOrPtr _t87;                         // _t87
    signed char _t88;                      // _t88
    intOrPtr _t89;                         // _t89
    intOrPtr _t96;                         // _t96
    intOrPtr _t97;                         // _t97
    signed int _t100;                      // _t100
    signed int _t103;                      // _t103
    signed int _t104;                      // _t104
    intOrPtr _t106;                        // _t106
    signed int _t107;                      // _t107
    signed int _t112;                      // _t112
    intOrPtr _t119;                        // _t119
    intOrPtr _t123;                        // _t123
    intOrPtr _t126;                        // _t126
    signed int _t129;                      // _t129
    signed int _t131;                      // _t131
    char* _t132;                           // _t132
    char* _t133;                           // _t133
    char* _t136;                           // _t136
    char* _t137;                           // _t137
    char* _t139;                           // _t139

    _t103 = __ecx;
    _v40 = __edx;
    _t112 =  *(__ecx + 12);
    _v44 = __eax;
    _t106 =  *((intOrPtr*)(__ecx + 8));
    _t79 = ( !(_t112 >> 31) & _t112) + 23;
    if(( !(_t112 >> 31) & _t112) + 23 < _t106) {
        _t79 = _t106;
    }
    __esp = __esp - ___chkstk_ms(_t79 + 15 & 240);
    _v32 =  &_v44;
    _t84 =  *(_t103 + 4);
    if((_t84 & 128) != 0) {
        if(__edx < 0) {
            asm("adc edi, 0x0");
            _v44 =  ~__eax;
            _v40 =  ~__edx;
        } else {
             *(_t103 + 4) = _t84 & 127;
        }
    }
    _t107 = _v40;
    _t131 = _v44;
    _t136 = _v32;
    _t86 = _t107 | _t131;
    if(_t86 == 0) {
L9:
        _t132 = _t136;
        if(_t112 <= 0) {
L13:
            if(_t132 == _v32) {
                if( *(_t103 + 12) != 0) {
                     *_t132 = 48;
                    _t132 =  &(_t132[1]);
                }
            }
            _t87 =  *((intOrPtr*)(_t103 + 8));
            if(_t87 <= 0) {
L23:
                _t88 =  *(_t103 + 4);
                goto L24;
            } else {
                _t119 = _v32 - _t132 + _t87;
                _t88 =  *(_t103 + 4);
                 *((intOrPtr*)(_t103 + 8)) = _t119;
                if(_t119 <= 0) {
L24:
                    if((_t88 & 128) == 0) {
                        if((_t88 & 1) == 0) {
                            _t137 = _t132;
                            if((_t88 & 64) != 0) {
                                _t137 =  &(_t137[1]);
                                 *_t132 = 32;
                            }
                        } else {
                            _t137 =  &(_t132[1]);
                             *_t132 = 43;
                        }
                    } else {
                        _t137 =  &(_t132[1]);
                         *_t132 = 45;
                    }
                    _t133 = _v32;
                    if(_v32 >= _t137) {
L32:
                        _t89 =  *((intOrPtr*)(_t103 + 8));
                         *((intOrPtr*)(_t103 + 8)) = _t89 - 1;
                        if(_t89 > 0) {
                            goto L31;
                        }
                        goto L33;
                    } else {
                        asm("o16 nop ");
                        do {
                            _t137 = _t137 - 1;
                            L004036E0( *_t137, _t103);
                        } while(_t137 != _t133);
                        _t89 =  *((intOrPtr*)(_t103 + 8));
                         *((intOrPtr*)(_t103 + 8)) = _t89 - 1;
                        if(_t89 <= 0) {
L33:
                            return _t89;
                        }
                        asm("o16 nop ");
L31:
                        L004036E0(32, _t103);
                        goto L32;
                    }
                }
                if((_t88 & 448) != 0) {
                     *((intOrPtr*)(_t103 + 8)) = _t119 - 1;
                }
                if( *(_t103 + 12) < 0) {
                    if((_t88 & 1536) != 512) {
                        goto L19;
                    }
                    _t126 =  *((intOrPtr*)(_t103 + 8));
                     *((intOrPtr*)(_t103 + 8)) = _t126 - 1;
                    if(_t126 <= 0) {
                        goto L24;
                    } else {
                        goto L40;
                    }
                    do {
L40:
                        _t132 =  &(_t132[1]);
                         *((char*)(_t132 - 1)) = 48;
                        _t97 =  *((intOrPtr*)(_t103 + 8));
                         *((intOrPtr*)(_t103 + 8)) = _t97 - 1;
                    } while(_t97 > 0);
                } else {
L19:
                    if((_t88 & 4) != 0) {
                        goto L24;
                    }
                    _t123 =  *((intOrPtr*)(_t103 + 8));
                     *((intOrPtr*)(_t103 + 8)) = _t123 - 1;
                    if(_t123 <= 0) {
                        goto L24;
                    }
                    do {
                        L004036E0(32, _t103);
                        _t96 =  *((intOrPtr*)(_t103 + 8));
                         *((intOrPtr*)(_t103 + 8)) = _t96 - 1;
                    } while(_t96 > 0);
                }
                goto L23;
            }
        }
        _t129 = _t112 + _v32 - _t136;
        if(_t129 <= 0) {
            goto L13;
        }
        _t132 =  &(_t136[_t129]);
        do {
            _t136 =  &(_t136[1]);
             *((char*)(_t136 - 1)) = 48;
        } while(_t136 != _t132);
        goto L13;
    } else {
        _v44 = _t103;
        _t104 = _t107;
        _t139 = _t136;
        do {
             *__esp = _t131;
            _t139 =  &(_t139[1]);
            _v56 = _t104;
            _v52 = 10;
            _v48 = 0;
            ___umoddi3();
            _t100 = _t86 + 48;
             *((char*)(_t139 - 1)) = _t100;
             *__esp = _t131;
            _v56 = _t104;
            _v52 = 10;
            _v48 = 0;
            ___udivdi3();
            _t131 = _t100;
            _t86 = _t112 | _t131;
            _t104 = _t112;
        } while(_t86 != 0);
        _t103 = _v44;
        _t112 =  *(_t103 + 12);
        goto L9;
    }
}

signed int L00403BC0(
    signed char __eax,                     // r0
    signed int __ecx,                      // r2
    signed int __edx,                      // r3
    signed int _a4                         // _cfa_4
)
{
    _unknown_ _v16;                        // _cfa_fffffff0
    signed int _v32;                       // _cfa_ffffffe0
    signed int _v36;                       // _cfa_ffffffdc
    signed int _v40;                       // _cfa_ffffffd8
    signed int _v44;                       // _cfa_ffffffd4
    signed int _v48;                       // _cfa_ffffffd0
    signed char _v52;                      // _cfa_ffffffcc
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t122;                      // _t122
    _unknown_ _t126;                       // _t126
    signed int _t128;                      // _t128
    signed int _t145;                      // _t145
    signed int _t147;                      // _t147
    signed int _t150;                      // _t150
    signed int _t151;                      // _t151
    signed int _t152;                      // _t152
    signed int _t153;                      // _t153
    _unknown_ _t156;                       // _t156
    signed int _t157;                      // _t157
    signed int _t162;                      // _t162
    signed int _t163;                      // _t163
    signed char _t168;                     // _t168
    signed char _t169;                     // _t169
    signed int _t181;                      // _t181
    unsigned int _t184;                    // _t184
    signed int _t185;                      // _t185
    signed int _t186;                      // _t186
    signed int _t188;                      // _t188
    signed int _t190;                      // _t190
    signed int _t191;                      // _t191
    signed int _t192;                      // _t192
    signed int _t193;                      // _t193
    signed int _t194;                      // _t194
    _unknown_ _t196;                       // _t196

    _t184 = __ecx;
    _t188 = __edx;
    _v40 = __edx;
    _v48 = __ecx;
    _v44 = __eax;
    _v32 = 0;
    _v52 = 7;
    _v32 = _v32 + 3;
    _t150 =  *(_a4 + 12);
    _t162 =  *(_a4 + 8);
    _t115 = 0xfa + ( !(_t150 >> 31) & _t150) + 24;
    if(0xfa + ( !(_t150 >> 31) & _t150) + 24 < _t162) {
        _t115 = _t162;
    }
    __esp = __esp - ___chkstk_ms(_t115 + 15 & 240);
    _v36 = __esp;
    if((_v48 | _v40) == 0) {
L53:
         *(_a4 + 4) =  *(_a4 + 4) & -2049;
        _t122 = _v36;
        goto L12;
    } else {
        _t147 = __esp;
        _t157 = _v52 & 255;
        _v40 = _v44 & 0x20;
        do {
            _t122 = _t147 + 1;
            _t181 = _t188 & _t157;
            _t168 = _t181 + 48;
            if(_t168 <= 57) {
                 *(_t122 - 1) = _t168;
            } else {
                 *(_t122 - 1) = _t181 + 55 | _v40;
            }
            _t169 = _v32 & 255;
            _t188 = (_t184 << 32 | _t188) >> _t169;
            _t184 = _t184 >> _t169;
            if((_t169 & 32) != 0) {
                _t188 = _t184;
                _t184 = 0;
            }
        } while((_t184 | _t188) != 0);
        if(_v36 == _t122) {
            _t150 =  *(_a4 + 12);
            goto L53;
        }
        _t150 =  *(_a4 + 12);
L12:
        if(_t150 <= 0) {
L47:
            _t185 = _t122;
            if(_v44 == 111 && ( *(_a4 + 5) & 8) != 0) {
                _t185 = _t185 + 1;
                 *_t122 = 48;
            }
L16:
            if(_t185 == _v36) {
                if( *(_a4 + 12) != 0) {
                     *_t185 = 48;
                    _t185 = _t185 + 1;
                }
            }
            _t190 =  *(_a4 + 8);
            _t126 = _t185 - _v36;
            if(_t190 <= _t126) {
                _t191 = -1;
                _v32 = -2;
                 *(_a4 + 8) = -1;
                goto L23;
            } else {
                _t191 = _t190 - _t126;
                 *(_a4 + 8) = _t191;
                if(_t191 <= 0) {
L22:
                    _v32 = _t191 - 1;
L23:
                    _t128 = _v32;
                    _t151 = _t128;
                    if(_v44 == 111) {
L25:
                        if(_t191 <= 0) {
L27:
                            if(_t185 <= _v36) {
L31:
                                if(_t191 <= 0) {
L34:
                                    return _t128;
                                }
                                _t192 = _a4;
                                do {
                                    _t151 = _t151 - 1;
                                    L004036E0(32, _t192);
                                    _t128 = _t151 + 1;
                                } while(_t128 > 0);
                                goto L34;
                            }
                            _v32 = _t191;
                            _t193 = _v36;
                            _v36 = _t151;
                            _t152 = _t185;
                            _t186 = _a4;
                            do {
                                _t152 = _t152 - 1;
                                _t128 = L004036E0( *_t152, _t186);
                            } while(_t152 != _t193);
                            _t191 = _v32;
                            _t151 = _v36;
                            goto L31;
                        }
                        _t128 = _a4;
                        if(( *(_t128 + 5) & 4) == 0) {
                            _t153 = _v32;
                            _t194 = _t128;
                            do {
                                _t153 = _t153 - 1;
                                L004036E0(32, _t194);
                            } while(_t153 + 1 > 0);
                            _t163 = _v32;
                            _t128 =  !(_t163 >> 31) & _t163;
                            _t191 = _t163 - 1 - _t128;
                            _t151 = _t191 - 1;
                        }
                        goto L27;
                    }
                    _t128 = _a4;
                    if(( *(_t128 + 5) & 8) != 0) {
L40:
                        _t128 = _v44 & 255;
                        _t185 = _t185 + 2;
                         *(_t185 - 1) = 48;
                        _t151 = _v32;
                         *(_t185 - 2) = _t128;
                    }
                    goto L25;
                }
                if(_v44 == 111 || ( *(_a4 + 5) & 8) == 0) {
                    if( *(_a4 + 12) < 0) {
                        goto L43;
                    }
                    goto L22;
                } else {
                    _t145 = _t191 - 2;
                    if(_t145 <= 0) {
                        _v32 = _t191 - 3;
                        _t191 = _t145;
                        goto L40;
                    }
                    _t191 = _t145;
                    if( *(_a4 + 12) >= 0) {
                        goto L22;
                    }
L43:
                    if(( *(_a4 + 4) & 1536) != 512) {
                        goto L22;
                    }
                    _t196 = _t191 + _t185;
                    do {
                        _t185 = _t185 + 1;
                         *(_t185 - 1) = 48;
                    } while(_t185 != _t196);
                    _v32 = -2;
                    _t191 = -1;
                    goto L23;
                }
            }
        }
        _t156 = _t150 + _v36 - _t122;
        if(_t156 <= 0) {
            goto L47;
        }
        _t185 = _t122 + _t156;
        asm("o16 nop ");
        do {
            _t122 = _t122 + 1;
             *(_t122 - 1) = 48;
        } while(_t122 != _t185);
        goto L16;
    }
}

L00403EA0(
    intOrPtr* __eax,                       // r0
    intOrPtr __ecx,                        // r2
    signed char* __edx,                    // r3
    intOrPtr* _a4                          // _cfa_4
)
{
    _unknown_ _v16;                        // _cfa_fffffff0
    char _v32;                             // _cfa_ffffffe0
    signed short _v34;                     // _cfa_ffffffde
    intOrPtr* _v48;                        // _cfa_ffffffd0
    signed char* _v52;                     // _cfa_ffffffcc
    intOrPtr _v56;                         // _cfa_ffffffc8
    char _v60;                             // _cfa_ffffffc4
    _unknown_ _v64;                        // _cfa_ffffffc0 (outparam)
    char* _v68;                            // _cfa_ffffffbc (outparam)
    signed int _v72;                       // _cfa_ffffffb8 (outparam)
    _unknown_ __ebx;                       // r1
    intOrPtr* __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t77;                         // _t77
    intOrPtr* _t83;                        // _t83
    char _t84;                             // _t84
    signed int _t94;                       // _t94
    intOrPtr _t104;                        // _t104
    char _t105;                            // _t105
    intOrPtr _t111;                        // _t111
    signed char _t112;                     // _t112
    intOrPtr _t117;                        // _t117
    intOrPtr _t118;                        // _t118
    intOrPtr _t119;                        // _t119
    intOrPtr _t123;                        // _t123
    signed char* _t124;                    // _t124
    signed char* _t127;                    // _t127
    intOrPtr _t130;                        // _t130
    signed int _t133;                      // _t133
    signed int _t136;                      // _t136
    signed int _t141;                      // _t141
    intOrPtr _t148;                        // _t148
    signed int _t150;                      // _t150
    signed char* _t154;                    // _t154
    signed char* _t155;                    // _t155

    _t154 = __edx;
    _t123 = __ecx;
    __edi = _a4;
    _v48 = __eax;
    _t77 = __edi[2];
    if(__ecx <= 0) {
        if(_t77 <= 0) {
L3:
            if(_t77 < 0) {
L35:
                __edi[2] = -1;
L36:
                if(_v48 != 0) {
L15:
                    L004036E0(45, __edi);
L16:
                    _t130 = __edi[2];
                    if(_t130 <= 0 || ( *(__edi + 4) & 1536) != 512) {
                        if(_t123 <= 0) {
                            goto L61;
                        }
                        goto L19;
                    } else {
                        __edi[2] = _t130 - 1;
                        do {
                            L004036E0(48, __edi);
                            _t111 = __edi[2];
                            __edi[2] = _t111 - 1;
                        } while(_t111 > 0);
                        if(_t123 > 0) {
                            do {
L19:
                                _t141 =  *_t154 & 255;
                                _t105 = 48;
                                if(_t141 != 0) {
                                    _t154 =  &(_t154[1]);
                                    _t105 = _t141;
                                }
                                L004036E0(_t105, __edi);
                                _t123 = _t123 - 1;
                            } while(_t123 != 0);
L22:
                            _t83 = __edi[3];
                            if(_t83 <= 0) {
                                if(( *(__edi + 5) & 8) == 0) {
L27:
                                    if(_t123 == 0) {
L33:
                                        __edi[3] = _t83 - 1;
                                        if(_t83 > 0) {
                                            _t133 =  *_t154 & 255;
                                            _t84 = 48;
                                            if(_t133 != 0) {
                                                _t154 =  &(_t154[1]);
                                                _t84 = _t133;
                                            }
                                            L004036E0(_t84, __edi);
L32:
                                            _t83 = __edi[3];
                                            goto L33;
                                        }
                                        return _t83;
                                    }
L45:
                                    __edi[3] = _t83 + _t123;
                                    _t154 = _t154;
                                    do {
                                        L004036E0(48, __edi);
                                        _t123 = _t123 + 1;
                                    } while(_t123 < 0);
                                    goto L32;
                                }
                                if(__edi[4] != 253) {
L24:
                                    _t136 =  *(__edi + 20) & 65535;
L25:
                                    if(_t136 != 0) {
                                        _v48 = __esp;
                                        __esp = __esp - ___chkstk_ms(__edi[4] + 15 & 240);
                                        _v32 = 0;
                                        _v68 =  &_v32;
                                        _v72 = _t136;
                                         *__esp =  &_v60;
                                        _v52 =  &_v60;
                                        _t94 = _wcrtomb();
                                        if(_t94 <= 0) {
                                            L004036E0(46, __edi);
L44:
                                            __esp = _v48;
                                            _t83 = __edi[3];
                                            if(_t123 == 0) {
                                                goto L33;
                                            }
                                            goto L45;
                                        }
                                        _t127 = _v52;
                                        _v56 = _t123;
                                        _v52 = _t154;
                                        _t124 = _t127;
                                        _t155 =  &(_t127[_t94]);
                                        do {
                                            _t124 =  &(_t124[1]);
                                            L004036E0( *((char*)(_t124 - 1)), __edi);
                                        } while(_t124 != _t155);
                                        _t154 = _v52;
                                        _t123 = _v56;
                                        goto L44;
                                    }
                                    L004036E0(46, __edi);
                                    _t83 = __edi[3];
                                    goto L27;
                                }
L52:
                                _v32 = 0;
                                _localeconv();
                                _t104 = _mbrtowc( &_v34,  *_t83, 16,  &_v32);
                                if(_t104 <= 0) {
                                    _t136 =  *(__edi + 20) & 65535;
                                } else {
                                    _t136 = _v34 & 65535;
                                     *(__edi + 20) = _t136;
                                }
                                __edi[4] = _t104;
                                goto L25;
                            }
                            if(__edi[4] == 253) {
                                goto L52;
                            }
                            goto L24;
                        }
L61:
                        L004036E0(48, __edi);
                        goto L22;
                    }
                }
L37:
                _t112 =  *(__edi + 4);
                if((_t112 & 1) != 0) {
                    L004036E0(43, __edi);
                } else {
                    if((_t112 & 64) != 0) {
                        L004036E0(32, __edi);
                    }
                }
                goto L16;
            }
L4:
            _t148 = __edi[3];
            if(_t148 >= _t77) {
                goto L35;
            }
            _t117 = _t77 - _t148;
            __edi[2] = _t117;
            if(_t117 <= 0) {
                goto L36;
            }
            if(_t148 <= 0) {
                if(( *(__edi + 5) & 8) == 0) {
L8:
                    if(_v48 != 0) {
L48:
                        _t118 = _t117 - 1;
                        __edi[2] = _t118;
                        if(_t118 == 0) {
                            goto L36;
                        }
                        _t150 =  *(__edi + 4);
L10:
                        if((_t150 & 6) != 0) {
                            goto L36;
                        } else {
                            while(1) {
                                _t119 = __edi[2];
                                __edi[2] = _t119 - 1;
                                if(_t119 <= 0) {
                                    break;
                                }
                                L004036E0(32, __edi);
                            }
                            if(_v48 == 0) {
                                goto L37;
                            }
                            goto L15;
                        }
                    }
                    _t150 =  *(__edi + 4);
                    if((_t150 & 448) != 0) {
                        goto L48;
                    }
                    goto L10;
                }
                _t154 = _t154;
            }
            _t117 = _t117 - 1;
            __edi[2] = _t117;
            if(_t117 == 0) {
                goto L36;
            }
            goto L8;
        }
        _t77 = _t77 - 1;
        __edi[2] = _t77;
        goto L4;
    }
    if(__ecx >= _t77) {
        goto L35;
    } else {
        _t77 = _t77 - __ecx;
        __edi[2] = _t77;
        goto L3;
    }
}

L004041D0(
    intOrPtr* __eax,                       // r0
    _unknown_ __ecx,                       // r2
    signed char* __edx,                    // r3
    signed int _a4                         // _cfa_4
)
{
    signed int _v32;                       // _cfa_ffffffe0
    signed int _v36;                       // _cfa_ffffffdc
    intOrPtr* _v40;                        // _cfa_ffffffd8
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t32;                         // _t32
    _unknown_ _t33;                        // _t33
    _unknown_ _t42;                        // _t42
    _unknown_ _t45;                        // _t45
    signed int _t48;                       // _t48
    signed int _t51;                       // _t51
    intOrPtr _t59;                         // _t59
    signed int _t68;                       // _t68
    _unknown_ _t69;                        // _t69
    signed int _t70;                       // _t70
    _unknown_ _t71;                        // _t71
    intOrPtr _t72;                         // _t72

    _t51 = __ecx - 1;
    _push(_t69);
    _push(_t71);
    _t72 = 1;
    _push(_t45);
    __esp = __esp - 28;
    _v40 = __eax;
    _t70 = _a4;
    _v32 = _t51 >> 31;
    _v36 = _t51;
    _t48 = (_t51 * 1717986919 >> 32 >> 2) - (_t51 >> 31);
    if(_t48 != 0) {
        do {
            _t72 = _t72 + 1;
            _t68 = (_t48 * 1717986919 >> 32 >> 2) - (_t48 >> 31);
            _t48 = _t68;
        } while(_t68 != 0);
    }
    _t32 =  *((intOrPtr*)(_t70 + 32));
    if(_t72 < _t32) {
        _t72 = _t32;
    }
    _t59 =  *((intOrPtr*)(_t70 + 8));
    _t33 = _t72 + 2;
    if(_t59 > _t33) {
         *((intOrPtr*)(_t70 + 8)) = _t59 - _t33;
    } else {
         *((intOrPtr*)(_t70 + 8)) = -1;
    }
    L00403EA0(_v40, 1, __edx, _t70);
     *((intOrPtr*)(_t70 + 12)) =  *((intOrPtr*)(_t70 + 32));
     *(_t70 + 4) =  *(_t70 + 4) | 448;
    L004036E0( *(_t70 + 4) & 32 | 69, _t70);
     *((intOrPtr*)(_t70 + 8)) =  *((intOrPtr*)(_t70 + 8)) + _t72 + 1;
    _t42 = L00403990(_v36, _t70, _v32);
    __esp = __esp + 28;
    _pop(__ebx);
    _pop(__esi);
    _pop(__edi);
    return _t42;
}

L004042A0(
    _unknown_ __eax                        // r0
)
{
    intOrPtr _v16;                         // _cfa_fffffff0
    intOrPtr _v20;                         // _cfa_ffffffec
    intOrPtr _v24;                         // _cfa_ffffffe8
    intOrPtr _v28;                         // _cfa_ffffffe4
    char _v32;                             // _cfa_ffffffe0
    _unknown_ _v36;                        // _cfa_ffffffdc
    char* _v52;                            // _cfa_ffffffcc
    char* _v56;                            // _cfa_ffffffc8
    intOrPtr _v60;                         // _cfa_ffffffc4
    intOrPtr _v64;                         // _cfa_ffffffc0
    intOrPtr _v68;                         // _cfa_ffffffbc
    intOrPtr _v72;                         // _cfa_ffffffb8
    _unknown_ __ebx;                       // r1
    _unknown_ __esi;                       // r5
    intOrPtr _t19;                         // _t19
    intOrPtr _t20;                         // _t20
    _unknown_ _t26;                        // _t26
    _unknown_ _t29;                        // _t29
    _unknown_ _t32;                        // _t32

    __ebx = __eax;
    __esp = __esp - 68;
    _t19 =  *((intOrPtr*)(__eax + 12));
    if(_t19 < 0) {
         *((intOrPtr*)(__eax + 12)) = 6;
        _t20 = 7;
    } else {
        _t20 = _t19 + 1;
    }
    _v60 = _t20;
    tword [esp+0x30] = tword [esp+0x50];
    _v52 =  &_v36;
    _v56 =  &_v32;
     *__esp = _v28;
    _v72 = _v24;
    _v68 = _v20;
    _v64 = _v16;
    _t26 = L004035E0(2);
    _t33 = _v32;
    __esi = _t26;
    if(_v32 == -32768) {
        L00403900(_v36, __eax, _t26);
        _t29 = ___freedtoa(__eax, __esi);
        __esp = __esp + 68;
        return _t29;
    } else {
        L004041D0(_v36, _t33, _t26, __eax);
        _t32 = ___freedtoa(__eax, __esi);
        __esp = __esp + 68;
        return _t32;
    }
}

L00404350(
    intOrPtr* __eax                        // r0
)
{
    intOrPtr _v16;                         // _cfa_fffffff0
    intOrPtr _v20;                         // _cfa_ffffffec
    intOrPtr _v24;                         // _cfa_ffffffe8
    intOrPtr _v28;                         // _cfa_ffffffe4
    char _v32;                             // _cfa_ffffffe0
    _unknown_ _v36;                        // _cfa_ffffffdc
    char* _v52;                            // _cfa_ffffffcc
    char* _v56;                            // _cfa_ffffffc8
    intOrPtr _v60;                         // _cfa_ffffffc4
    intOrPtr _v64;                         // _cfa_ffffffc0
    intOrPtr _v68;                         // _cfa_ffffffbc
    intOrPtr _v72;                         // _cfa_ffffffb8
    intOrPtr* __ebx;                       // r1
    signed char* __edi;                    // r4
    intOrPtr _t25;                         // _t25
    signed char* _t31;                     // _t31
    _unknown_ _t34;                        // _t34
    intOrPtr _t37;                         // _t37
    _unknown_ _t38;                        // _t38
    intOrPtr _t43;                         // _t43

    __ebx = __eax;
    __esp = __esp - 64;
    _t25 =  *((intOrPtr*)(__eax + 12));
    if(_t25 < 0) {
         *((intOrPtr*)(__eax + 12)) = 6;
        _t25 = 6;
    }
    _v60 = _t25;
    tword [esp+0x30] = tword [esp+0x50];
    _v52 =  &_v36;
    _v56 =  &_v32;
     *__esp = _v28;
    _v72 = _v24;
    _v68 = _v20;
    _v64 = _v16;
    _t31 = L004035E0(3);
    _t41 = _v32;
    __edi = _t31;
    if(_v32 == -32768) {
        L00403900(_v36, __eax, _t31);
        _t34 = ___freedtoa(__eax, __edi);
        __esp = __esp + 64;
        return _t34;
    } else {
        L00403EA0(_v36, _t41, _t31, __eax);
        _t37 =  *((intOrPtr*)(__eax + 8));
         *((intOrPtr*)(__eax + 8)) = _t37 - 1;
        if(_t37 > 0) {
            do {
                L004036E0(32, __eax);
                _t43 =  *((intOrPtr*)(__eax + 8));
                 *((intOrPtr*)(__eax + 8)) = _t43 - 1;
            } while(_t43 > 0);
        }
        _t38 = ___freedtoa(__eax, __edi);
        __esp = __esp + 64;
        return _t38;
    }
}

L00404430(
    intOrPtr* __eax                        // r0
)
{
    intOrPtr _v16;                         // _cfa_fffffff0
    intOrPtr _v20;                         // _cfa_ffffffec
    intOrPtr _v24;                         // _cfa_ffffffe8
    intOrPtr _v28;                         // _cfa_ffffffe4
    char _v32;                             // _cfa_ffffffe0
    _unknown_ _v36;                        // _cfa_ffffffdc
    char* _v52;                            // _cfa_ffffffcc
    char* _v56;                            // _cfa_ffffffc8
    int _v60;                              // _cfa_ffffffc4
    intOrPtr _v64;                         // _cfa_ffffffc0
    intOrPtr _v68;                         // _cfa_ffffffbc
    intOrPtr _v72;                         // _cfa_ffffffb8
    intOrPtr* __ebx;                       // r1
    char* __edi;                           // r4
    _unknown_ __esi;                       // r5
    int _t41;                              // _t41
    char* _t47;                            // _t47
    _unknown_ _t50;                        // _t50
    int _t55;                              // _t55
    intOrPtr _t59;                         // _t59
    _unknown_ _t62;                        // _t62
    int _t64;                              // _t64
    intOrPtr _t69;                         // _t69
    intOrPtr _t77;                         // _t77
    intOrPtr _t78;                         // _t78
    int _t80;                              // _t80

    __ebx = __eax;
    __esp = __esp - 64;
    _t41 =  *(__eax + 12);
    _t80 = _t41;
    if(_t80 < 0) {
         *(__eax + 12) = 6;
        _t41 = 6;
    } else {
        if(_t80 == 0) {
             *(__eax + 12) = 1;
            _t41 = 1;
        }
    }
    _v60 = _t41;
    tword [esp+0x30] = tword [esp+0x50];
    _v52 =  &_v36;
    _v56 =  &_v32;
     *__esp = _v28;
    _v72 = _v24;
    _v68 = _v20;
    _v64 = _v16;
    _t47 = L004035E0(2);
    _t78 = _v32;
    __edi = _t47;
    if(_t78 == -32768) {
        L00403900(_v36, __eax, _t47);
        goto L13;
    } else {
        if(_t78 < 253) {
L10:
            if(( *(__eax + 5) & 8) != 0) {
                 *(__eax + 12) =  *(__eax + 12) - 1;
            } else {
                 *(__eax + 12) = _strlen(__edi) - 1;
            }
            L004041D0(_v36, _t78, __edi, __eax);
            goto L13;
        } else {
            _t55 =  *(__eax + 12);
            if(_t78 > _t55) {
                goto L10;
            } else {
                if(( *(__eax + 5) & 8) != 0) {
                     *(__eax + 12) = _t55 - _t78;
                } else {
                    _t64 = _strlen(__edi) - _t78;
                     *(__eax + 12) = _t64;
                    if(_t64 < 0) {
                        _t77 =  *((intOrPtr*)(__eax + 8));
                        if(_t77 > 0) {
                             *((intOrPtr*)(__eax + 8)) = _t64 + _t77;
                        }
                    }
                }
                L00403EA0(_v36, _t78, __edi, __eax);
                _t59 =  *((intOrPtr*)(__eax + 8));
                 *((intOrPtr*)(__eax + 8)) = _t59 - 1;
                if(_t59 <= 0) {
L13:
                    _t50 = ___freedtoa(__eax, __edi);
                    __esp = __esp + 64;
                    return _t50;
                } else {
                    goto L8;
                    do {
                    } while();
                    goto L21;
L8:
                    L004036E0(32, __eax);
                    _t69 =  *((intOrPtr*)(__eax + 8));
                     *((intOrPtr*)(__eax + 8)) = _t69 - 1;
                    if(_t69 > 0) {
                        goto L8;
                    } else {
                        _t62 = ___freedtoa(__eax, __edi);
                        __esp = __esp + 64;
                        return _t62;
                    }
                }
            }
        }
    }
L21:
}

L004045B0(
    signed int __eax                       // r0
)
{
    _unknown_ _v16;                        // _cfa_fffffff0
    char _v45;                             // _cfa_ffffffd3
    char _v46;                             // _cfa_ffffffd2
    signed short _v60;                     // _cfa_ffffffc4
    signed int _v64;                       // _cfa_ffffffc0
    signed int _v68;                       // _cfa_ffffffbc
    char _v72;                             // _cfa_ffffffb8
    signed short _v74;                     // _cfa_ffffffb6
    unsigned int _v80;                     // _cfa_ffffffb0
    signed int _v84;                       // _cfa_ffffffac
    signed char _v88;                      // _cfa_ffffffa8
    signed int _v92;                       // _cfa_ffffffa4
    char* _v96;                            // _cfa_ffffffa0
    signed int _v100;                      // _cfa_ffffff9c
    intOrPtr _v104;                        // _cfa_ffffff98
    char _v108;                            // _cfa_ffffff94
    _unknown_ _v112;                       // _cfa_ffffff90 (outparam)
    char* _v116;                           // _cfa_ffffff8c (outparam)
    _unknown_ _v120;                       // _cfa_ffffff88 (outparam)
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed short _t213;                    // _t213
    _unknown_ _t215;                       // _t215
    signed int _t218;                      // _t218
    signed int _t221;                      // _t221
    signed int _t222;                      // _t222
    signed int _t225;                      // _t225
    char* _t226;                           // _t226
    signed char _t227;                     // _t227
    signed char _t237;                     // _t237
    intOrPtr _t241;                        // _t241
    intOrPtr _t252;                        // _t252
    _unknown_ _t260;                       // _t260
    signed char _t269;                     // _t269
    signed char _t275;                     // _t275
    signed char _t281;                     // _t281
    signed char _t284;                     // _t284
    intOrPtr _t294;                        // _t294
    signed char _t299;                     // _t299
    char* _t300;                           // _t300
    intOrPtr _t301;                        // _t301
    signed int _t310;                      // _t310
    intOrPtr _t323;                        // _t323
    signed int _t328;                      // _t328
    signed int _t330;                      // _t330
    char* _t339;                           // _t339
    signed int _t343;                      // _t343
    signed int _t349;                      // _t349
    signed short _t351;                    // _t351
    signed short _t353;                    // _t353
    signed int _t354;                      // _t354
    signed int _t358;                      // _t358
    unsigned int _t359;                    // _t359
    signed int _t370;                      // _t370
    intOrPtr _t378;                        // _t378
    signed int _t390;                      // _t390
    signed int _t395;                      // _t395
    signed int _t404;                      // _t404
    _unknown_ _t407;                       // _t407
    _unknown_ _t409;                       // _t409
    _unknown_ _t429;                       // _t429

    _t393 = __eax;
    _t429 = st0;
    tword [ebp-0x40] = _t429;
    asm("fxam ");
    asm("wait ");
    asm("fnstsw ax");
    _t213 = __eax & 17664;
    if(_t213 == 256) {
        st0 = _t429;
        _t215 = L00403900(0, __eax, "NaN");
L83:
        return _t215;
    }
    _t351 = _v60 & 65535;
    _t293 = _t351 & 32768;
    if((_t351 & 32768) != 0) {
         *(__eax + 4) =  *(__eax + 4) | 128;
    }
    asm("fxam ");
    asm("wait ");
    asm("fnstsw ax");
    st0 = _t429;
    if((_t213 & 17664) == 1280) {
        _t215 = L00403900(_t293, _t393, "Inf");
        goto L83;
    } else {
        _t353 = _t351 & 32767;
        if(_t353 == 0) {
            _t354 = _v64;
            _t218 = _v68;
            if((_t354 | _t218) == 0) {
                _t404 = 0;
                _t218 = 0;
                _t354 = 0;
                goto L5;
            }
            if(_t354 < 0) {
                _t404 = -16382;
                goto L5;
            }
            _t349 = -16383;
            do {
                _t354 = (_t354 << 32 | _t218) << 1;
                _t310 = _t349;
                _t218 = _t218 + _t218;
                _t349 = _t349 - 1;
            } while(_t354 >= 0);
            _t404 = _t310;
            goto L5;
        } else {
            _t404 = _t353 + -16383;
            _t218 = _v68;
            _t354 = _v64;
L5:
            _t294 =  *((intOrPtr*)(_t393 + 12));
            if(_t294 <= 14) {
                while(_t354 >= 0) {
                    _t354 = (_t354 << 32 | _t218) << 1;
                    _t218 = _t218 + _t218;
                }
                _v84 = (_t354 << 32 | _t218) >> 1;
                _v80 = _t354 >> 1;
                _t221 = 4 << 14;
                if(0 != 0) {
                    _t221 = 0;
                }
                _v84 = _v84 + _t221;
                asm("adc [ebp-0x4c], edx");
                _t358 = _v80;
                _t222 = _v84;
                if(_t358 < 0) {
                    _t404 = _t404 + 1;
                } else {
                    _v84 = _t222 + _t222;
                    _v80 = (_t358 << 32 | _t222) << 1;
                }
                _t359 = _v80;
                _t218 = (_t359 << 32 | _v84) >> 15;
                _t354 = _t359 >> 15;
                if(0 != 0) {
                    _t218 = _t354;
                    _t354 = 0;
                }
L7:
                _v96 =  &_v46;
                _v88 =  &_v46;
                _v92 = _t393;
                do {
                    _t395 = _t218 & 15;
                    if((_t395 >> 31 ^ _t354 | _t218 ^ _t395) != 0) {
                        _t323 =  *((intOrPtr*)(_v92 + 12));
                        if(_t323 > 0) {
                             *((intOrPtr*)(_v92 + 12)) = _t323 - 1;
                        }
                        _t218 = (_t354 << 32 | _t218) >> 4;
                        _t354 = _t354 >> 4;
                        _v84 = _v88;
                        if(_t395 == 0) {
L25:
                            if(_v84 > _v96 ||  *((intOrPtr*)(_v92 + 12)) >= 0) {
                                _v88 = _v84 + 1;
L28:
                                _t328 = _t395 + 48;
L13:
                                 *_v84 = _t328;
                            } else {
                                _v88 = _v84;
                            }
                            goto L14;
                        }
L11:
                        _v88 = _v84 + 1;
                        if(_t395 <= 9) {
                            goto L28;
                        } else {
                            _v100 =  *(_v92 + 4);
                            _t328 = _t395 + 55 | _v100 & 0x20;
                            goto L13;
                        }
                    }
                    if(_v88 > _v96 || ( *(_v92 + 5) & 8) != 0) {
L20:
                        _t339 = _v88;
                        _v84 = _t339 + 1;
                         *_t339 = 46;
                        goto L21;
                    } else {
                        _v84 = _v88;
                        if( *((intOrPtr*)(_v92 + 12)) <= 0) {
L21:
                            if((_t218 ^ 1 | _t354) == 0) {
L24:
                                _t218 = 0;
                                _t354 = 0;
                                if(_t395 != 0) {
                                    goto L11;
                                }
                                goto L25;
                            }
                            _t343 = _t404 - 1;
                            do {
                                _t218 = (_t354 << 32 | _t218) >> 1;
                                _t404 = _t343;
                                _t354 = _t354 >> 1;
                                _t343 = _t404 - 1;
                            } while((_t218 ^ 1 | _t354) != 0);
                            goto L24;
                        } else {
                            _t404 = _t404;
                            goto L20;
                        }
                    }
L14:
                } while((_t354 | _t218) != 0);
                _t393 = _v92;
                if(_v88 == _v96) {
                    _t294 =  *((intOrPtr*)(_t393 + 12));
L99:
                    _t225 =  *(_t393 + 4);
                    if(_t294 <= 0) {
                        _v84 = _t225;
                        _t226 = _v96;
                        if((_t225 & 8) == 0) {
L102:
                            _v88 = _t226 + 1;
                             *_t226 = 48;
L45:
                            _t227 =  *(_t393 + 8);
                            _v100 = _t227;
                            if(_t227 <= 0) {
                                _v104 = 2;
                                _v92 = _t404;
L60:
                                if((_v84 & 128) != 0) {
L57:
                                    L004036E0(45, _t393);
L63:
                                    L004036E0(48, _t393);
                                    L004036E0( *(_t393 + 4) & 32 | 88, _t393);
                                    _t237 =  *(_t393 + 8);
                                    if(_t237 <= 0 || ( *(_t393 + 5) & 2) == 0) {
L67:
                                        _t299 = _v88;
                                        if(_v88 > _v96) {
                                            do {
                                                _t299 = _t299 - 1;
                                                _t239 =  *_t299;
                                                if( *_t299 != 46) {
                                                    L004036E0(_t239, _t393);
                                                    goto L70;
                                                }
                                                if( *((intOrPtr*)(_t393 + 16)) == 253) {
                                                    _v72 = 0;
                                                    _localeconv();
                                                    _t252 = _mbrtowc( &_v74,  *_t239, 16,  &_v72);
                                                    if(_t252 <= 0) {
                                                        _t370 =  *(_t393 + 20) & 65535;
                                                    } else {
                                                        _t370 = _v74 & 65535;
                                                         *(_t393 + 20) = _t370;
                                                    }
                                                     *((intOrPtr*)(_t393 + 16)) = _t252;
                                                } else {
                                                    _t370 =  *(_t393 + 20) & 65535;
                                                }
                                                if(_t370 == 0) {
                                                    L004036E0(46, _t393);
                                                } else {
                                                    _v84 = __esp;
                                                    __esp = __esp - ___chkstk_ms( *((intOrPtr*)(_t393 + 16)) + 15 & 240);
                                                    _v72 = 0;
                                                    _v116 =  &_v72;
                                                    _t260 = _wcrtomb( &_v108, _t370);
                                                    if(_t260 <= 0) {
                                                        L004036E0(46, _t393);
L79:
                                                        __esp = _v84;
                                                        goto L70;
                                                    }
                                                    _v88 = _t299;
                                                    _t300 =  &_v108;
                                                    _t407 = _t260 +  &_v108;
                                                    do {
                                                        _t300 = _t300 + 1;
                                                        L004036E0( *((char*)(_t300 - 1)), _t393);
                                                    } while(_t300 != _t407);
                                                    _t299 = _v88;
                                                    goto L79;
                                                }
L70:
                                            } while(_t299 != _v96);
                                            while(1) {
L81:
                                                _t241 =  *((intOrPtr*)(_t393 + 12));
                                                 *((intOrPtr*)(_t393 + 12)) = _t241 - 1;
                                                if(_t241 <= 0) {
                                                    break;
                                                }
                                                L004036E0(48, _t393);
                                            }
                                            L004036E0( *(_t393 + 4) & 32 | 80, _t393);
                                             *(_t393 + 8) =  *(_t393 + 8) + _v104;
                                             *(_t393 + 4) =  *(_t393 + 4) | 448;
                                            asm("cdq ");
                                            _t215 = L00403990(_v92, _t393, _t393);
                                            goto L83;
                                        }
                                        goto L81;
                                    } else {
                                         *(_t393 + 8) = _t237 - 1;
                                        do {
                                            L004036E0(48, _t393);
                                            _t269 =  *(_t393 + 8);
                                             *(_t393 + 8) = _t269 - 1;
                                        } while(_t269 > 0);
                                        goto L67;
                                    }
                                }
L61:
                                if((_v84 & 256) != 0) {
                                    L004036E0(43, _t393);
                                } else {
                                    if((_v84 & 64) != 0) {
                                        L004036E0(32, _t393);
                                    }
                                }
                                goto L63;
                            }
                            _t378 =  *((intOrPtr*)(_t393 + 12));
                            _t275 = _v88 - _v96;
                            _v92 = _t404;
                            if(_t378 > 0) {
                                _t275 = _t275 + _t378;
                            }
                            asm("sbb edx, edx");
                            _t409 = _t275 + (_v84 & 448) + 6;
                            _t330 = (_v92 * 1717986919 >> 32 >> 2) - (_v92 >> 31);
                            if(1717986919 == 0) {
                                _v104 = 2;
                                goto L52;
                            } else {
                                _t301 = 2;
                                do {
                                    _t409 = _t409 + 1;
                                    _t301 = _t301 + 1;
                                    _t390 = (1717986919 * _t330 >> 32 >> 2) - (_t330 >> 31);
                                    _t330 = _t390;
                                } while(_t390 != 0);
                                _v104 = _t301;
L52:
                                if(_v100 <= _t409) {
                                     *(_t393 + 8) = -1;
                                    goto L60;
                                }
                                _t281 = _v100 - _t409;
                                if((_v84 & 1536) != 0) {
                                     *(_t393 + 8) = _t281;
                                    goto L60;
                                }
                                 *(_t393 + 8) = _t281 - 1;
                                if(_t281 <= 0) {
                                    goto L60;
                                } else {
                                    goto L55;
                                }
                                do {
L55:
                                    L004036E0(32, _t393);
                                    _t284 =  *(_t393 + 8);
                                     *(_t393 + 8) = _t284 - 1;
                                } while(_t284 > 0);
                                _v84 =  *(_t393 + 4);
                                if((_v84 & 128) == 0) {
                                    goto L61;
                                }
                                goto L57;
                            }
                        }
L101:
                        _v46 = 46;
                        _t226 =  &_v45;
                        goto L102;
                    }
                    _v84 = _t225;
                    goto L101;
                }
                _v84 =  *(_t393 + 4);
                goto L45;
            }
            if((_t354 | _t218) == 0) {
                _v96 =  &_v46;
                goto L99;
            }
            goto L7;
        }
    }
}

int ___mingw_pformat()
{// addr = 0x00404B80
    char* __ebx;                           // r1
    signed int __edi;                      // r4
    signed int __esi;                      // r5
    char* _t277;                           // _t277
    int _t278;                             // _t278
    char _t281;                            // _t281
    signed char _t286;                     // _t286
    int _t287;                             // _t287
    signed int _t292;                      // _t292
    signed int _t300;                      // _t300
    signed int _t303;                      // _t303
    char* _t306;                           // _t306
    signed int _t307;                      // _t307

    __esp[0x1c] = __esp[0x1c] & 12288;
    _t306 = __esp[0x1f];
     *__esp = "PRINTF_EXPONENT_DIGITS";
    __ebp = __esp[0x20];
    __esp[0xb] = __esp[0x1d];
    __esp[0xd] = -1;
    __esp[0xe] = -1;
    __esp[0xf] = -3;
    __esp[0xc] = __esp[0x1c];
    __esp[0x10] = 0;
    __esp[0x11] = 0;
    __esp[0x12] = __esp[0x1e];
    _t277 = _getenv();
    if(_t277 == 0 ||  *_t277 - 48 > 2) {
        if((___mingw_output_format_flag & 1) != 0) {
            goto L2;
        } else {
            _t278 = 3;
            goto L3;
        }
    } else {
L2:
        _t278 = 2;
L3:
        __esp[0x13] = _t278;
        __esp[7] = __esp[0x1c] | 2;
        while(1) {
L4:
            _t281 =  *_t306;
            __ebx =  &(_t306[1]);
            __ecx = __ebx;
            if(_t281 == 0) {
                break;
            }
L5:
L5:
            if(_t281 != 37) {
                _t306 = __ebx;
                L004036E0(_t281,  &(__esp[0xb]));
            } else {
                __esp[0xe] = -1;
                __esp[0xd] = -1;
                __esp[5] = 0;
                __esp[0xc] = __esp[0x1c];
                _t300 = _t306[1] & 255;
                __esp[6] =  &(__esp[0xd]);
                __esp[4] = 0;
                goto L7;
            }
            continue;
L7:
            while(_t300 != 0) {
                while(1) {
L8:
                    _t286 = _t300 - 32;
                    _t303 = _t300;
                    _t307 = __ecx + 1;
                    if(_t286 > 90) {
                        break;
                    }
                    switch( *((intOrPtr*)((_t286 & 255) * 4 +  &M0040A1E4))) {
                        case 0:
                            __eax = __esp[4];
                            if(__eax != 0) {
                                goto L77;
                            }
                            __esp[0xc] = __esp[0xc] | 64;
                            __edx =  *(__ecx + 1) & 255;
                            __ecx = __esi;
                            goto L7;
                        case 1:
                            goto L70;
                        case 2:
                            __eax = __esp[4];
                            if(__eax != 0) {
                                goto L77;
                            }
                            __esp[0xc] = __esp[0xc] | 2048;
                            __edx =  *(__ecx + 1) & 255;
                            __ecx = __esi;
                            goto L7;
                        case 3:
                            __eax = __edi;
                            __edx =  &(__esp[0xb]);
                            __eax = L004036E0(__edi, __edx);
                            goto L4;
                        case 4:
                            __edi = __esp[6];
                            if(__edi == 0) {
                                goto L79;
                            }
                            if((__esp[4] & 5) != 0) {
                                __edx =  *(__ecx + 1) & 255;
                                __ecx = __esi;
                                __esp[6] = 0;
                                __esp[4] = 4;
                                goto L7;
                            }
                            __eax =  *__ebp;
                            __edi = __ebp + 4;
                            __edx = __esp[6];
                             *(__esp[6]) = __eax;
                            if(__eax < 0) {
                                __edx = __esp[4];
                                if(__esp[4] != 0) {
                                    __esp[0xe] = -1;
                                    __ebp = __edi;
                                    __edx =  *(__ecx + 1) & 255;
                                    __esp[6] = 0;
                                    __ecx = __esi;
                                    goto L7;
                                }
                                __esp[0xc] = __esp[0xc] | 1024;
                                __esp[0xd] =  ~(__esp[0xd]);
                            }
                            __edx =  *(__ecx + 1) & 255;
                            __ebp = __edi;
                            __ecx = __esi;
                            __esp[6] = 0;
                            goto L7;
                        case 5:
                            __eax = __esp[4];
                            if(__eax != 0) {
                                goto L77;
                            }
                            __esp[0xc] = __esp[0xc] | 256;
                            __edx =  *(__ecx + 1) & 255;
                            __ecx = __esi;
                            goto L7;
                        case 6:
                            __eax = __esp[4];
                            if(__eax != 0) {
L77:
                                _t300 =  *(__ecx + 1) & 255;
                                __ecx = _t307;
                                goto L7;
                            }
                            __esp[0xc] = __esp[0xc] | 1024;
                            __edx =  *(__ecx + 1) & 255;
                            __ecx = __esi;
                            goto L7;
                        case 7:
                            if(__esp[4] <= 1) {
                                __eax =  &(__esp[0xe]);
                                __esp[0xe] = 0;
                                __edx =  *(__ecx + 1) & 255;
                                __ecx = __esi;
                                __esp[6] = __eax;
                                __esp[4] = 2;
                                goto L7;
                            }
L79:
                            __edx =  *(__ecx + 1) & 255;
                            __ecx = __esi;
                            __esp[4] = 4;
                            goto L7;
                        case 8:
                            __eax = __esp[4];
                            if(__eax == 0) {
                                __esp[0xc] = __esp[0xc] | 512;
                                __edx =  *(__ecx + 1) & 255;
                                __ecx = __esi;
                                goto L7;
                            }
                            goto L70;
                        case 9:
                            if((__al & 4) != 0) {
                                goto L38;
                            }
                            goto L68;
                        case 0xa:
                            __esp[0xe] = -1;
                            goto L66;
                        case 0xb:
                            if((__al & 4) != 0) {
                                goto L50;
                            }
                            goto L64;
                        case 0xc:
                            if((__al & 4) != 0) {
                                goto L48;
                            }
                            goto L62;
                        case 0xd:
                            if((__al & 4) != 0) {
                                goto L46;
                            }
                            goto L60;
                        case 0xe:
                            __edx =  *(__ecx + 1) & 255;
                            if(__dl == 54) {
                                if( *(__ecx + 2) == 52) {
                                    __edx =  *(__ecx + 3) & 255;
                                    __ecx = __ecx + 3;
                                    __esp[5] = 3;
                                    __esp[4] = 4;
                                    goto L7;
                                }
                                __ecx = __esi;
                                __edx = 54;
                                __esp[5] = 2;
                                __esp[4] = 4;
                                goto L8;
                            }
                            if(__dl == 51) {
                                if( *(__ecx + 2) == 50) {
                                    __edx =  *(__ecx + 3) & 255;
                                    __ecx = __ecx + 3;
                                    __esp[5] = 2;
                                    __esp[4] = 4;
                                    goto L7;
                                }
                                __ecx = __esi;
                                __edx = 51;
                                __esp[5] = 2;
                                __esp[4] = 4;
                                goto L8;
                            }
                            __ecx = __esi;
                            __esp[5] = 2;
                            __esp[4] = 4;
                            goto L7;
                        case 0xf:
L18:
                            __esp[0xc] = __esp[0xc] | 4;
                            __ecx = __esi;
                            __edx =  *__esi & 255;
                            __esp[4] = 4;
                            goto L7;
                        case 0x10:
L93:
                            __ebx =  *__ebp;
                            __edi = __ebp + 4;
                            if(__ebx == 0) {
                                __ebx = L"(null)";
                            }
                             *__esp = __ebx;
                            __ebp = __edi;
                            _wcslen();
                            __ecx =  &(__esp[0xb]);
                            __edx = __eax;
                            __eax = __ebx;
                            __eax = L00403740(__ebx,  &(__esp[0xb]), __edx);
                            goto L4;
                        case 0x11:
                            __eax = __edi;
                            if(__esp[5] == 3) {
                                __ecx =  *__ebp;
                                __ebp = __ebp + 8;
                                __ebx =  *(__ebp - 4);
                                __esp[8] = __ecx;
                                __esp[9] =  *(__ebp - 4);
                            } else {
                                if(__esp[5] == 2) {
                                    __edi =  *__ebp;
                                    __ebp = __ebp + 4;
                                    __esp[9] = 0;
                                    __esp[8] = __edi;
                                } else {
                                    __edi =  *__ebp;
                                    __edx = __ebp + 4;
                                    __esp[9] = 0;
                                    __esp[8] = __edi;
                                    if(__esp[5] == 1) {
                                        __ecx = __esp[8] & 65535;
                                        __ebp = __edx;
                                        __esp[9] = 0;
                                        __esp[8] = __esp[8] & 65535;
                                    } else {
                                        __ebp = __edx;
                                        if(__esp[5] == 4) {
                                            __edx = __esp[8] & 255;
                                            __esp[9] = 0;
                                            __esp[8] = __esp[8] & 255;
                                        }
                                    }
                                }
                            }
                            if(__eax == 117) {
                                goto L55;
                            } else {
                                __edx = __esp[8];
                                __edi =  &(__esp[0xb]);
                                __ecx = __esp[9];
                                __eax = L00403BC0(__eax, __esp[9], __edx, __edi);
                                goto L4;
                            }
                        case 0x12:
                            __esp[0xc] = __esp[0xc] | 32;
                            __esp[0xc] = __esp[0xc] | 32;
                            if((__al & 4) == 0) {
L68:
                                __ebx = __ebp + 8;
                                tword [esp] =  *__ebp;
                                __ebp = __ebp + 8;
                                __eax =  &(__esp[0xb]);
                                __eax = L004045B0( &(__esp[0xb]));
                                goto L4;
                            }
L38:
                            __ebx = __ebp + 12;
                            tword [esp] = tword [ebp+0x0];
                            __ebp = __ebp + 12;
                            __eax =  &(__esp[0xb]);
                            __eax = L004045B0( &(__esp[0xb]));
                            goto L4;
                        case 0x13:
                            __edx = __esp[5];
                            __eax = __ebp;
                            __esp[0xe] = -1;
                            __edx = __esp[5] - 2;
                            if(__esp[5] - 2 <= 1) {
L66:
                                __eax =  *__ebp;
                                __ebx = __ebp + 4;
                                __edx = 1;
                                __ecx =  &(__esp[0xb]);
                                __ebp = __ebp + 4;
                                __esp[8] = __ax;
                                __eax =  &(__esp[8]);
                                __eax = L00403740( &(__esp[8]),  &(__esp[0xb]), 1);
                            } else {
                                __eax =  *__eax;
                                __ecx =  &(__esp[0xb]);
                                __edx = 1;
                                __ebp = __ebp + 4;
                                __esp[8] = __al;
                                __eax =  &(__esp[8]);
                                __eax = L00403850( &(__esp[8]),  &(__esp[0xb]), 1);
                            }
                            goto L4;
                        case 0x14:
                            __esp[0xc] = __esp[0xc] | 128;
                            if(__esp[5] == 3) {
                                __eax =  *__ebp;
                                __ebp = __ebp + 8;
                                __edx =  *(__ebp - 4);
                                __esp[8] = __eax;
                                __esp[9] =  *(__ebp - 4);
                            } else {
                                if(__esp[5] == 2) {
                                    __eax =  *__ebp;
                                    __ebp = __ebp + 4;
                                    __esp[8] = __eax;
                                    __esp[9] = __eax;
                                } else {
                                    __eax =  *__ebp;
                                    __edx = __ebp + 4;
                                    __esp[8] = __eax;
                                    __esp[9] = __eax;
                                    if(__esp[5] == 1) {
                                        __eax = __esp[8];
                                        __ebp = __edx;
                                        __esp[8] = __eax;
                                        __esp[9] = __eax;
                                    } else {
                                        __ebp = __edx;
                                        if(__esp[5] == 4) {
                                            __eax = __esp[8];
                                            __esp[8] = __eax;
                                            __esp[9] = __eax;
                                        }
                                    }
                                }
                            }
L55:
                            __eax = __esp[8];
                            __ecx =  &(__esp[0xb]);
                            __edx = __esp[9];
                            __eax = L00403990(__esp[8],  &(__esp[0xb]), __edx);
                            goto L4;
                        case 0x15:
                            __esp[0xc] = __esp[0xc] | 32;
                            __esp[0xc] = __esp[0xc] | 32;
                            if((__al & 4) == 0) {
L64:
                                __ebx = __ebp + 8;
                                tword [esp] =  *__ebp;
                                __ebp = __ebp + 8;
                                __eax =  &(__esp[0xb]);
                                __eax = L004042A0( &(__esp[0xb]));
                                goto L4;
                            }
L50:
                            __ebx = __ebp + 12;
                            tword [esp] = tword [ebp+0x0];
                            __ebp = __ebp + 12;
                            __eax =  &(__esp[0xb]);
                            __eax = L004042A0( &(__esp[0xb]));
                            goto L4;
                        case 0x16:
                            __esp[0xc] = __esp[0xc] | 32;
                            __esp[0xc] = __esp[0xc] | 32;
                            if((__al & 4) == 0) {
L62:
                                __ebx = __ebp + 8;
                                tword [esp] =  *__ebp;
                                __ebp = __ebp + 8;
                                __eax =  &(__esp[0xb]);
                                __eax = L00404350( &(__esp[0xb]));
                                goto L4;
                            }
L48:
                            __ebx = __ebp + 12;
                            tword [esp] = tword [ebp+0x0];
                            __ebp = __ebp + 12;
                            __eax =  &(__esp[0xb]);
                            __eax = L00404350( &(__esp[0xb]));
                            goto L4;
                        case 0x17:
                            __esp[0xc] = __esp[0xc] | 32;
                            __esp[0xc] = __esp[0xc] | 32;
                            if((__al & 4) == 0) {
L60:
                                __ebx = __ebp + 8;
                                tword [esp] =  *__ebp;
                                __ebp = __ebp + 8;
                                __eax =  &(__esp[0xb]);
                                __eax = L00404430( &(__esp[0xb]));
                                goto L4;
                            }
L46:
                            __ebx = __ebp + 12;
                            tword [esp] = tword [ebp+0x0];
                            __ebp = __ebp + 12;
                            __eax =  &(__esp[0xb]);
                            __eax = L00404430( &(__esp[0xb]));
                            goto L4;
                        case 0x18:
                            __edx =  *(__ecx + 1) & 255;
                            if(__dl == 104) {
                                __edx =  *(__ecx + 2) & 255;
                                __ecx = __ecx + 2;
                                __esp[5] = 4;
                                __esp[4] = 4;
                            } else {
                                __ecx = __esi;
                                __esp[5] = 1;
                                __esp[4] = 4;
                            }
                            goto L7;
                        case 0x19:
                            __edx =  *(__ecx + 1) & 255;
                            __ecx = __esi;
                            __esp[5] = 3;
                            __esp[4] = 4;
                            goto L7;
                        case 0x1a:
                            __esp[5] = 2;
                            if( *(__ecx + 1) == 108) {
                                __esi = __ecx + 2;
                                __esp[5] = 3;
                            }
                            goto L18;
                        case 0x1b:
                            if(__esp[5] == 4) {
                                __edx =  *__ebp;
                                __ebp = __ebp + 4;
                                __eax = __esp[0x11];
                                 *__edx = __al;
                            } else {
                                __eax =  *__ebp;
                                __edx = __esp[0x11];
                                if(__esp[5] == 1) {
                                     *__eax = __dx;
                                    __ebp = __ebp + 4;
                                } else {
                                    if(__esp[5] == 2) {
                                         *__eax = __edx;
                                        __ebp = __ebp + 4;
                                    } else {
                                         *__eax = __edx;
                                        if(__esp[5] == 3) {
                                            __edi = __edx;
                                            __ebp = __ebp + 4;
                                            __edi = __edx >> 31;
                                             *(__eax + 4) = __edi;
                                        } else {
                                            __ebp = __ebp + 4;
                                        }
                                    }
                                }
                            }
                            goto L4;
                        case 0x1c:
                            __eax = __esp[4];
                            if(__esp[4] == 0) {
                                __eax = __esp[0x1c];
                                if(__esp[0xc] == __esp[0x1c]) {
                                    __eax = __esp[7];
                                    __esp[0xe] = 8;
                                    __esp[0xc] = __esp[7];
                                }
                            }
                            __eax =  *__ebp;
                            __ebx = __ebp + 4;
                            __esp[9] = 0;
                            __ecx = __esp[9];
                            __ebp = __ebp + 4;
                            __esp[8] = __eax;
                            __edx = __esp[8];
                            __eax =  &(__esp[0xb]);
                             *__esp =  &(__esp[0xb]);
                            __eax = 120;
                            __eax = L00403BC0(120, __esp[9], __edx);
                            goto L4;
                        case 0x1d:
                            __edx = __esp[5];
                            __eax = __ebp;
                            __edx = __esp[5] - 2;
                            if(__esp[5] - 2 <= 1) {
                                goto L93;
                            }
                            __ebx =  *__eax;
                            __ebp = __ebp + 4;
                            if(__ebx == 0) {
                                __edx = 6;
                                __ebx = "(null)";
                            } else {
                                __edx = _strlen(__ebx);
                            }
                            __ecx =  &(__esp[0xb]);
                            __eax = __ebx;
                            __eax = L00403850(__ebx,  &(__esp[0xb]), __edx);
                            goto L4;
                        case 0x1e:
                            _t300 =  *(__ecx + 1) & 255;
                            __ecx = _t307;
                            __esp[5] = 2;
                            __esp[4] = 4;
                            if(_t300 != 0) {
                                goto L8;
                            } else {
                                goto L12;
                            }
                    }
                }
L70:
                _t287 = __esp[4];
                if(_t287 == 4 || _t300 - 48 > 9) {
                    _t306 = __ebx;
                    L004036E0(37,  &(__esp[0xb]));
                    goto L4;
                } else {
                    if(_t287 == 0) {
                        __esp[4] = 1;
                    } else {
                        if(_t287 == 2) {
                            __esp[4] = 3;
                        }
                    }
                    if(__esp[6] != 0) {
                        _t292 =  *(__esp[6]);
                        if(_t292 < 0) {
                             *(__esp[6]) = _t303 - 48;
                            _t300 =  *(__ecx + 1) & 255;
                            __ecx = _t307;
                            continue;
                        }
                         *(__esp[6]) = _t303 + (_t292 + _t292 * 4) * 2 - 48;
                    }
                    goto L77;
                }
            }
L12:
            _t306 = __ecx;
            _t281 =  *_t306;
            __ebx =  &(_t306[1]);
            __ecx = __ebx;
            if(_t281 != 0) {
                goto L5;
            }
            break;
        }
        return __esp[0x11];
    }
}

___mingw_snprintf(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    char _a16                              // _cfa_10
)
{// addr = 0x004054F0
    _unknown_ _v16;                        // _cfa_fffffff0 (outparam)
    _unknown_ _v20;                        // _cfa_ffffffec (outparam)
    _unknown_ _v24;                        // _cfa_ffffffe8 (outparam)

    return ___mingw_vsnprintf(_a4, _a8, _a12,  &_a16);
}

___mingw_vsnprintf(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    intOrPtr _a16                          // _cfa_10
)
{// addr = 0x00405520
    intOrPtr _v28;                         // _cfa_ffffffe4
    intOrPtr _v32;                         // _cfa_ffffffe0
    char _v36;                             // _cfa_ffffffdc
    intOrPtr _v40;                         // _cfa_ffffffd8
    intOrPtr __ebx;                        // r1
    intOrPtr __esi;                        // r5
    intOrPtr _t15;                         // _t15
    intOrPtr _t17;                         // _t17
    intOrPtr _t18;                         // _t18
    intOrPtr _t19;                         // _t19

    _t15 = _a8;
    __ebx = _a4;
    _t18 = _a12;
    __ecx = _a16;
    if(_t15 == 0) {
        _v40 = __ebx;
        _v28 = __ecx;
        _v32 = _t18;
        _v36 = 0;
         *__esp = 0;
        return ___mingw_pformat();
    } else {
        __esi = _t15 - 1;
        _v32 = _t18;
        _v28 = __ecx;
        _v36 = __esi;
        _v40 = __ebx;
         *__esp = 0;
        _t17 = ___mingw_pformat();
        _t19 = _t17;
        if(_t17 > __esi) {
            _t19 = __esi;
        }
         *((char*)(__ebx + _t19)) = 0;
        return _t17;
    }
}

signed int L004055A0(
    signed char* _a4,                      // _cfa_4
    signed char* _a8,                      // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    char* _a16,                            // _cfa_10
    _unknown_ _a20,                        // _cfa_14
    intOrPtr _a24                          // _cfa_18
)
{
    char _v12;                             // _cfa_fffffff4
    char _v15;                             // _cfa_fffffff1
    char _v16;                             // _cfa_fffffff0
    signed int _v40;                       // _cfa_ffffffd8
    signed char* _v44;                     // _cfa_ffffffd4
    signed int _v48;                       // _cfa_ffffffd0
    signed char* _v52;                     // _cfa_ffffffcc
    signed int _v56;                       // _cfa_ffffffc8
    signed char* _v60;                     // _cfa_ffffffc4
    signed char* __ebx;                    // r1
    char* __esi;                           // r5
    signed int _t39;                       // _t39
    signed int _t41;                       // _t41
    intOrPtr* _t45;                        // _t45
    char _t51;                             // _t51

    __esp = __esp - 48;
    __ebx = _a8;
    __esi = _a16;
    if(__ebx == 0) {
        __esp =  &_v12;
        return 0;
    } else {
        if(_a12 == 0) {
            _t39 = -2;
            goto L13;
        } else {
             *__esi = 0;
            _v16 =  *__esi;
            _t41 =  *__ebx & 255;
            if(_t41 == 0) {
                 *_a4 = 0;
                _t39 = 0;
                goto L13;
            } else {
                if(_a24 <= 1) {
L10:
                    if(_a20 != 0) {
                        _v40 = 1;
                        _v48 = 1;
                        _v52 = __ebx;
                        _v44 = _a4;
                        _t45 = _a20;
                        _v56 = 8;
                         *__esp = _t45;
                        _MultiByteToWideChar$24();
                        __esp = __esp - 24;
                        if(_t45 == 0) {
                            goto L19;
                        } else {
                            _t39 = 1;
                        }
                        goto L13;
                    } else {
                         *_a4 =  *__ebx & 255;
                        __esp =  &_v12;
                        return 1;
                    }
                } else {
                    if(_v16 != 0) {
                        _v15 = _t41;
                        _v40 = 1;
                        _v48 = 2;
                        _v44 = _a4;
                        _v52 =  &_v16;
                        goto L8;
                    } else {
                        _v56 = _t41;
                        _t51 = _a20;
                         *__esp = _t51;
                        _IsDBCSLeadByteEx$8();
                        __esp = __esp - 8;
                        if(_t51 == 0) {
                            goto L10;
                        } else {
                            if(_a12 <= 1) {
                                 *__esi =  *__ebx & 255;
                                _t39 = -2;
                                goto L13;
                            } else {
                                _v48 = 1;
                                _v56 = 2;
                                _v60 = __ebx;
                                _v52 = _a4;
L8:
                                _t45 = _a20;
                                _v56 = 8;
                                 *__esp = _t45;
                                _MultiByteToWideChar$24();
                                __esp = __esp - 24;
                                if(_t45 == 0) {
L19:
                                    __errno();
                                     *_t45 = 42;
                                    _t39 = -1;
L13:
                                    __esp =  &_v12;
                                    return _t39;
                                } else {
                                    __esp =  &_v12;
                                    return 2;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

_mbrtowc(
    signed char* _a4,                      // _cfa_4
    signed char* _a8,                      // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    char* _a16                             // _cfa_10
)
{// addr = 0x00405720
    char _v14;                             // _cfa_fffffff2
    _unknown_ _v40;                        // _cfa_ffffffd8 (outparam)
    _unknown_ _v44;                        // _cfa_ffffffd4 (outparam)
    _unknown_ _v48;                        // _cfa_ffffffd0 (outparam)
    _unknown_ _v52;                        // _cfa_ffffffcc (outparam)
    intOrPtr _v56;                         // _cfa_ffffffc8 (outparam)
    signed char* __ebx;                    // r1
    _unknown_ __esi;                       // r5
    char* _t14;                            // _t14
    char* _t15;                            // _t15
    signed int _t18;                       // _t18
    char _t22;                             // _t22

    __esp = __esp - 52;
    __ebx = _a4;
    _v14 = 0;
    if(_a4 == 0) {
        __ebx =  &_v14;
    }
    _t14 = __imp____mb_cur_max;
    _t22 =  *_t14;
    _v56 = 0;
     *__esp = 2;
    _setlocale();
    _t15 = _strchr(_t14, 46);
    __ecx = 0;
    if(_t15 != 0) {
        __ecx = _atoi(_t15 + 1);
    }
    __edx = _a16;
    if(_a16 == 0) {
        __edx = 4247672;
    }
    _t18 = L004055A0(__ebx, _a8, _a12, __edx, __ecx, _t22);
    __esp = __esp + 52;
    return _t18;
}

L004059C0(
    char* _a4,                             // _cfa_4
    intOrPtr* _a8,                         // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    intOrPtr _a16                          // _cfa_10
)
{
    char _v16;                             // _cfa_fffffff0
    char _v32;                             // _cfa_ffffffe0
    char* _v48;                            // _cfa_ffffffd0
    intOrPtr _v52;                         // _cfa_ffffffcc
    intOrPtr _v56;                         // _cfa_ffffffc8
    char* _v60;                            // _cfa_ffffffc4
    intOrPtr _v64;                         // _cfa_ffffffc0
    char* _v68;                            // _cfa_ffffffbc
    intOrPtr _v72;                         // _cfa_ffffffb8
    intOrPtr _t24;                         // _t24

    _t24 = _a12;
    _t18 = _a8;
    _v32 = _t18;
    if(_t24 != 0) {
        _v48 =  &_v16;
        _v52 = 0;
        _v64 = 1;
        _v72 = 0;
        _v56 = _a16;
         *__esp = _t24;
        _v16 = 0;
        _v60 = _a4;
        _t18 =  &_v32;
        _v68 =  &_v32;
        _WideCharToMultiByte$32();
        __esp = __esp - 32;
        if( &_v32 == 0 || _v16 != 0) {
            goto L6;
        } else {
            return  &_v32;
        }
    } else {
        if(_t18 <= 255) {
             *_a4 = _t18;
            return 1;
        }
L6:
        __errno();
         *_t18 = 42;
        return -1;
    }
}

_wcrtomb(
    char* _a4,                             // _cfa_4
    signed short _a8                       // _cfa_8
)
{// addr = 0x00405A50
    char _v14;                             // _cfa_fffffff2
    _unknown_ _v32;                        // _cfa_ffffffe0 (outparam)
    _unknown_ _v36;                        // _cfa_ffffffdc (outparam)
    intOrPtr _v40;                         // _cfa_ffffffd8 (outparam)
    char* __ebx;                           // r1
    char __edi;                            // r4
    _unknown_ __esi;                       // r5
    char* _t9;                             // _t9
    char* _t10;                            // _t10
    signed short _t14;                     // _t14

    __ebx = _a4;
    _t14 = _a8;
    if(_a4 == 0) {
        __ebx =  &_v14;
    }
    _t9 = __imp____mb_cur_max;
    __edi =  *_t9;
    _v40 = 0;
     *__esp = 2;
    _setlocale();
    _t10 = _strchr(_t9, 46);
    __edx = 0;
    if(_t10 != 0) {
        __edx = _atoi(_t10 + 1);
    }
    return L004059C0(__ebx, _t14 & 65535, __edx, __edi);
}

signed int ___gdtoa(
    signed int __fp0                       // r28
)
{// addr = 0x00405C20
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t553;                      // _t553
    signed int _t559;                      // _t559
    signed int _t560;                      // _t560
    signed int _t561;                      // _t561
    signed int _t563;                      // _t563
    signed int _t568;                      // _t568
    signed int _t571;                      // _t571
    signed int _t579;                      // _t579
    signed int _t581;                      // _t581
    signed int _t582;                      // _t582
    signed int _t585;                      // _t585
    signed int _t586;                      // _t586
    signed int _t589;                      // _t589
    signed int _t594;                      // _t594
    signed int _t596;                      // _t596
    signed int _t597;                      // _t597
    signed int _t599;                      // _t599
    signed int _t602;                      // _t602
    signed int _t603;                      // _t603
    signed int _t604;                      // _t604
    signed int _t605;                      // _t605
    signed int _t606;                      // _t606
    signed int _t607;                      // _t607
    signed int _t612;                      // _t612
    signed int* _t616;                     // _t616
    signed int _t624;                      // _t624
    signed int _t627;                      // _t627
    signed int _t629;                      // _t629
    signed int _t636;                      // _t636
    signed int _t637;                      // _t637
    signed int _t640;                      // _t640
    signed int _t642;                      // _t642
    signed int _t646;                      // _t646
    signed int _t647;                      // _t647
    signed int _t650;                      // _t650
    signed int _t651;                      // _t651
    signed int _t653;                      // _t653
    signed int _t654;                      // _t654
    _unknown_ _t655;                       // _t655
    signed int _t656;                      // _t656
    signed int _t659;                      // _t659
    signed int _t660;                      // _t660
    signed int _t661;                      // _t661
    signed int _t665;                      // _t665
    signed int _t674;                      // _t674
    signed int _t675;                      // _t675
    signed int _t678;                      // _t678
    signed int _t682;                      // _t682
    signed int _t683;                      // _t683
    signed int _t687;                      // _t687
    signed int _t691;                      // _t691
    signed int _t695;                      // _t695
    signed int _t696;                      // _t696
    signed int _t699;                      // _t699
    signed int _t700;                      // _t700
    signed int _t705;                      // _t705
    signed int _t711;                      // _t711
    signed int _t714;                      // _t714
    signed int _t718;                      // _t718
    signed int _t722;                      // _t722
    signed int _t726;                      // _t726
    signed int _t732;                      // _t732
    signed int _t738;                      // _t738
    signed int _t739;                      // _t739
    signed int _t740;                      // _t740
    signed int _t743;                      // _t743
    signed int _t745;                      // _t745
    signed int _t746;                      // _t746
    signed int _t748;                      // _t748
    signed int _t752;                      // _t752
    signed int _t759;                      // _t759
    signed int _t761;                      // _t761
    signed int _t763;                      // _t763
    _unknown_ _t764;                       // _t764
    signed int _t765;                      // _t765
    signed int _t772;                      // _t772
    signed int _t774;                      // _t774
    signed char* _t784;                    // _t784
    signed int _t785;                      // _t785
    signed int _t788;                      // _t788
    signed int _t789;                      // _t789
    intOrPtr _t790;                        // _t790
    signed int _t791;                      // _t791
    signed int _t792;                      // _t792
    signed int _t793;                      // _t793
    signed int _t794;                      // _t794
    signed int _t797;                      // _t797
    signed int _t799;                      // _t799
    signed int _t800;                      // _t800
    signed int _t801;                      // _t801
    _unknown_ _t802;                       // _t802
    signed int _t803;                      // _t803
    signed int _t805;                      // _t805
    signed int _t806;                      // _t806
    signed int _t807;                      // _t807
    signed int _t808;                      // _t808
    signed int _t810;                      // _t810
    signed int _t811;                      // _t811
    signed int _t812;                      // _t812
    signed int _t814;                      // _t814
    signed int _t815;                      // _t815
    signed int _t816;                      // _t816
    signed int _t823;                      // _t823
    signed int _t824;                      // _t824
    signed int _t825;                      // _t825
    signed int _t829;                      // _t829
    signed int _t831;                      // _t831
    signed int _t832;                      // _t832
    signed int _t833;                      // _t833
    signed int _t836;                      // _t836
    signed int _t837;                      // _t837
    signed int _t839;                      // _t839
    signed int _t840;                      // _t840
    signed int _t842;                      // _t842
    signed int _t844;                      // _t844
    signed int _t845;                      // _t845
    signed int _t851;                      // _t851
    signed int _t852;                      // _t852
    signed char* _t855;                    // _t855
    signed int _t859;                      // _t859
    _unknown_ _t860;                       // _t860
    _unknown_ _t862;                       // _t862
    signed int _t866;                      // _t866
    signed int _t867;                      // _t867
    signed int _t868;                      // _t868
    signed int _t869;                      // _t869
    signed long long _t884;                // _t884
    signed int _t886;                      // _t886
    signed long long _t890;                // _t890
    signed int _t891;                      // _t891
    signed int _t898;                      // _t898
    signed long long _t907;                // _t907
    signed long long _t912;                // _t912
    signed long long _t913;                // _t913
    signed long long _t915;                // _t915

    _t840 =  *(__esp[0x23]);
     *((signed int*)(__esp[0x23])) = _t840 & 207;
    _t553 = _t840 & 7;
    if(_t553 > 4) {
        return 0;
    }
    switch( *((intOrPtr*)(_t553 * 4 +  &M0040A360))) {
        case 0:
L15:
             *(__esp[0x26]) = 1;
            return ___nrv_alloc_D2A(4236125, __esp[0x27], 1);
        case 1:
            _t802 = 0;
            _t831 =  *((signed int*)(__esp[0x20]));
            if(_t831 > 32) {
                _t759 = 32;
                do {
                    _t759 = _t759 + _t759;
                    _t802 = _t802 + 1;
                } while(_t831 > _t759);
            }
            _t761 = ___Balloc_D2A(_t802);
            _t860 = __esp[0x22] + (_t831 - 1 >> 5) * 4;
            _t559 = __esp[0x22];
            _t763 = _t761 + 20;
            _t803 = _t763;
            __esp[3] = _t763;
            _t842 = _t840;
            goto L6;
            do {
            } while();
            while(1) {
L10:
                _t560 = _t805 - 1;
                if( *((intOrPtr*)(_t765 + _t560 * 4)) != 0) {
                    asm("bsr eax, [ebx+edx*4+0x10]");
                     *(_t761 + 16) = _t805;
                    _t862 = (_t805 << 5) - (_t560 ^ 31);
                    break;
                }
                __eflags = _t560;
                if(_t560 == 0) {
                     *(_t761 + 16) = 0;
                    _t862 = 0;
                } else {
                    _t805 = _t560;
                    continue;
                }
                break;
            }
            _t561 = ___trailz_D2A(_t761);
            __esp[8] = __esp[0x21];
            __esp[0x17] = _t561;
            if(_t561 != 0) {
                ___rshift_D2A(_t761, _t561);
                _t563 = __esp[0x17];
                _t862 = _t862 - _t563;
                __esp[8] = __esp[0x21] + _t563;
            }
            if( *(_t761 + 16) != 0) {
                __esp[1] =  &(__esp[0x17]);
                 *__esp = _t761;
                ___b2d_D2A();
                _t806 = __esp[8] + _t862 - 1;
                __esp[0x12] = _t806;
                __esp[4] = __fp0;
                _t568 = _t806 >> 31;
                __esp[3] = _t568;
                _t772 = __esp[5] & 1048575 | 1072693248;
                __esp[5] = _t772;
                _t571 = (_t568 ^ _t806) - __esp[3] - 1077;
                __eflags = _t571;
                asm("fild dword [esp+0x48]");
                _t884 = ((__esp[4] -  *4236148) *  *4236152 +  *4236160) *  *4236168;
                asm("faddp st1, st0");
                if(__eflags > 0) {
                    __esp[0x12] = _t571;
                    asm("fild dword [esp+0x48]");
                    _t884 = _t884 *  *4236176;
                    asm("faddp st1, st0");
                }
            } else {
                ___Bfree_D2A(_t761, _t761);
                goto L15;
            }
            asm("fnstcw word [esp+0x4e]");
            __esp[0x13] = 12;
            asm("fldcw word [esp+0x4c]");
            asm("fist dword [esp+0xc]");
            asm("fldcw word [esp+0x4e]");
            asm("fldz ");
            asm("fucomp st1");
            asm("fnstsw ax");
            asm("sahf ");
            if(__eflags > 0) {
                asm("fild dword [esp+0xc]");
                asm("fucompp ");
                asm("fnstsw ax");
                asm("sahf ");
                if(__eflags != 0 || __eflags != 0) {
                    __esp[3] = __esp[3] - 1;
                }
            } else {
                st0 = _t884;
            }
            __eflags = __esp[3] - 22;
            __esp[5] = (_t806 << 20) + _t772;
            __esp[0xd] = 1;
            if(__eflags <= 0) {
                _t884 = __esp[4];
                asm("fxch st0, st1");
                asm("fucompp ");
                asm("fnstsw ax");
                asm("sahf ");
                if(__eflags <= 0) {
                    __esp[0xd] = 0;
                } else {
                    _t58 =  &(__esp[3]);
                     *_t58 = __esp[3] - 1;
                    __eflags =  *_t58;
                    __esp[0xd] = 0;
                }
            }
            _t579 = _t862 - _t806 - 1;
            __eflags = _t579;
            __esp[0xa] = 0;
            __esp[7] = _t579;
            if(_t579 < 0) {
                __esp[0xa] =  ~_t579;
                __esp[7] = 0;
            }
            _t581 = __esp[3];
            __eflags = _t581;
            if(_t581 < 0) {
                _t582 = __esp[3];
                __esp[0xa] = __esp[0xa] - _t582;
                __esp[0xf] = 0;
                __esp[0xc] =  ~_t582;
            } else {
                _t64 =  &(__esp[7]);
                 *_t64 = __esp[7] + _t581;
                __eflags =  *_t64;
                __esp[0xf] = _t581;
                __esp[0xc] = 0;
            }
            __eflags = __esp[0x24] - 9;
            if(__esp[0x24] > 9) {
                __esp[0x24] = 0;
                goto L64;
            } else {
                __eflags = __esp[0x24] - 5;
                if(__esp[0x24] <= 5) {
                    _t752 = 1;
                } else {
                    __esp[0x24] = __esp[0x24] - 4;
                    _t752 = 0;
                    __eflags = 0;
                }
                __eflags = __esp[0x24] - 3;
                if(__eflags == 0) {
                    __esp[0x10] = 0;
                    goto L36;
                } else {
                    if(__eflags <= 0) {
                        __eflags = __esp[0x24] - 2;
                        __esp[0x10] = 0;
                        if(__esp[0x24] != 2) {
                            goto L64;
                        } else {
                            goto L124;
                        }
                        goto L293;
                    } else {
                        __eflags = __esp[0x24] - 4;
                        __esp[0x10] = 1;
                        if(__esp[0x24] == 4) {
L124:
                            __eflags = __esp[0x25];
                            if(__esp[0x25] <= 0) {
                                _t829 = 1;
                                __esp[0x25] = 1;
                            } else {
                                __eflags = __esp[0x25] - 14;
                                _t829 = __esp[0x25] - 14 < 0;
                                __eflags = _t829;
                            }
                            _t801 = __esp[0x25];
                            _t807 = _t829 & _t752;
                            __esp[0x17] = _t801;
                            _t585 = _t801;
                            __esp[0x11] = _t801;
                            __esp[6] = _t801;
                        } else {
                            __eflags = __esp[0x24] - 5;
                            if(__esp[0x24] != 5) {
L64:
                                __esp[0x12] = _t831;
                                _t807 = 0;
                                asm("fild dword [esp+0x48]");
                                __esp[0x10] = 1;
                                __esp[0x11] = -1;
                                __esp[6] = -1;
                                __esp[0x25] = 0;
                                asm("fldcw word [esp+0x4c]");
                                asm("fistp dword [esp+0x48]");
                                asm("fldcw word [esp+0x4e]");
                                _t585 = __esp[0x12] + 3;
                                __esp[0x17] = _t585;
                            } else {
L36:
                                _t799 = __esp[3] + __esp[0x25];
                                __esp[0x11] = _t799;
                                _t800 = _t799 + 1;
                                __eflags = _t800;
                                __esp[6] = _t800;
                                if(_t800 <= 0) {
                                    __eflags = __esp[6] - 14;
                                    __esp[0x17] = 1;
                                    _t807 = __esp[6] - 14 < 0 & _t752;
                                    _t585 = 1;
                                } else {
                                    __eflags = _t800 - 14;
                                    _t807 = _t800 - 14 < 0 & _t752;
                                    __eflags = _t807;
                                    _t585 = _t800;
                                    __esp[0x17] = _t800;
                                }
                            }
                        }
                    }
                }
            }
             *__esp = _t585;
            __esp[0xe] = _t807;
            _t586 = ___rv_alloc_D2A();
            _t808 = __esp[0xe];
            __esp[9] = _t586;
            _t589 =  *((intOrPtr*)(__esp[0x20] + 12)) - 1;
            __eflags = _t589;
            __esp[0xb] = _t589;
            if(__eflags != 0) {
                if(__eflags < 0) {
                    __esp[0xb] = 2;
                }
                _t842 = _t842 & 8;
                __eflags = _t842;
                if(_t842 != 0) {
                    __esp[0xb] = 3 - __esp[0xb];
                }
            }
            __eflags = _t808;
            if(_t808 == 0) {
L73:
                __eflags = __esp[3] - 14;
                if(__esp[3] <= 14) {
                    __eflags = __esp[8];
                    if(__esp[8] < 0) {
                        goto L74;
                    } else {
                        _t886 =  *((long long*)(__esp[3] * 8 +  &___tens_D2A));
                        __eflags = __esp[6];
                        if(__eflags > 0) {
L137:
                            _t839 = __esp[9];
                            asm("fnstcw word [esp+0x4e]");
                            __esp[0x17] = 1;
                            _t845 = _t839 + 1;
                            __esp[0x13] = 12;
                            asm("fldcw word [esp+0x4c]");
                            asm("fistp dword [esp+0x48]");
                            asm("fldcw word [esp+0x4e]");
                            _t791 = __esp[0x12];
                            __esp[0x12] = _t791;
                            asm("fild dword [esp+0x48]");
                            _t890 = st0 / st2 * st2;
                             *_t839 = _t791 + 48;
                            asm("fsubp st1, st0");
                            asm("fldz ");
                            asm("fxch st0, st1");
                            asm("fucom st1");
                            asm("fnstsw ax");
                            st1 = _t890;
                            asm("sahf ");
                            if(__eflags != 0) {
                                if(__eflags != 0) {
                                    goto L138;
                                } else {
                                    st0 = _t890;
                                    st0 = _t890;
                                    goto L144;
                                }
                            } else {
L138:
                                _t711 = __esp[0x17];
                                __eflags = __esp[6] - _t711;
                                if(__esp[6] == _t711) {
L190:
                                    __eflags = __esp[0xb];
                                    if(__eflags == 0) {
                                        _t891 = _t890 + st0;
                                        asm("fucom st1");
                                        asm("fnstsw ax");
                                        asm("sahf ");
                                        if(__eflags > 0) {
                                            st0 = _t891;
                                            st0 = _t891;
                                            goto L239;
                                        } else {
                                            asm("fxch st0, st1");
                                            asm("fucompp ");
                                            asm("fnstsw ax");
                                            asm("sahf ");
                                            if(__eflags != 0 || __eflags != 0) {
                                                _t794 =  *(_t845 - 1) & 255;
                                                __esp[6] = 16;
                                                __esp[0xe] = __esp[3];
                                                goto L207;
                                            } else {
                                                __eflags = _t791 & 1;
                                                _t794 =  *(_t845 - 1) & 255;
                                                __esp[0xe] = __esp[3];
                                                if((_t791 & 1) == 0) {
                                                    goto L268;
                                                } else {
                                                    goto L215;
                                                }
                                            }
                                        }
                                    } else {
                                        st0 = _t890;
                                        st0 = _t890;
                                        __eflags = __esp[0xb] - 1;
                                        if(__esp[0xb] == 1) {
L239:
                                            _t792 =  *(_t845 - 1) & 255;
                                            _t823 = __esp[9];
                                            __esp[0xe] = __esp[3];
                                            goto L218;
                                        } else {
                                            _t722 = __esp[3];
                                            goto L60;
                                        }
                                    }
                                } else {
                                    _t824 = __esp[6];
                                    while(1) {
                                        _t845 = _t845 + 1;
                                        __eflags = _t845;
                                        __esp[0x17] = _t711 + 1;
                                        asm("fldcw word [esp+0x4c]");
                                        asm("fistp dword [esp+0x48]");
                                        asm("fldcw word [esp+0x4e]");
                                        _t791 = __esp[0x12];
                                        __esp[0x12] = _t791;
                                        asm("fild dword [esp+0x48]");
                                        _t890 = st1 / st3 * st3;
                                         *(_t845 - 1) = _t791 + 48;
                                        asm("fsubp st2, st0");
                                        asm("fldz ");
                                        asm("fxch st0, st2");
                                        asm("fucom st2");
                                        asm("fnstsw ax");
                                        st2 = _t890;
                                        asm("sahf ");
                                        if(__eflags == 0 && __eflags == 0) {
                                            break;
                                        }
                                        _t711 = __esp[0x17];
                                        __eflags = _t824 - _t711;
                                        if(_t824 == _t711) {
                                            st0 = _t890;
                                            goto L190;
                                        } else {
                                            continue;
                                        }
                                        goto L116;
                                    }
                                    st0 = _t890;
                                    st0 = _t890;
                                    st0 = _t890;
L144:
                                    _t726 = __esp[3];
                                    goto L145;
                                }
                            }
                        } else {
                            __eflags = __esp[0x25] >> 31;
                            if(__eflags == 0) {
                                goto L137;
                            } else {
                                __eflags = __esp[6];
                                if(__eflags != 0) {
                                    st0 = _t886;
                                    goto L129;
                                } else {
                                    asm("fxch st0, st1");
                                    asm("fucompp ");
                                    asm("fnstsw ax");
                                    asm("sahf ");
                                    if(__eflags >= 0) {
                                        goto L129;
                                    } else {
                                        _t833 = 0;
                                        __esp[8] = 0;
                                        _t732 = __esp[3] + 2;
                                        __eflags = _t732;
                                        __esp[3] = _t732;
                                        goto L112;
                                    }
                                }
                                goto L113;
                            }
                        }
                    }
                } else {
L74:
                    __eflags = __esp[0x10];
                    if(__esp[0x10] == 0) {
                        _t832 = __esp[0xc];
                        _t844 = __esp[0xa];
                        __esp[8] = 0;
                    } else {
                        __eflags = __esp[0x24] - 1;
                        if(__esp[0x24] <= 1) {
                            _t837 = _t831 - _t862;
                            _t700 = _t837 + 1;
                            __esp[0x17] = _t700;
                            _t790 =  *((intOrPtr*)(__esp[0x20] + 4));
                            __eflags = __esp[8] - _t837 - _t790;
                            if(__esp[8] - _t837 >= _t790) {
                                _t832 = __esp[0xc];
                                _t844 = __esp[0xa];
                            } else {
                                _t832 = __esp[0xc];
                                _t844 = __esp[0xa];
                                _t700 = __esp[8] - _t790 + 1;
                                __esp[0x17] = _t700;
                            }
                        } else {
                            _t705 = __esp[6] - 1;
                            __eflags = __esp[0xc] - _t705;
                            if(__esp[0xc] < _t705) {
                                _t832 = 0;
                                __esp[0xc] = _t705;
                                __esp[0xf] = __esp[0xf] + _t705 - __esp[0xc];
                            } else {
                                _t832 = __esp[0xc] - _t705;
                                __eflags = _t832;
                            }
                            _t700 = __esp[6];
                            __eflags = _t700;
                            if(_t700 < 0) {
                                _t700 = 0;
                                _t844 = __esp[0xa] - __esp[6];
                                __esp[0x17] = 0;
                            } else {
                                _t844 = __esp[0xa];
                                __esp[0x17] = _t700;
                            }
                        }
                         *__esp = 1;
                        __esp[0xa] = __esp[0xa] + _t700;
                        _t150 =  &(__esp[7]);
                         *_t150 = __esp[7] + _t700;
                        __eflags =  *_t150;
                        __esp[8] = ___i2b_D2A();
                    }
                    __eflags = __esp[7];
                    if(__esp[7] > 0) {
                        __eflags = _t844;
                        if(_t844 > 0) {
                            _t789 = __esp[7];
                            __eflags = _t789 - _t844;
                            _t699 = _t789;
                            if(_t789 > _t844) {
                                _t699 = _t844;
                            }
                            __esp[0xa] = __esp[0xa] - _t699;
                            _t844 = _t844 - _t699;
                            _t157 =  &(__esp[7]);
                             *_t157 = __esp[7] - _t699;
                            __eflags =  *_t157;
                            __esp[0x17] = _t699;
                        }
                    }
                    __eflags = __esp[0xc];
                    if(__esp[0xc] > 0) {
                        __eflags = __esp[0x10];
                        if(__esp[0x10] == 0) {
                            _t691 = __esp[0xc];
                            goto L168;
                        } else {
                            __eflags = _t832;
                            if(_t832 > 0) {
                                _t695 = ___pow5mult_D2A(__esp[8], _t832);
                                __esp[1] = _t761;
                                 *__esp = _t695;
                                __esp[8] = _t695;
                                _t696 = ___mult_D2A();
                                 *__esp = _t761;
                                __esp[4] = _t696;
                                ___Bfree_D2A(_t761);
                                _t761 = __esp[4];
                            }
                            _t691 = __esp[0xc] - _t832;
                            __eflags = _t691;
                            if(_t691 != 0) {
L168:
                                _t761 = ___pow5mult_D2A(_t761, _t691);
                            }
                        }
                    }
                    _t833 = ___i2b_D2A(1);
                    _t594 = __esp[0xf];
                    __eflags = _t594;
                    if(_t594 > 0) {
                        _t833 = ___pow5mult_D2A(_t833, _t594);
                    }
                    __eflags = __esp[0x24] - 1;
                    __esp[4] = 0;
                    if(__esp[0x24] <= 1) {
                        __eflags = _t862 - 1;
                        if(_t862 == 1) {
                            _t687 = __esp[0x20];
                            __eflags = __esp[0x21] -  *((intOrPtr*)(_t687 + 4)) + 1;
                            if(__esp[0x21] >  *((intOrPtr*)(_t687 + 4)) + 1) {
                                __esp[0xa] = __esp[0xa] + 1;
                                __esp[7] = __esp[7] + 1;
                                __esp[4] = 1;
                            }
                        }
                    }
                    _t863 = 31;
                    __eflags = __esp[0xf];
                    if(__esp[0xf] != 0) {
                        asm("bsr ebp, [edi+eax*4+0x10]");
                        _t863 = 0;
                        __eflags = 31;
                    }
                    _t866 = _t863 - __esp[7] - 4 & 31;
                    _t810 = __esp[0xa] + _t866;
                    _t596 = _t866;
                    __eflags = _t810;
                    __esp[0x17] = _t866;
                    if(_t810 > 0) {
                         *__esp = _t761;
                        __esp[1] = _t810;
                        _t761 = ___lshift_D2A();
                        _t596 = __esp[0x17];
                    }
                    _t597 = _t596 + __esp[7];
                    __eflags = _t597;
                    if(_t597 > 0) {
                         *__esp = _t833;
                        __esp[1] = _t597;
                        _t833 = ___lshift_D2A();
                    }
                    __eflags = __esp[0xd];
                    if(__esp[0xd] != 0) {
                        _t599 = ___cmp_D2A(_t761, _t833);
                        __eflags = _t599;
                        if(_t599 >= 0) {
                            goto L101;
                        } else {
                             *__esp = _t761;
                            __esp[2] = 0;
                            __esp[1] = 10;
                            __esp[3] = __esp[3] - 1;
                            _t761 = ___multadd_D2A();
                            __eflags = __esp[0x10];
                            if(__esp[0x10] != 0) {
                                _t682 = ___multadd_D2A(__esp[8], 10, 0);
                                __eflags = __esp[0x11];
                                __esp[8] = _t682;
                                _t683 = __esp[0x11];
                                if(__esp[0x11] > 0) {
L282:
                                    __esp[6] = _t683;
                                    goto L147;
                                } else {
                                    __eflags = __esp[0x24] - 2;
                                    if(__esp[0x24] > 2) {
                                        goto L287;
                                    } else {
                                        goto L282;
                                    }
                                }
                            } else {
                                __eflags = __esp[0x24] - 2;
                                _t683 = __esp[0x11];
                                if(__esp[0x24] <= 2) {
L173:
                                    __esp[6] = _t683;
                                    goto L174;
                                } else {
                                    __eflags = __esp[0x11];
                                    if(__esp[0x11] <= 0) {
L287:
                                        __esp[6] = _t683;
                                        goto L103;
                                    } else {
                                        goto L173;
                                    }
                                }
                            }
                        }
                        goto L293;
                    } else {
L101:
                        __eflags = __esp[0x24] - 2;
                        if(__esp[0x24] <= 2) {
L146:
                            __eflags = __esp[0x10];
                            if(__esp[0x10] == 0) {
L174:
                                __esp[0x17] = 1;
                                _t845 = __esp[9];
                                _t867 = __esp[6];
                                while(1) {
                                    __esp[1] = _t833;
                                    _t845 = _t845 + 1;
                                     *__esp = _t761;
                                    _t602 = ___quorem_D2A() + 48;
                                     *(_t845 - 1) = _t602;
                                    __eflags = _t867 - __esp[0x17];
                                    if(_t867 <= __esp[0x17]) {
                                        break;
                                    }
                                    _t603 = ___multadd_D2A(_t761, 10, 0);
                                    _t333 =  &(__esp[0x17]);
                                     *_t333 = __esp[0x17] + 1;
                                    __eflags =  *_t333;
                                    _t761 = _t603;
                                }
                                __esp[4] = _t602;
                                _t811 = 0;
                                __eflags = 0;
                                goto L178;
                            } else {
L147:
                                _t627 = _t844 + _t866;
                                __eflags = _t627;
                                if(_t627 > 0) {
                                    __esp[1] = _t627;
                                     *__esp = __esp[8];
                                    __esp[8] = ___lshift_D2A();
                                }
                                _t869 = __esp[8];
                                __eflags = __esp[4];
                                if(__esp[4] != 0) {
                                    _t629 = ___Balloc_D2A( *((intOrPtr*)(_t869 + 4)));
                                    _memcpy(_t629 + 12, _t869 + 12, 8 +  *(_t869 + 16) * 4);
                                    __esp[1] = 1;
                                     *__esp = _t629;
                                    _t869 = ___lshift_D2A();
                                }
                                __esp[7] = _t833;
                                _t836 = __esp[8];
                                __esp[0x17] = 1;
                                __esp[0xa] = __esp[9];
                                while(1) {
                                     *__esp = _t761;
                                    __esp[1] = __esp[7];
                                    _t636 = ___quorem_D2A();
                                    __esp[1] = _t836;
                                     *__esp = _t761;
                                    __esp[4] = _t636 + 48;
                                    __esp[0xc] = _t636;
                                    _t637 = ___cmp_D2A();
                                    __esp[1] = _t869;
                                    _t851 = _t637;
                                     *__esp = __esp[7];
                                    _t814 = ___diff_D2A();
                                    _t640 = 1;
                                    __eflags =  *(_t814 + 12);
                                    if( *(_t814 + 12) == 0) {
                                        __esp[1] = _t814;
                                         *__esp = _t761;
                                        __esp[8] = _t814;
                                        _t640 = ___cmp_D2A();
                                        _t814 = __esp[8];
                                    }
                                     *__esp = _t814;
                                    __esp[8] = _t640;
                                    ___Bfree_D2A(_t761);
                                    _t642 = __esp[8];
                                    __eflags = _t642 | __esp[0x24];
                                    if((_t642 | __esp[0x24]) != 0) {
                                        goto L154;
                                    }
                                    _t784 = __esp[0x22];
                                    __eflags =  *_t784 & 1;
                                    if(( *_t784 & 1) != 0) {
                                        goto L154;
                                    } else {
                                        __eflags = __esp[0xb];
                                        if(__esp[0xb] == 0) {
                                            _t785 = _t851;
                                            _t852 = __esp[0xa];
                                            __eflags = __esp[4] - 57;
                                            __esp[8] = _t836;
                                            _t833 = __esp[7];
                                            _t665 = _t852;
                                            if(__esp[4] == 57) {
L269:
                                                _t650 = _t852;
L270:
                                                _t811 = __esp[8];
                                                _t845 = _t852 + 1;
                                                _t774 = 57;
                                                __esp[8] = _t869;
                                                _t868 = __esp[9];
                                                 *_t650 = 57;
                                                while(1) {
L184:
                                                    __eflags = _t774 - 57;
                                                    _t607 = _t845 - 1;
                                                    if(_t774 != 57) {
                                                        break;
                                                    }
                                                    __eflags = _t607 - _t868;
                                                    if(_t607 == _t868) {
                                                        __esp[6] = 32;
                                                         *(__esp[9]) = 49;
                                                        __esp[3] = __esp[3] + 2;
                                                        goto L113;
                                                    } else {
                                                        _t774 =  *(_t607 - 1) & 255;
                                                        _t845 = _t607;
                                                        continue;
                                                    }
                                                    goto L293;
                                                }
                                                 *_t607 = _t774 + 1;
                                                __esp[6] = 32;
                                                __esp[3] = __esp[3] + 1;
                                            } else {
                                                __eflags = _t785;
                                                if(_t785 <= 0) {
                                                    __eflags =  *(_t761 + 16) - 1;
                                                    __esp[6] = 16;
                                                    if( *(_t761 + 16) <= 1) {
                                                        __eflags =  *(_t761 + 20) - 1;
                                                        asm("sbb ecx, ecx");
                                                        __esp[6] = _t785;
                                                        __esp[6] =  !(__esp[6]);
                                                        __esp[6] = __esp[6] & 16;
                                                    }
                                                } else {
                                                    __esp[6] = 32;
                                                    _t788 = __esp[0xc] + 49;
                                                    __eflags = _t788;
                                                    __esp[4] = _t788;
                                                }
                                                _t845 = _t852 + 1;
                                                _t811 = __esp[8];
                                                __esp[8] = _t869;
                                                 *_t665 = __esp[4] & 255;
                                                __esp[3] = __esp[3] + 1;
                                            }
                                            goto L113;
                                        } else {
                                            goto L154;
                                        }
                                    }
                                    goto L293;
L154:
                                    __eflags = _t851;
                                    if(_t851 < 0) {
L230:
                                        __esp[8] = _t836;
                                        _t852 = __esp[0xa];
                                        _t833 = __esp[7];
                                        _t815 = __esp[4];
                                        __eflags = __esp[0xb];
                                        if(__esp[0xb] == 0) {
L258:
                                            __eflags = _t642;
                                            __esp[6] = _t815;
                                            if(_t642 <= 0) {
                                                __esp[6] = 0;
                                                goto L262;
                                            } else {
                                                 *__esp = _t761;
                                                __esp[1] = 1;
                                                _t646 = ___lshift_D2A();
                                                __esp[1] = _t833;
                                                 *__esp = _t646;
                                                _t761 = _t646;
                                                _t647 = ___cmp_D2A();
                                                _t816 = __esp[6];
                                                __eflags = _t647;
                                                if(__eflags <= 0) {
                                                    if(__eflags != 0) {
                                                        goto L261;
                                                    } else {
                                                        __eflags = __esp[4] & 1;
                                                        asm("o16 nop ");
                                                        if((__esp[4] & 1) == 0) {
                                                            goto L261;
                                                        } else {
                                                            goto L260;
                                                        }
                                                    }
                                                } else {
L260:
                                                    __eflags = _t816 - 57;
                                                    __esp[4] = __esp[0xc] + 49;
                                                    if(_t816 == 57) {
                                                        goto L269;
                                                    } else {
L261:
                                                        __esp[6] = 32;
L262:
                                                        __eflags =  *(_t761 + 16) - 1;
                                                        if( *(_t761 + 16) > 1) {
                                                            goto L264;
                                                        } else {
                                                            __eflags =  *(_t761 + 20);
                                                            if( *(_t761 + 20) != 0) {
                                                                goto L264;
                                                            }
                                                        }
                                                        goto L265;
                                                    }
                                                }
                                            }
                                        } else {
                                            __eflags =  *(_t761 + 16) - 1;
                                            if( *(_t761 + 16) <= 1) {
                                                __eflags =  *(_t761 + 20);
                                                if( *(_t761 + 20) != 0) {
                                                    goto L232;
                                                } else {
                                                    goto L258;
                                                }
                                            } else {
L232:
                                                __eflags = __esp[0xb] - 2;
                                                if(__esp[0xb] != 2) {
                                                    while(1) {
                                                        _t651 = ___cmp_D2A(_t833, _t869);
                                                        __eflags = _t651;
                                                        if(_t651 <= 0) {
                                                            break;
                                                        }
                                                        _t852 = _t852 + 1;
                                                         *((char*)(_t852 - 1)) = __esp[4] & 255;
                                                        _t653 = ___multadd_D2A(_t869, 10, 0);
                                                        __eflags = __esp[8] - _t869;
                                                        __esp[6] = _t653;
                                                        if(__esp[8] == _t869) {
                                                            __esp[8] = _t653;
                                                        }
                                                        _t654 = ___multadd_D2A(_t761, 10, 0);
                                                        __esp[1] = _t833;
                                                         *__esp = _t654;
                                                        _t761 = _t654;
                                                        _t655 = ___quorem_D2A();
                                                        _t869 = __esp[6];
                                                        _t656 = _t655 + 48;
                                                        __eflags = _t656;
                                                        __esp[4] = _t656;
                                                    }
                                                    __eflags = __esp[4] - 57;
                                                    if(__esp[4] == 57) {
                                                        goto L269;
                                                    } else {
                                                        __esp[4] = __esp[4] + 1;
                                                        __esp[6] = 32;
                                                        goto L265;
                                                    }
                                                } else {
L264:
                                                    __esp[6] = 16;
L265:
                                                    _t845 = _t852 + 1;
                                                    _t811 = __esp[8];
                                                    __esp[8] = _t869;
                                                     *(_t845 - 1) = __esp[4] & 255;
                                                    __esp[3] = __esp[3] + 1;
                                                    goto L113;
                                                }
                                            }
                                        }
                                    } else {
                                        __eflags = _t851 | __esp[0x24];
                                        if((_t851 | __esp[0x24]) != 0) {
L157:
                                            __eflags = _t642;
                                            if(_t642 > 0) {
                                                __eflags = __esp[0xb] - 2;
                                                if(__esp[0xb] == 2) {
                                                    goto L158;
                                                } else {
                                                    _t852 = __esp[0xa];
                                                    __eflags = __esp[4] - 57;
                                                    __esp[8] = _t836;
                                                    _t833 = __esp[7];
                                                    _t650 = _t852;
                                                    if(__esp[4] == 57) {
                                                        goto L270;
                                                    } else {
                                                        _t845 = _t852 + 1;
                                                        _t811 = __esp[8];
                                                        __esp[6] = 32;
                                                        __esp[8] = _t869;
                                                         *_t650 = (__esp[4] & 255) + 1;
                                                        __esp[3] = __esp[3] + 1;
                                                        goto L113;
                                                    }
                                                }
                                            } else {
L158:
                                                __esp[0xa] = __esp[0xa] + 1;
                                                 *((char*)(__esp[0xa] - 1)) = __esp[4] & 255;
                                                __eflags = __esp[0x17] - __esp[6];
                                                if(__esp[0x17] == __esp[6]) {
                                                    _t811 = _t836;
                                                    _t845 = __esp[0xa];
                                                    _t833 = __esp[7];
                                                    __esp[8] = _t869;
L178:
                                                    _t604 = __esp[0xb];
                                                    __eflags = _t604;
                                                    if(_t604 == 0) {
                                                         *__esp = _t761;
                                                        __esp[1] = 1;
                                                        __esp[6] = _t811;
                                                        _t605 = ___lshift_D2A();
                                                        __esp[1] = _t833;
                                                         *__esp = _t605;
                                                        _t761 = _t605;
                                                        _t606 = ___cmp_D2A();
                                                        _t811 = __esp[6];
                                                        __eflags = _t606;
                                                        if(__eflags > 0) {
                                                            goto L181;
                                                        } else {
                                                            if(__eflags != 0) {
                                                                goto L243;
                                                            } else {
                                                                __eflags = __esp[4] & 1;
                                                                if((__esp[4] & 1) != 0) {
                                                                    goto L181;
                                                                } else {
                                                                    goto L243;
                                                                }
                                                            }
                                                        }
                                                    } else {
                                                        __eflags = _t604 - 2;
                                                        if(_t604 == 2) {
L243:
                                                            __eflags =  *(_t761 + 16) - 1;
                                                            if( *(_t761 + 16) <= 1) {
                                                                __eflags =  *(_t761 + 20);
                                                                __esp[6] = 0;
                                                                if( *(_t761 + 20) != 0) {
                                                                    goto L244;
                                                                } else {
                                                                    goto L246;
                                                                }
                                                                goto L293;
                                                            } else {
L244:
                                                                __esp[6] = 16;
                                                            }
                                                            goto L246;
                                                        } else {
                                                            __eflags =  *(_t761 + 16) - 1;
                                                            if( *(_t761 + 16) <= 1) {
                                                                __eflags =  *(_t761 + 20);
                                                                if( *(_t761 + 20) != 0) {
                                                                    goto L181;
                                                                } else {
                                                                    __esp[6] = 0;
                                                                    while(1) {
L246:
                                                                        __eflags =  *(_t845 - 1) - 48;
                                                                        _t624 = _t845 - 1;
                                                                        if( *(_t845 - 1) != 48) {
                                                                            break;
                                                                        }
                                                                        _t845 = _t624;
                                                                    }
                                                                    __esp[3] = __esp[3] + 1;
                                                                    goto L113;
                                                                }
                                                            } else {
L181:
                                                                _t774 =  *(_t845 - 1) & 255;
                                                                _t868 = __esp[9];
                                                                goto L184;
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    _t659 = ___multadd_D2A(_t761, 10, 0);
                                                    __eflags = _t836 - _t869;
                                                    __esp[2] = 0;
                                                    __esp[1] = 10;
                                                     *__esp = _t836;
                                                    _t761 = _t659;
                                                    if(_t836 == _t869) {
                                                        _t660 = ___multadd_D2A();
                                                        _t836 = _t660;
                                                        _t869 = _t660;
                                                    } else {
                                                        _t661 = ___multadd_D2A();
                                                         *__esp = _t869;
                                                        __esp[2] = 0;
                                                        __esp[1] = 10;
                                                        _t836 = _t661;
                                                        _t869 = ___multadd_D2A();
                                                    }
                                                    _t303 =  &(__esp[0x17]);
                                                     *_t303 = __esp[0x17] + 1;
                                                    __eflags =  *_t303;
                                                    continue;
                                                }
                                            }
                                        } else {
                                            _t855 = __esp[0x22];
                                            __eflags =  *_t855 & 1;
                                            if(( *_t855 & 1) == 0) {
                                                goto L230;
                                            } else {
                                                goto L157;
                                            }
                                        }
                                    }
                                    goto L293;
                                }
                            }
                            goto L293;
                        } else {
                            __eflags = __esp[6];
                            if(__esp[6] > 0) {
                                goto L146;
                            } else {
L103:
                                __eflags = __esp[6];
                                if(__esp[6] != 0) {
                                    goto L130;
                                } else {
                                    _t674 = ___multadd_D2A(_t833, 5, 0);
                                     *__esp = _t761;
                                    __esp[1] = _t674;
                                    _t833 = _t674;
                                    _t675 = ___cmp_D2A();
                                    __eflags = _t675;
                                    if(_t675 <= 0) {
                                        goto L130;
                                    } else {
                                        __esp[3] = __esp[3] + 2;
                                        goto L112;
                                    }
                                }
                            }
                        }
                    }
                    goto L113;
                }
            } else {
                __eflags = __esp[0xb] | __esp[3];
                if((__esp[0xb] | __esp[3]) != 0) {
                    goto L73;
                } else {
                    __esp[0x17] = 0;
                    _t898 = __esp[4];
                    __eflags = __esp[0xd];
                    if(__eflags == 0) {
L45:
                        __esp[4] = st0 + st1 +  *4236204;
                        __esp[5] = __esp[5] - 54525952;
                        __eflags = __esp[6];
                        if(__eflags == 0) {
                            goto L66;
                        } else {
                            _t825 = __esp[6];
                            __esp[0xe] = 0;
                            goto L47;
                        }
                    } else {
                        asm("fld1 ");
                        asm("fucomp st1");
                        asm("fnstsw ax");
                        asm("sahf ");
                        if(__eflags > 0) {
                            __eflags = __esp[6];
                            if(__esp[6] == 0) {
                                __esp[4] = st0 + st1 +  *4236204;
                                _t135 =  &(__esp[5]);
                                 *_t135 = __esp[5] - 54525952;
                                __eflags =  *_t135;
L66:
                                _t898 = __esp[4];
                                asm("fxch st0, st1");
                                asm("fucom st1");
                                asm("fnstsw ax");
                                asm("sahf ");
                                if(__eflags > 0) {
                                    st0 = _t898;
                                    st0 = _t898;
                                    st0 = _t898;
                                    __esp[3] = 2;
                                    _t833 = 0;
                                    __esp[8] = 0;
L112:
                                    _t678 = __esp[9];
                                    _t811 = 0;
                                    __eflags = 0;
                                    __esp[6] = 32;
                                    _t845 = _t678 + 1;
                                     *_t678 = 49;
                                    goto L113;
                                } else {
                                    asm("fxch st0, st1");
                                    asm("fchs ");
                                    asm("fucompp ");
                                    asm("fnstsw ax");
                                    asm("sahf ");
                                    if(__eflags > 0) {
                                        st0 = _t898;
L129:
                                        _t833 = 0;
                                        __eflags = 0;
                                        __esp[8] = 0;
L130:
                                        _t811 = 0;
                                        _t845 = __esp[9];
                                        __esp[6] = 16;
                                        __esp[3] =  ~(__esp[0x25]);
L113:
                                         *__esp = _t833;
                                        __esp[4] = _t811;
                                        ___Bfree_D2A(_t761);
                                        _t612 = __esp[8];
                                        __eflags = _t612;
                                        if(_t612 != 0) {
                                            _t812 = __esp[4];
                                            __eflags = _t812 - _t612;
                                            if(_t812 != _t612) {
                                                __eflags = _t812;
                                                if(_t812 != 0) {
                                                    ___Bfree_D2A(_t761, _t812);
                                                    asm("o16 nop ");
                                                }
                                            }
                                            ___Bfree_D2A(_t761, __esp[8]);
                                        }
                                    } else {
                                        goto L72;
                                    }
                                }
                            } else {
                                _t825 = __esp[0x11];
                                __eflags = _t825;
                                if(_t825 <= 0) {
L72:
                                    __esp[4] = _t898;
                                    goto L73;
                                } else {
                                    __esp[0xe] = -1;
                                    __esp[4] = st0 *  *4236200 +  *4236204;
                                    __esp[5] = __esp[5] - 54525952;
L47:
                                    __eflags = __esp[0x10];
                                    if(__esp[0x10] == 0) {
                                        asm("fnstcw word [esp+0x4e]");
                                        __esp[0x17] = 1;
                                        _t859 = __esp[9];
                                        _t907 =  *4236196;
                                        asm("fxch st0, st2");
                                        __esp[0x13] = 12;
                                        while(1) {
                                            asm("fldcw word [esp+0x4c]");
                                            asm("fist dword [esp+0x48]");
                                            asm("fldcw word [esp+0x4e]");
                                            _t738 = __esp[0x12];
                                            __eflags = _t738;
                                            if(_t738 != 0) {
                                                __esp[0x12] = _t738;
                                                asm("fild dword [esp+0x48]");
                                                asm("fsubp st1, st0");
                                            }
                                            _t859 = _t859 + 1;
                                            _t792 = _t738 + 48;
                                             *((char*)(_t859 - 1)) = _t792;
                                            _t739 = __esp[0x17];
                                            __eflags = _t739 - _t825;
                                            if(__eflags == 0) {
                                                break;
                                            }
                                            _t907 = _t907 * st2;
                                            _t740 = _t739 + 1;
                                            __eflags = _t740;
                                            __esp[0x17] = _t740;
                                        }
                                        st2 = _t907;
                                        asm("fxch st0, st1");
                                        _t898 = st2 + st1;
                                        asm("fxch st0, st2");
                                        asm("fucom st2");
                                        asm("fnstsw ax");
                                        st2 = _t898;
                                        asm("sahf ");
                                        if(__eflags > 0) {
                                            st0 = _t898;
                                            st0 = _t898;
                                            st0 = _t898;
                                            st0 = _t898;
                                            goto L215;
                                        } else {
                                            asm("fsubrp st2, st0");
                                            asm("fxch st0, st1");
                                            asm("fucomp st1");
                                            asm("fnstsw ax");
                                            asm("sahf ");
                                            if(__eflags <= 0) {
                                                st0 = _t898;
                                                goto L72;
                                            } else {
                                                st1 = _t898;
                                                asm("fldz ");
                                                asm("fxch st0, st1");
                                                asm("fucompp ");
                                                asm("fnstsw ax");
                                                asm("sahf ");
                                                if(__eflags != 0 || __eflags != 0) {
L268:
                                                    __esp[6] = 16;
                                                } else {
                                                    __esp[6] = 0;
                                                    while(1) {
L207:
                                                        __eflags = _t794 - 48;
                                                        _t718 = _t845 - 1;
                                                        if(_t794 != 48) {
                                                            break;
                                                        }
                                                        _t794 =  *(_t718 - 1) & 255;
                                                        _t845 = _t718;
                                                    }
                                                    __esp[3] = __esp[0xe] + 1;
                                                    goto L116;
                                                }
                                                goto L207;
                                            }
                                        }
                                    } else {
                                        asm("fnstcw word [esp+0x4e]");
                                        __esp[0x17] = 0;
                                        __esp[0x13] = 12;
                                        _t743 = __esp[9];
                                        _t845 = _t743 + 1;
                                        _t912 =  *4236212 /  *(4236248 + _t825 * 8) - __esp[4];
                                        asm("fxch st0, st1");
                                        asm("fldcw word [esp+0x4c]");
                                        asm("fist dword [esp+0x48]");
                                        asm("fldcw word [esp+0x4e]");
                                        _t797 = __esp[0x12];
                                        __esp[0x12] = _t797;
                                        _t792 = _t797 + 48;
                                        __eflags = _t792;
                                        asm("fild dword [esp+0x48]");
                                        asm("fsubp st1, st0");
                                        asm("fxch st0, st1");
                                         *_t743 = _t792;
                                        asm("fucom st1");
                                        asm("fnstsw ax");
                                        asm("sahf ");
                                        if(__eflags > 0) {
                                            st0 = _t912;
                                            st1 = _t912;
L58:
                                            asm("fldz ");
                                            asm("fxch st0, st1");
                                            asm("fucompp ");
                                            asm("fnstsw ax");
                                            asm("sahf ");
                                            _t722 = __esp[0xe];
                                            if(__eflags != 0 || __eflags != 0) {
L60:
                                                __esp[3] = _t722 + 1;
                                                __esp[6] = 16;
                                            } else {
L145:
                                                __esp[3] = _t726 + 1;
                                                __esp[6] = 0;
                                            }
                                        } else {
                                            _t898 = st1;
                                            asm("fsubr dword [0x40a3a0]");
                                            asm("fxch st0, st1");
                                            asm("fucom st1");
                                            asm("fnstsw ax");
                                            st1 = _t898;
                                            asm("sahf ");
                                            if(__eflags > 0) {
                                                st0 = _t898;
                                                st0 = _t898;
                                                st0 = _t898;
                                                goto L215;
                                            } else {
                                                _t745 = __esp[0x17] + 1;
                                                __eflags = _t825 - _t745;
                                                __esp[0x17] = _t745;
                                                if(_t825 <= _t745) {
                                                    st0 = _t898;
                                                    st0 = _t898;
                                                    goto L72;
                                                } else {
                                                    _t913 =  *4236196;
                                                    while(1) {
                                                        _t845 = _t845 + 1;
                                                        __eflags = _t845;
                                                        _t915 = _t913 * st0 * st0;
                                                        asm("fxch st0, st2");
                                                        asm("fldcw word [esp+0x4c]");
                                                        asm("fist dword [esp+0x48]");
                                                        asm("fldcw word [esp+0x4e]");
                                                        _t746 = __esp[0x12];
                                                        __esp[0x12] = _t746;
                                                        _t792 = _t746 + 48;
                                                        asm("fild dword [esp+0x48]");
                                                        asm("fsubp st1, st0");
                                                        asm("fxch st0, st1");
                                                         *(_t845 - 1) = _t792;
                                                        asm("fucom st1");
                                                        asm("fnstsw ax");
                                                        asm("sahf ");
                                                        if(__eflags > 0) {
                                                            st0 = _t915;
                                                            st1 = _t915;
                                                            st1 = _t915;
                                                            goto L58;
                                                        }
                                                        _t898 = st1;
                                                        asm("fsubr dword [0x40a3a0]");
                                                        asm("fxch st0, st1");
                                                        asm("fucom st1");
                                                        asm("fnstsw ax");
                                                        st1 = _t898;
                                                        asm("sahf ");
                                                        if(__eflags > 0) {
                                                            st0 = _t898;
                                                            st0 = _t898;
                                                            st0 = _t898;
                                                            st0 = _t898;
L215:
                                                            _t823 = __esp[9];
                                                            while(1) {
L218:
                                                                __eflags = _t792 - 57;
                                                                _t714 = _t845 - 1;
                                                                if(_t792 != 57) {
                                                                    break;
                                                                }
                                                                __eflags = _t714 - _t823;
                                                                if(_t714 == _t823) {
                                                                    __esp[9] = _t823;
                                                                    _t793 = 49;
                                                                    __esp[0xe] = __esp[0xe] + 1;
                                                                     *_t823 = 48;
                                                                } else {
                                                                    _t792 =  *(_t714 - 1) & 255;
                                                                    _t845 = _t714;
                                                                    continue;
                                                                }
L220:
                                                                 *_t714 = _t793;
                                                                __esp[6] = 32;
                                                                __esp[3] = __esp[0xe] + 1;
                                                                goto L116;
                                                            }
                                                            __esp[9] = _t823;
                                                            _t793 = _t792 + 1;
                                                            __eflags = _t793;
                                                            goto L220;
                                                        } else {
                                                            _t748 = __esp[0x17] + 1;
                                                            __eflags = _t825 - _t748;
                                                            __esp[0x17] = _t748;
                                                            if(_t825 <= _t748) {
                                                                st0 = _t898;
                                                                st0 = _t898;
                                                                st0 = _t898;
                                                                goto L72;
                                                            } else {
                                                                asm("fxch st0, st1");
                                                                asm("fxch st0, st2");
                                                                continue;
                                                            }
                                                        }
                                                        goto L116;
                                                    }
                                                    goto L58;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        } else {
                            goto L45;
                        }
                    }
                }
            }
L116:
            ___Bfree_D2A(_t761, _t761);
             *_t845 = 0;
             *(__esp[0x26]) = __esp[3];
            __eflags = __esp[0x27];
            if(__esp[0x27] != 0) {
                 *(__esp[0x27]) = _t845;
            }
            _t616 = __esp[0x23];
             *_t616 =  *_t616 | __esp[6];
            __eflags =  *_t616;
            return __esp[9];
            goto L293;
L6:
            _t764 =  *_t559;
            _t559 = _t559 + 4;
            _t803 = _t803 + 4;
             *(_t803 - 4) = _t764;
            if(_t860 >= _t559) {
                goto L6;
            } else {
                _t765 = __esp[3];
                _t805 = _t803 - _t765 >> 2;
            }
            goto L10;
        case 2:
            __eax = __esp[0x26];
             *(__esp[0x26]) = -32768;
            __eax = __esp[0x27];
            return ___nrv_alloc_D2A("Infinity", __esp[0x27], 8);
            goto L293;
        case 3:
            __eax = __esp[0x26];
             *(__esp[0x26]) = -32768;
            __eax = __esp[0x27];
            return ___nrv_alloc_D2A(4236121, __esp[0x27], 3);
    }
}

signed int ___rshift_D2A(
    intOrPtr _a4,                          // _cfa_4
    signed int _a8                         // _cfa_8
)
{// addr = 0x004070C0
    unsigned int* _v20;                    // _cfa_ffffffec
    signed int _v24;                       // _cfa_ffffffe8
    signed int _v28;                       // _cfa_ffffffe4
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ __ebp;                       // r6
    signed int _t42;                       // _t42
    intOrPtr _t44;                         // _t44
    signed int _t45;                       // _t45
    signed int _t51;                       // _t51
    signed int _t52;                       // _t52
    unsigned int* _t53;                    // _t53
    signed int _t55;                       // _t55
    unsigned int _t61;                     // _t61
    signed int _t63;                       // _t63
    signed int _t64;                       // _t64
    signed int _t69;                       // _t69
    unsigned int* _t70;                    // _t70
    signed int* _t71;                      // _t71
    _unknown_ _t72;                        // _t72
    signed int _t76;                       // _t76
    unsigned int* _t78;                    // _t78
    unsigned int* _t79;                    // _t79
    signed int _t80;                       // _t80

    _t63 = _a8;
    _t69 =  *(_a4 + 16);
    _t79 = _a4 + 20;
    _t42 = _t63 >> 5;
    if(_t42 >= _t69) {
L9:
         *(_a4 + 16) = 0;
        goto L10;
    } else {
        _t45 = _t79 + 0 + _t42 * 4;
        _t64 = _t63 & 31;
        _t72 = _t79 + 0 + _t69 * 4;
        _v28 = _t45;
         *__esp = _t64;
        if(_t64 == 0) {
            _t70 = _t79;
            if(_t72 <= _t45) {
                goto L9;
            } else {
                do {
                    _t45 = _t45 + 4;
                    _t70 =  &(_t70[1]);
                     *((intOrPtr*)(_t70 - 4)) =  *(_t45 - 4);
                } while(_t72 > _t45);
                _t51 = 4 + ( !_v28 + _t72 >> 2) * 4 >> 2;
                goto L14;
            }
        } else {
            _t76 = _v28;
            _t52 =  *__esp;
            _v24 = 32;
            _v24 = _v24 - _t52;
            _t71 = _t76 + 4;
            _t61 =  *_t76 >> _t52;
            if(_t72 <= _t71) {
                _t53 = _t79;
            } else {
                _v20 = _t79;
                _t80 = _v24;
                _t78 = _t79;
                do {
                    _t55 =  *_t71;
                    _t78 =  &(_t78[1]);
                    _t71 =  &(_t71[1]);
                     *(_t78 - 4) = _t55 << _t80 | _t61;
                    _t61 =  *(_t71 - 4) >> ( *__esp & 255);
                } while(_t72 > _t71);
                _t79 = _v20;
                _t53 = _t79 + 4 + (_t72 - _v28 - 5 >> 2) * 4;
            }
             *_t53 = _t61;
            if(_t61 != 0) {
                _t53 =  &(_t53[1]);
            }
            _t51 = _t53 - _t79 >> 2;
L14:
             *(_a4 + 16) = _t51;
            if(_t51 == 0) {
L10:
                _t44 = _a4;
                 *(_t44 + 20) = 0;
                return _t44;
            } else {
                return _t51;
            }
        }
    }
}

___trailz_D2A(
    intOrPtr _a4                           // _cfa_4
)
{// addr = 0x004071E0
    _unknown_ __ebx;                       // r1
    intOrPtr _t7;                          // _t7
    _unknown_ _t9;                         // _t9
    intOrPtr _t12;                         // _t12

    _t7 = _a4;
    __edx = _t7 + 20;
    __ebx = __edx +  *(_t7 + 16) * 4;
    if(__edx >= __ebx) {
        return 0;
    } else {
        _t12 =  *((intOrPtr*)(_t7 + 20));
        _t9 = 0;
        if(_t12 == 0) {
            while(1) {
                __edx = __edx + 4;
                _t9 = _t9 + 32;
                if(__ebx <= __edx) {
                    break;
                }
                _t12 =  *__edx;
                if(_t12 != 0) {
                    goto L6;
                } else {
                    continue;
                }
                goto L8;
            }
            return _t9;
        } else {
L6:
            asm("rep bsf ecx, ecx");
            return _t9 + _t12;
        }
    }
L8:
}

___rv_alloc_D2A(
    intOrPtr _a4                           // _cfa_4
)
{// addr = 0x00407220
    intOrPtr __ebx;                        // r1
    intOrPtr* _t3;                         // _t3
    _unknown_ _t5;                         // _t5

    __ebx = 0;
    __esp = __esp - 24;
    __ecx = _a4;
    if(__ecx > 19) {
        _t5 = 4;
        do {
            _t5 = _t5 + _t5;
            __ebx = __ebx + 1;
        } while(_t5 + 16 <= __ecx);
    }
    _t3 = ___Balloc_D2A(__ebx);
     *_t3 = __ebx;
    __esp = __esp + 24;
    return _t3 + 4;
}

___nrv_alloc_D2A(
    signed char* _a4,                      // _cfa_4
    intOrPtr* _a8,                         // _cfa_8
    intOrPtr _a12                          // _cfa_c
)
{// addr = 0x00407260
    _unknown_ __ebx;                       // r1
    intOrPtr* __esi;                       // r5
    char* _t7;                             // _t7
    signed char* _t8;                      // _t8
    signed int _t9;                        // _t9
    signed int _t10;                       // _t10
    char* _t11;                            // _t11

    _t8 = _a4;
    __esi = _a8;
    _t7 = ___rv_alloc_D2A(_a12);
    _t10 =  *_t8 & 255;
    __ecx =  &(_t8[1]);
     *_t7 = _t10;
    _t11 = _t7;
    if(_t10 != 0) {
        do {
            __ecx =  &(__ecx[1]);
            _t9 =  *(__ecx - 1) & 255;
            _t11 = _t11 + 1;
             *_t11 = _t9;
        } while(_t9 != 0);
    }
    if(__esi != 0) {
         *__esi = _t11;
        return _t7;
    }
    return _t7;
}

signed int ___freedtoa(
    _unknown_ __ebx,                       // r1
    signed int _a4                         // _cfa_4
)
{// addr = 0x004072B0
    _unknown_ _v8;                         // _cfa_fffffff8
    signed int _t16;                       // _t16
    signed int _t17;                       // _t17
    signed int _t21;                       // _t21
    _unknown_ _t28;                        // _t28
    intOrPtr* _t29;                        // _t29

    _t16 = _a4;
    _t17 = _t16 - 4;
     *(_t17 + 4) =  *(_t16 - 4);
     *(_t17 + 8) = 1 <<  *(_t16 - 4);
    _a4 = _t17;
    _push(_t28);
    _t29 = __esp;
    _push(__ebx);
    __esp = __esp - 20;
    _t21 = _a4;
    if(_t21 == 0) {
L4:
        __esp = _t29;
        _pop(__ebp);
        return _t17;
    } else {
        if( *(_t21 + 4) > 9) {
            __esp = _t29;
            _pop(__ebp);
            goto __imp__free;
        }
        L004074D0(0, _t21);
        _t17 =  *(_t21 + 4);
         *(4250016 + _t17 * 4) = _t21;
         *_t21 =  *(4250016 + _t17 * 4);
        if( *4250056 == 2) {
             *__esp = 4250080;
            _LeaveCriticalSection$4();
            __esp = __esp - 4;
            __esp = _t29;
            _pop(__ebp);
            return _t17;
        } else {
            goto L4;
        }
    }
}

signed int ___quorem_D2A()
{// addr = 0x004072D0
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t83;                         // _t83
    signed int _t84;                       // _t84
    signed int _t85;                       // _t85
    signed int* _t86;                      // _t86
    signed int _t88;                       // _t88
    intOrPtr _t96;                         // _t96
    intOrPtr* _t98;                        // _t98
    signed int _t100;                      // _t100
    signed int* _t105;                     // _t105
    intOrPtr* _t106;                       // _t106
    intOrPtr* _t108;                       // _t108
    signed int _t112;                      // _t112
    intOrPtr _t120;                        // _t120
    intOrPtr _t124;                        // _t124
    intOrPtr _t125;                        // _t125
    intOrPtr _t126;                        // _t126
    intOrPtr* _t130;                       // _t130
    signed int _t131;                      // _t131
    signed int _t133;                      // _t133
    signed int* _t136;                     // _t136
    signed int _t137;                      // _t137
    signed int* _t139;                     // _t139
    intOrPtr _t142;                        // _t142
    intOrPtr _t148;                        // _t148
    intOrPtr* _t150;                       // _t150
    signed int* _t151;                     // _t151
    signed int _t153;                      // _t153
    intOrPtr* _t154;                       // _t154

    _t126 =  *((intOrPtr*)( *((intOrPtr*)(__esp + 100)) + 16));
    if(_t126 >  *( *((intOrPtr*)(__esp + 96)) + 16)) {
        return 0;
    }
    _t83 =  *((intOrPtr*)(__esp + 100)) + 20;
     *((intOrPtr*)(__esp + 56)) = _t83;
    _t84 = _t126 - 1;
     *(__esp + 48) = _t84;
    _t85 = _t84 << 2;
    _t136 = _t83 + _t85;
    _t108 =  *((intOrPtr*)(__esp + 96)) + 20;
    _t86 = _t85 + _t108;
     *(__esp + 40) = _t136;
    _t137 =  *_t136;
     *(__esp + 60) = _t86;
     *((intOrPtr*)(__esp + 44)) = _t108;
    _t88 =  *_t86 / (_t137 + 1);
     *(__esp + 16) = _t137;
    _t153 = _t88;
     *(__esp + 52) = _t88;
    if(_t88 == 0) {
L12:
        if(___cmp_D2A( *((intOrPtr*)(__esp + 96)),  *((intOrPtr*)(__esp + 100))) < 0) {
L23:
            return  *(__esp + 52);
        }
        _t154 =  *((intOrPtr*)(__esp + 44));
         *(__esp + 16) = 0;
         *(__esp + 20) = 0;
        _t139 =  *(__esp + 40);
         *(__esp + 52) = _t153 + 1;
        _t148 =  *((intOrPtr*)(__esp + 56));
        do {
            _t148 = _t148 + 4;
            asm("sbb edx, ebx");
            _t96 =  *_t154 -  *((intOrPtr*)(_t148 - 4)) -  *(__esp + 16);
            asm("sbb edx, [esp+0x14]");
            _t154 = _t154 + 4;
             *(__esp + 20) = 0;
             *(__esp + 16) = 0;
             *((intOrPtr*)(_t154 - 4)) = _t96;
        } while(_t139 >= _t148);
        _t112 =  *(__esp + 48);
        _t130 =  *((intOrPtr*)(__esp + 44)) + _t112 * 4;
        if( *_t130 != 0) {
            goto L23;
        }
        _t120 =  *((intOrPtr*)(__esp + 44));
        _t98 = _t130 - 4;
        if(_t120 >= _t98 ||  *((intOrPtr*)(_t130 - 4)) != 0) {
L22:
             *( *((intOrPtr*)(__esp + 96)) + 16) =  *(__esp + 48);
            goto L23;
        } else {
            _t131 = _t112;
            while(1) {
                _t98 = _t98 - 4;
                _t131 = _t131 - 1;
                if(_t120 >= _t98) {
                    break;
                }
                if( *_t98 != 0) {
                    break;
                }
            }
             *(__esp + 48) = _t131;
            goto L22;
        }
    } else {
        _t142 =  *((intOrPtr*)(__esp + 56));
        _t150 = _t108;
         *(__esp + 32) = 0;
         *(__esp + 36) = 0;
         *(__esp + 16) = 0;
         *(__esp + 20) = 0;
        asm("o16 nop ");
        do {
            _t142 = _t142 + 4;
            _t100 = _t153;
            asm("adc edx, [esp+0x24]");
             *(__esp + 28) = 0;
             *((intOrPtr*)(__esp + 24)) = _t100 *  *(_t142 - 4) +  *(__esp + 32);
             *(__esp + 32) = _t100 *  *(_t142 - 4) >> 32;
             *(__esp + 36) = 0;
            asm("sbb ebx, [esp+0x1c]");
            _t124 =  *_t150 -  *((intOrPtr*)(__esp + 24)) -  *(__esp + 16);
            asm("sbb ebx, [esp+0x14]");
            _t150 = _t150 + 4;
             *(__esp + 20) = 0;
             *(__esp + 16) = 0;
             *((intOrPtr*)(_t150 - 4)) = _t124;
        } while( *(__esp + 40) >= _t142);
        _t105 =  *(__esp + 60);
        if( *_t105 != 0) {
            goto L12;
        }
        _t125 =  *((intOrPtr*)(__esp + 44));
        _t151 = _t105;
        _t106 = _t105 - 4;
        if(_t125 >= _t106 ||  *((intOrPtr*)(_t151 - 4)) != 0) {
L11:
             *( *((intOrPtr*)(__esp + 96)) + 16) =  *(__esp + 48);
            goto L12;
        } else {
            _t133 =  *(__esp + 48);
            while(1) {
                _t106 = _t106 - 4;
                _t133 = _t133 - 1;
                if(_t125 >= _t106) {
                    break;
                }
                if( *_t106 != 0) {
                    break;
                }
            }
             *(__esp + 48) = _t133;
            goto L11;
        }
    }
}

signed int L004074D0(
    signed int __eax,                      // r0
    _unknown_ __ebx                        // r1
)
{
    _unknown_ _v8;                         // _cfa_fffffff8
    intOrPtr _v24;                         // _cfa_ffffffe8
    intOrPtr _t10;                         // _t10

    _push(__ebx);
    __esp = __esp - 20;
    __edx =  *4250056;
    if(__edx == 2) {
L10:
        _t10 = 4250080 + (__eax + __eax * 2) * 8;
         *__esp = _t10;
        _EnterCriticalSection$4();
        __esp = __esp - 4;
        return _t10;
    } else {
        if(__edx != 0) {
L5:
            if(__edx == 1) {
                 *__esp = 1;
                _Sleep$4();
                __esp = __esp - 4;
                goto L4;
            }
            if(__edx == 2) {
                goto L10;
            } else {
                return __eax;
            }
        } else {
            _v24 = 1;
             *__esp = 4250056;
            _InterlockedExchange$8();
            __esp = __esp - 8;
            if(__eax != 0) {
                if(__eax != 2) {
L4:
                    __edx =  *4250056;
                    goto L5;
                } else {
                     *4250056 = 2;
                    goto L10;
                }
            } else {
                 *__esp = 4250080;
                _InitializeCriticalSection$4();
                __esp = __esp - 4;
                 *__esp = 4250104;
                _InitializeCriticalSection$4();
                __esp = __esp - 4;
                 *__esp = 4224416;
                L004012E0();
                 *4250056 = 2;
                goto L10;
            }
        }
    }
}

___Balloc_D2A(
    signed int _a4                         // _cfa_4
)
{// addr = 0x004075F0
    _unknown_ _v16;                        // _cfa_fffffff0
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    signed int __esi;                      // r5
    signed int _t20;                       // _t20
    intOrPtr* _t22;                        // _t22
    intOrPtr* _t23;                        // _t23
    _unknown_ _t27;                        // _t27
    intOrPtr* _t28;                        // _t28
    signed int _t36;                       // _t36

    __esi = _a4;
    L004074D0(0, _t27);
    if(__esi > 9) {
        _t36 = 1 << __esi;
        _t20 = 0x1f >> 3;
        goto L5;
    } else {
        _t28 =  *((intOrPtr*)(4250016 + __esi * 4));
        if(_t28 == 0) {
            _t28 =  *4231200;
            _t36 = 1 << __esi;
            _t20 = 0x1f >> 3;
            if((_t28 - 4247712 >> 3) + _t20 > 288) {
L5:
                _t22 = _malloc(_t20 << 3);
                _t28 = _t22;
                if(_t22 == 0) {
                    _t23 = 0;
                } else {
                    goto L6;
                }
            } else {
                 *4231200 = _t28 + _t20 * 8;
L6:
                 *(_t28 + 4) = __esi;
                 *(_t28 + 8) = _t36;
                if( *4250056 == 2) {
                    goto L3;
                }
                goto L7;
            }
        } else {
             *((intOrPtr*)(4250016 + __esi * 4)) =  *_t28;
            if( *4250056 == 2) {
L3:
                 *__esp = 4250080;
                _LeaveCriticalSection$4();
                __esp = __esp - 4;
            }
L7:
            _t28[4] = 0;
            _t23 = _t28;
            _t28[3] = 0;
        }
    }
    return _t23;
}

signed int ___Bfree_D2A(
    _unknown_ __ebx,                       // r1
    intOrPtr* _a4                          // _cfa_4
)
{// addr = 0x004076C0
    _unknown_ _v8;                         // _cfa_fffffff8
    signed int _t11;                       // _t11
    intOrPtr* _t15;                        // _t15

    _push(__ebx);
    __esp = __esp - 20;
    _t15 = _a4;
    if(_t15 == 0) {
L3:
        return _t11;
    } else {
        if( *(_t15 + 4) > 9) {
            __esp = __ebp;
            _pop(__ebp);
            goto __imp__free;
        }
        L004074D0(0, _t15);
        _t11 =  *(_t15 + 4);
         *((intOrPtr*)(4250016 + _t11 * 4)) = _t15;
         *_t15 =  *((intOrPtr*)(4250016 + _t11 * 4));
        if( *4250056 == 2) {
             *__esp = 4250080;
            _LeaveCriticalSection$4();
            __esp = __esp - 4;
            return _t11;
        } else {
            goto L3;
        }
    }
}

___multadd_D2A(
    intOrPtr _a4,                          // _cfa_4
    signed int _a8,                        // _cfa_8
    signed int _a12                        // _cfa_c
)
{// addr = 0x00407730
    signed int _v32;                       // _cfa_ffffffe0
    signed int _v40;                       // _cfa_ffffffd8
    signed int _v44;                       // _cfa_ffffffd4
    _unknown_ _v52;                        // _cfa_ffffffcc (outparam)
    _unknown_ _v56;                        // _cfa_ffffffc8 (outparam)
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ __ebp;                       // r6
    signed int _t46;                       // _t46
    signed int _t48;                       // _t48
    signed int _t50;                       // _t50
    intOrPtr _t51;                         // _t51
    intOrPtr _t54;                         // _t54
    signed int _t62;                       // _t62
    _unknown_ _t64;                        // _t64
    intOrPtr _t65;                         // _t65
    signed int _t66;                       // _t66
    intOrPtr _t74;                         // _t74
    _unknown_ _t75;                        // _t75
    signed int _t76;                       // _t76
    _unknown_ _t77;                        // _t77

    _t66 = 0;
    _push(_t75);
    _push(_t77);
    _push(_t64);
    __esp = __esp - 44;
    _t76 = _a12;
    _v32 =  *(_a4 + 16);
    _t65 = _a4 + 20;
    _t46 = _a8;
    _v44 = _t46;
    _v40 = _t46 >> 31;
    do {
        _t48 =  *(_t65 + _t66 * 4);
        _t50 = _t48 * _v44 + _t76;
        asm("adc edx, ebp");
        _t76 = (_t48 * _v44 >> 32) + _v40 * _t48;
         *(_t65 + _t66 * 4) = _t50;
        _t66 = _t66 + 1;
    } while(_v32 > _t66);
    _t51 = _a4;
    if((0 | _t76) != 0) {
        if(_v32 >=  *((intOrPtr*)(_t51 + 8))) {
            _v44 =  *(_t51 + 4);
            _t54 = ___Balloc_D2A( *(_t51 + 4) + 1);
            _t65 = _t54;
            if(_t54 == 0) {
                _t51 = 0;
            } else {
                _memcpy(_t54 + 12, _a4 + 12, 8 +  *(_a4 + 16) * 4);
                ___Bfree_D2A(_t65, _a4);
                _a4 = _t65;
                goto L4;
            }
        } else {
L4:
            _t74 = _a4;
            _t62 = _v32;
             *(_t74 + 20 + _t62 * 4) = _t76;
             *((intOrPtr*)(_t74 + 16)) = _t62 + 1;
            _t51 = _t74;
        }
    }
    __esp = __esp + 44;
    _pop(__ebx);
    _pop(__esi);
    _pop(__edi);
    return _t51;
}

___i2b_D2A(
    intOrPtr _a4                           // _cfa_4
)
{// addr = 0x00407810
    __eax = ___Balloc_D2A(1);
    if(__eax != 0) {
         *((intOrPtr*)(__eax + 16)) = 1;
         *((intOrPtr*)(__eax + 20)) = _a4;
        return __eax;
    }
    return __eax;
}

___mult_D2A()
{// addr = 0x00407840
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t67;                         // _t67
    intOrPtr* _t69;                        // _t69
    intOrPtr _t70;                         // _t70
    intOrPtr _t72;                         // _t72
    intOrPtr _t73;                         // _t73
    _unknown_ _t76;                        // _t76
    intOrPtr* _t82;                        // _t82
    signed int _t84;                       // _t84
    intOrPtr _t85;                         // _t85
    signed int _t86;                       // _t86
    intOrPtr _t87;                         // _t87
    intOrPtr _t89;                         // _t89
    intOrPtr _t93;                         // _t93
    signed int _t99;                       // _t99
    intOrPtr _t103;                        // _t103
    intOrPtr _t104;                        // _t104
    intOrPtr* _t106;                       // _t106
    signed int _t107;                      // _t107
    intOrPtr _t109;                        // _t109
    intOrPtr _t110;                        // _t110
    signed int _t111;                      // _t111

    _t104 =  *((intOrPtr*)(__esp + 80));
    _t110 =  *((intOrPtr*)(__esp + 84));
    _t107 =  *(_t104 + 16);
    _t86 =  *(_t110 + 16);
    if(_t107 < _t86) {
        _t84 = _t107;
        _t107 = _t86;
        _t86 = _t84;
        _t85 = _t104;
        _t104 = _t110;
        _t110 = _t85;
    }
     *(__esp + 32) = _t107 + _t86;
    _t67 = ___Balloc_D2A((_t107 + _t86 -  *((intOrPtr*)(_t104 + 8)) > 0 & 255) +  *((intOrPtr*)(_t104 + 4)));
     *((intOrPtr*)(__esp + 44)) = _t67;
    if(_t67 == 0) {
        return 0;
    } else {
        _t69 = _t67 + 20;
         *((intOrPtr*)(__esp + 24)) = _t69;
        _t93 = _t69 +  *(__esp + 32) * 4;
         *((intOrPtr*)(__esp + 40)) = _t93;
        if(_t69 >= _t93) {
L6:
            _t70 = _t104 + 20;
             *((intOrPtr*)(__esp + 36)) = _t70;
             *((intOrPtr*)(__esp + 16)) = _t70 + _t107 * 4;
            _t72 = _t110 + 20;
            _t87 = _t72 + _t86 * 4;
             *((intOrPtr*)(__esp + 20)) = _t72;
             *((intOrPtr*)(__esp + 28)) = _t87;
            if(_t72 >= _t87) {
L13:
                if( *(__esp + 32) <= 0) {
L19:
                    _t73 =  *((intOrPtr*)(__esp + 44));
                     *(_t73 + 16) =  *(__esp + 32);
                    return _t73;
                }
                _t89 =  *((intOrPtr*)(__esp + 40));
                if( *((intOrPtr*)(_t89 - 4)) != 0) {
                    goto L19;
                }
                _t99 =  *(__esp + 32);
                _t76 = _t89 - (_t99 << 2);
                while(1) {
                    _t99 = _t99 - 1;
                    if(_t99 == 0) {
                        break;
                    }
                    if( *((intOrPtr*)(_t76 + _t99 * 4 - 4)) != 0) {
                        break;
                    }
                }
                 *(__esp + 32) = _t99;
                goto L19;
            } else {
                goto L7;
            }
            do {
L7:
                 *((intOrPtr*)(__esp + 20)) =  *((intOrPtr*)(__esp + 20)) + 4;
                _t111 =  *( *((intOrPtr*)(__esp + 20)) - 4);
                if(_t111 == 0) {
                    goto L12;
                }
                _t106 =  *((intOrPtr*)(__esp + 24));
                _t109 =  *((intOrPtr*)(__esp + 36));
                 *((intOrPtr*)(__esp + 8)) = 0;
                 *((intOrPtr*)(__esp + 12)) = 0;
                while(1) {
                    _t109 = _t109 + 4;
                    asm("adc ebx, edx");
                    asm("adc ebx, [esp+0xc]");
                     *_t106 =  *_t106 + _t111 *  *(_t109 - 4) +  *((intOrPtr*)(__esp + 8));
                     *((intOrPtr*)(__esp + 8)) = 0;
                    _t82 = _t106 + 4;
                     *((intOrPtr*)(__esp + 12)) = 0;
                    if( *((intOrPtr*)(__esp + 16)) <= _t109) {
                        break;
                    }
                    _t106 = _t82;
                }
                _t106[1] =  *((intOrPtr*)(__esp + 8));
L12:
                 *((intOrPtr*)(__esp + 24)) =  *((intOrPtr*)(__esp + 24)) + 4;
            } while( *((intOrPtr*)(__esp + 28)) >  *((intOrPtr*)(__esp + 20)));
            goto L13;
        }
        _t103 =  *((intOrPtr*)(__esp + 40));
        do {
             *_t69 = 0;
            _t69 = _t69 + 4;
        } while(_t103 > _t69);
        goto L6;
    }
}

___pow5mult_D2A(
    intOrPtr _a4,                          // _cfa_4
    signed int _a8                         // _cfa_8
)
{// addr = 0x004079A0
    _unknown_ _v16;                        // _cfa_fffffff0
    intOrPtr _v32;                         // _cfa_ffffffe0
    _unknown_ _v36;                        // _cfa_ffffffdc (outparam)
    intOrPtr* _v40;                        // _cfa_ffffffd8 (outparam)
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t32;                         // _t32
    intOrPtr _t33;                         // _t33
    intOrPtr* _t36;                        // _t36
    intOrPtr _t38;                         // _t38
    intOrPtr* _t42;                        // _t42
    signed int _t43;                       // _t43
    signed char _t44;                      // _t44
    intOrPtr _t45;                         // _t45
    intOrPtr _t46;                         // _t46
    intOrPtr* _t49;                        // _t49
    intOrPtr _t50;                         // _t50
    intOrPtr* _t52;                        // _t52
    signed int _t56;                       // _t56
    intOrPtr _t59;                         // _t59

    _t43 = _a8;
    _t45 = _a4;
    _t30 = _t43 & 3;
    if((_t43 & 3) != 0) {
        _t32 = ___multadd_D2A(_t45,  *((intOrPtr*)(4236220 + _t30 * 4)), 0);
        _t45 = _t32;
        if(_t32 != 0) {
            goto L1;
        } else {
            goto L16;
        }
    } else {
L1:
        _t44 = _t43 >> 2;
        _t33 = _t45;
        if(_t44 == 0) {
L11:
            return _t33;
        } else {
            if( *4247680 == 0) {
                _v32 = _t45;
                L004074D0(1, _t44);
                _t49 =  *4247680;
                _t46 = _v32;
                if(_t49 == 0) {
                    _t36 = ___Balloc_D2A(1);
                    _t49 = _t36;
                    if(_t36 == 0) {
                         *4247680 = 0;
                        goto L17;
                    } else {
                        _t36[5] = 625;
                        _t46 = _v32;
                        _t36[4] = 1;
                         *4247680 = _t36;
                         *_t36 = 0;
                        goto L21;
                    }
                } else {
L21:
                    if( *4250056 == 2) {
                         *__esp = 4250104;
                        _v32 = _t46;
                        _LeaveCriticalSection$4();
                        _t46 = _v32;
                        __esp = __esp - 4;
                    }
                    goto L3;
                }
            } else {
L3:
                _t56 = _t44 & 1;
                if(_t56 != 0) {
L8:
                    _v40 = _t49;
                     *__esp = _t46;
                    _v32 = _t46;
                    _t38 = ___mult_D2A();
                    _t59 = _t38;
                    _t50 = _t38;
                    if(_t59 == 0) {
                        goto L16;
                    } else {
                        ___Bfree_D2A(_t44, _v32);
                        _t44 = _t44 >> 1;
                        _t46 = _t50;
                        if(_t59 != 0) {
                            goto L5;
                        } else {
                            goto L10;
                        }
                    }
                } else {
L4:
                    _t44 = _t44 >> 1;
                    if(_t56 == 0) {
L10:
                        _t33 = _t46;
                        goto L11;
                    } else {
L5:
                        asm("o16 nop ");
                        if( *_t49 == 0) {
                            _v32 = _t46;
                            L004074D0(1, _t44);
                            _t52 =  *_t49;
                            _t46 = _v32;
                            if(_t52 == 0) {
                                _v40 = _t49;
                                 *__esp = _t49;
                                _t42 = ___mult_D2A();
                                _t52 = _t42;
                                 *_t49 = _t42;
                                if(_t42 == 0) {
L16:
L17:
                                    return 0;
                                } else {
                                     *_t42 = 0;
                                    _t46 = _v32;
                                    goto L13;
                                }
                            } else {
L13:
                                if( *4250056 != 2) {
                                    goto L6;
                                } else {
                                     *__esp = 4250104;
                                    _t49 = _t52;
                                    _v32 = _t46;
                                    _LeaveCriticalSection$4();
                                    _t46 = _v32;
                                    __esp = __esp - 4;
                                }
                                goto L7;
                            }
                        } else {
L6:
                            _t49 = _t52;
L7:
                            if((_t44 & 1) == 0) {
                                goto L4;
                            } else {
                                goto L8;
                            }
                        }
                    }
                }
            }
        }
    }
}

___lshift_D2A()
{// addr = 0x00407B30
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t38;                         // _t38
    intOrPtr _t40;                         // _t40
    intOrPtr _t41;                         // _t41
    intOrPtr _t42;                         // _t42
    signed int* _t45;                      // _t45
    signed int _t50;                       // _t50
    signed int _t52;                       // _t52
    signed int _t54;                       // _t54
    signed int _t57;                       // _t57
    signed int _t61;                       // _t61
    signed int* _t62;                      // _t62
    signed int _t65;                       // _t65
    intOrPtr _t66;                         // _t66
    signed int* _t67;                      // _t67
    signed int _t68;                       // _t68
    signed int _t69;                       // _t69
    unsigned int _t70;                     // _t70
    intOrPtr _t72;                         // _t72
    signed int _t73;                       // _t73

    _t38 =  *((intOrPtr*)(__esp + 64));
    _t68 =  *(__esp + 68);
    _t61 =  *((intOrPtr*)(_t38 + 4));
    _t52 = _t68 >> 5;
    _t40 =  *((intOrPtr*)(_t38 + 16)) + _t52;
    _t72 = _t40 + 1;
     *((intOrPtr*)(__esp + 24)) = _t40;
    _t41 =  *((intOrPtr*)(_t38 + 8));
    if(_t72 <= _t41) {
L3:
        _t42 = ___Balloc_D2A(_t61);
         *((intOrPtr*)(__esp + 20)) = _t42;
        if(_t42 == 0) {
            return 0;
        }
        _t62 = _t42 + 20;
        if(_t52 <= 0) {
L8:
            _t45 =  *((intOrPtr*)(__esp + 64)) + 20;
            _t69 = _t68 & 31;
             *(__esp + 12) = _t69;
            _t65 =  &(_t45[ *( *((intOrPtr*)(__esp + 64)) + 16)]);
            _t57 = _t65;
            if(_t69 == 0) {
                _t53 = _t65;
                do {
                    _t45 =  &(_t45[1]);
                    _t62 =  &(_t62[1]);
                     *(_t62 - 4) =  *(_t45 - 4);
                } while(_t53 > _t45);
L14:
                _t66 =  *((intOrPtr*)(__esp + 20));
                 *((intOrPtr*)(_t66 + 16)) = _t72 - 1;
                ___Bfree_D2A(_t53,  *((intOrPtr*)(__esp + 64)));
                return _t66;
            }
             *(__esp + 16) = 32;
             *((intOrPtr*)(__esp + 28)) = _t72;
            _t73 = _t57;
             *(__esp + 16) =  *(__esp + 16) - _t69;
            _t70 = 0;
            while(1) {
                _t54 =  *_t45;
                _t45 =  &(_t45[1]);
                _t67 =  &(_t62[1]);
                _t53 = _t54 << ( *(__esp + 12) & 255) | _t70;
                 *_t62 = _t54 << ( *(__esp + 12) & 255) | _t70;
                _t70 =  *(_t45 - 4) >> ( *(__esp + 16) & 255);
                if(_t73 <= _t45) {
                    break;
                }
                _t62 = _t67;
            }
            _t72 =  *((intOrPtr*)(__esp + 28));
            _t62[1] = _t70;
            if(_t70 != 0) {
                _t72 =  *((intOrPtr*)(__esp + 24)) + 2;
            }
            goto L14;
        }
        _t50 = 0;
        do {
            _t62[_t50] = 0;
            _t50 = _t50 + 1;
        } while(_t50 != _t52);
        _t62 =  &(_t62[_t50]);
        goto L8;
    }
    _t68 = _t68;
    do {
        _t41 = _t41 + _t41;
        _t61 = _t61 + 1;
    } while(_t72 > _t41);
    goto L3;
}

signed int ___cmp_D2A(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8                           // _cfa_8
)
{// addr = 0x00407C40
    _unknown_ __ebx;                       // r1
    _unknown_ _t9;                         // _t9
    signed int _t10;                       // _t10
    signed int _t13;                       // _t13
    signed int _t14;                       // _t14
    intOrPtr _t16;                         // _t16
    _unknown_ _t17;                        // _t17
    intOrPtr _t18;                         // _t18
    intOrPtr* _t19;                        // _t19

    _t16 = _a4;
    _t18 = _a8;
    _t13 =  *(_t18 + 16);
    _t9 =  *((intOrPtr*)(_t16 + 16)) - _t13;
    if(_t9 != 0) {
        return _t9;
    } else {
        _t14 = _t13 << 2;
        _t17 = _t16 + 20;
        _t10 = _t17 + _t14;
        _t19 = _t18 + _t14 + 20;
        while(1) {
            _t19 = _t19 - 4;
            _t10 = _t10 - 4;
            if( *_t10 !=  *_t19) {
                break;
            }
            if(_t17 < _t10) {
                continue;
            }
            return 0;
            goto L7;
        }
        asm("sbb eax, eax");
        return _t10 | 1;
    }
L7:
}

___diff_D2A()
{// addr = 0x00407C90
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ _t57;                        // _t57
    intOrPtr _t59;                         // _t59
    intOrPtr _t61;                         // _t61
    signed int _t62;                       // _t62
    intOrPtr _t68;                         // _t68
    intOrPtr _t69;                         // _t69
    signed int _t72;                       // _t72
    intOrPtr _t74;                         // _t74
    signed int _t82;                       // _t82
    intOrPtr _t83;                         // _t83
    signed int _t86;                       // _t86
    intOrPtr _t90;                         // _t90
    intOrPtr _t91;                         // _t91
    _unknown_ _t92;                        // _t92
    intOrPtr _t94;                         // _t94
    signed int _t95;                       // _t95
    signed int _t96;                       // _t96
    _unknown_ _t98;                        // _t98
    signed int _t104;                      // _t104

    _t94 =  *((intOrPtr*)(__esp + 64));
    _t74 =  *((intOrPtr*)(__esp + 68));
    _t104 = ___cmp_D2A(_t94, _t74);
    if(_t104 != 0) {
        if(_t104 < 0) {
            _t59 = _t94;
            _t90 = 1;
            _t94 = _t74;
            _t74 = _t59;
        } else {
            _t90 = 0;
        }
        _t61 = ___Balloc_D2A( *((intOrPtr*)(_t94 + 4)));
        _t83 = _t61;
         *((intOrPtr*)(__esp + 28)) = _t61;
        if(_t61 == 0) {
L19:
            return 0;
        } else {
             *((intOrPtr*)(_t61 + 12)) = _t90;
            _t62 =  *(_t94 + 16);
            _t95 = _t94 + 20;
            _t98 = _t74 + 20;
            _t91 = _t83 + 20;
             *(__esp + 8) = 0;
             *(__esp + 24) = _t62;
             *((intOrPtr*)(__esp + 16)) = _t95 + _t62 * 4;
             *(__esp + 12) = 0;
             *((intOrPtr*)(__esp + 20)) = _t98 + 0 +  *(_t74 + 16) * 4;
            _t96 = _t95;
            do {
                _t98 = _t98 + 4;
                _t96 = _t96 + 4;
                asm("sbb edx, ebx");
                _t68 =  *(_t96 - 4) -  *((intOrPtr*)(_t98 - 4)) -  *(__esp + 8);
                asm("sbb edx, [esp+0xc]");
                _t91 = _t91 + 4;
                 *(__esp + 12) = 0;
                 *(__esp + 8) = 0;
                 *((intOrPtr*)(_t91 - 4)) = _t68;
            } while( *((intOrPtr*)(__esp + 20)) > _t98);
            if( *((intOrPtr*)(__esp + 16)) <= _t96) {
L10:
                if(_t68 != 0) {
L14:
                    _t69 =  *((intOrPtr*)(__esp + 28));
                     *(_t69 + 16) =  *(__esp + 24);
                    return _t69;
                }
                _t86 =  *(__esp + 24);
                _t92 = _t91 - (_t86 << 2);
                _t72 = _t86;
                do {
                    _t72 = _t72 - 1;
                } while( *((intOrPtr*)(_t92 + _t72 * 4 - 4)) == 0);
                 *(__esp + 24) = _t72;
                goto L14;
            }
            _t82 =  *(__esp + 8);
             *((intOrPtr*)(__esp + 20)) = _t91;
             *(__esp + 8) = _t96;
            do {
                _t96 = _t96 + 4;
                _t68 =  *(_t96 - 4) - _t82;
                asm("sbb edx, ebx");
                _t91 = _t91 + 4;
                _t82 = 0;
                 *((intOrPtr*)(_t91 - 4)) = _t68;
            } while( *((intOrPtr*)(__esp + 16)) > _t96);
            _t91 =  *((intOrPtr*)(__esp + 20)) + 4 + ( !( *(__esp + 8)) +  *((intOrPtr*)(__esp + 16)) >> 2) * 4;
            goto L10;
        }
    }
    _t57 = ___Balloc_D2A(0);
    if(_t57 == 0) {
        goto L19;
    }
     *((intOrPtr*)(_t57 + 16)) = 1;
     *(_t57 + 20) = 0;
    return _t57;
}

signed int ___b2d_D2A()
{// addr = 0x00407E10
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t20;                       // _t20
    signed int _t21;                       // _t21
    signed int _t22;                       // _t22
    signed int _t25;                       // _t25
    signed int _t26;                       // _t26
    signed char _t31;                      // _t31
    signed char _t33;                      // _t33
    signed int _t38;                       // _t38
    signed int _t45;                       // _t45
    signed int _t50;                       // _t50
    _unknown_ _t53;                        // _t53

    __esp = __esp - 20;
    _t20 = __esp[0xa];
    __ebx = _t20 + 20;
    _t21 =  *(_t20 + 16);
    _t53 = __ebx + _t21 * 4;
    _t38 =  *(_t53 - 4);
    __esi = _t53 - 4;
    asm("bsr eax, edx");
    _t22 = _t21 ^ 31;
     *(__esp[0xb]) = 32 - _t22;
    if(_t22 > 10) {
        _t45 = 0;
        if(__ebx < __esi) {
            _t45 =  *(_t53 - 8);
            __esi = _t53 - 8;
        }
        _t31 = _t22 - 11;
        __esp[3] = _t31;
        if(_t31 == 0) {
             *__esp = _t45;
            __esp[1] = _t38 | 1072693248;
            __esp =  &(__esp[5]);
            return _t22;
        } else {
             *__esp = 0;
            _t33 = 43 - _t22;
            _t25 = 0;
            __esp[1] = _t38 << (__esp[3] & 255) | 1072693248 | _t45 >> _t33;
            if(__esi > __ebx) {
                _t25 =  *(__esi - 4) >> _t33;
            }
            _t26 = _t25 | _t45 << (__esp[3] & 255);
             *__esp = _t26;
            __esp =  &(__esp[5]);
            return _t26;
        }
    } else {
        __esp[1] = _t38 >> 11 | 1072693248;
        _t50 = 0;
         *__esp = 0;
        if(__ebx < __esi) {
            _t50 =  *(_t53 - 8) >> 11;
        }
         *__esp = _t50 | _t38 << _t22 + 21;
        __esp =  &(__esp[5]);
        return _t22;
    }
}

int _wcstombs(char* __s, long* __pwcs, int __n)
{// addr = 0x00408020
    goto __imp__wcstombs;
}

_wcslen()
{// addr = 0x00408028
    goto __imp__wcslen;
}

int _vfprintf(struct _IO_FILE* fp, char* fmt0, _G_va_list vals)
{// addr = 0x00408030
    goto __imp__vfprintf;
}

_tolower()
{// addr = 0x00408038
    goto __imp__tolower;
}

int _strlen(char* __s)
{// addr = 0x00408040
    goto __imp__strlen;
}

int _strcoll(char* __s1, char* __s2)
{// addr = 0x00408048
    goto __imp__strcoll;
}

char* _strchr(char* __s, int __c)
{// addr = 0x00408050
    goto __imp__strchr;
}

_signal()
{// addr = 0x00408058
    goto __imp__signal;
}

_setlocale()
{// addr = 0x00408060
    goto __imp__setlocale;
}

int _scanf(char* format)
{// addr = 0x00408068
    goto __imp__scanf;
}

void* _realloc(void* __ptr, int __size)
{// addr = 0x00408070
    goto __imp__realloc;
}

void* _memcpy(void* __dest, void* __src, int __n)
{// addr = 0x00408078
    goto __imp__memcpy;
}

int _mbstowcs(long* __pwcs, char* __s, int __n)
{// addr = 0x00408080
    goto __imp__mbstowcs;
}

void* _malloc(int __size)
{// addr = 0x00408088
    goto __imp__malloc;
}

_localeconv()
{// addr = 0x00408090
    goto __imp__localeconv;
}

_isspace()
{// addr = 0x00408098
    goto __imp__isspace;
}

char* _getenv(char* __name)
{// addr = 0x004080A0
    goto __imp__getenv;
}

int _fwrite(void* src, int sz, int nitems, struct _IO_FILE* fp)
{// addr = 0x004080A8
    goto __imp__fwrite;
}

void _free(void* __ptr)
{// addr = 0x004080B0
    goto __imp__free;
}

int _fputc(int ch, struct _IO_FILE* fp)
{// addr = 0x004080B8
    goto __imp__fputc;
}

void* _calloc(int __nmemb, int __size)
{// addr = 0x004080C0
    goto __imp__calloc;
}

int _atoi(char* __nptr)
{// addr = 0x004080C8
    goto __imp__atoi;
}

void _abort()
{// addr = 0x004080D0
    goto __imp__abort;
}

__setmode()
{// addr = 0x004080D8
    goto __imp___setmode;
}

__fullpath()
{// addr = 0x004080E0
    goto __imp___fullpath;
}

__errno()
{// addr = 0x004080E8
    goto __imp___errno;
}

__cexit()
{// addr = 0x004080F0
    goto __imp___cexit;
}

___p__fmode()
{// addr = 0x004080F8
    goto __imp____p__fmode;
}

___p__environ()
{// addr = 0x00408100
    goto __imp____p__environ;
}

___getmainargs()
{// addr = 0x00408108
    goto __imp____getmainargs;
}

_WideCharToMultiByte@32()
{// addr = 0x00408110
    goto __imp__WideCharToMultiByte;
}

_VirtualQuery@12()
{// addr = 0x00408118
    goto __imp__VirtualQuery;
}

_VirtualProtect@16()
{// addr = 0x00408120
    goto __imp__VirtualProtect;
}

_TlsGetValue@4()
{// addr = 0x00408128
    goto __imp__TlsGetValue;
}

_Sleep@4()
{// addr = 0x00408130
    goto __imp__Sleep;
}

_SetUnhandledExceptionFilter@4()
{// addr = 0x00408138
    goto __imp__SetUnhandledExceptionFilter;
}

_MultiByteToWideChar@24()
{// addr = 0x00408140
    goto __imp__MultiByteToWideChar;
}

_LoadLibraryA@4()
{// addr = 0x00408148
    goto __imp__LoadLibraryA;
}

_LeaveCriticalSection@4()
{// addr = 0x00408150
    goto __imp__LeaveCriticalSection;
}

_IsDBCSLeadByteEx@8()
{// addr = 0x00408158
    goto __imp__IsDBCSLeadByteEx;
}

_InterlockedExchange@8()
{// addr = 0x00408160
    goto __imp__InterlockedExchange;
}

_InitializeCriticalSection@4()
{// addr = 0x00408168
    goto __imp__InitializeCriticalSection;
}

_GetProcAddress@8()
{// addr = 0x00408170
    goto __imp__GetProcAddress;
}

_GetModuleHandleA@4()
{// addr = 0x00408178
    goto __imp__GetModuleHandleA;
}

_GetLastError@0()
{// addr = 0x00408180
    goto __imp__GetLastError;
}

_GetCommandLineA@0()
{// addr = 0x00408188
    goto __imp__GetCommandLineA;
}

_FreeLibrary@4()
{// addr = 0x00408190
    goto __imp__FreeLibrary;
}

_FindNextFileA@8()
{// addr = 0x00408198
    goto __imp__FindNextFileA;
}

_FindFirstFileA@8()
{// addr = 0x004081A0
    goto __imp__FindFirstFileA;
}

_FindClose@4()
{// addr = 0x004081A8
    goto __imp__FindClose;
}

_ExitProcess@4()
{// addr = 0x004081B0
    goto __imp__ExitProcess;
}

_EnterCriticalSection@4()
{// addr = 0x004081B8
    goto __imp__EnterCriticalSection;
}

_DeleteCriticalSection@4()
{// addr = 0x004081C0
    goto __imp__DeleteCriticalSection;
}

___umoddi3()
{// addr = 0x004081C8
    goto __imp____umoddi3;
}

___udivdi3()
{// addr = 0x004081D0
    goto __imp____udivdi3;
}

_stricoll()
{// addr = 0x004081D8
    goto __imp___stricoll;
}

char* _strdup(char* __s)
{// addr = 0x004081E0
    goto __imp___strdup;
}

int _printf(char* format)
{// addr = 0x004081E8
    char* _v16;                            // _cfa_fffffff0
    _unknown_ _v40;                        // _cfa_ffffffd8 (outparam)

    _v16 =  &_a8;
    return ___mingw_vprintf(format, _v16);
}

int _printf(char* format)
{// addr = 0x004081E8
    char* _v16;                            // _cfa_fffffff0
    _unknown_ _v40;                        // _cfa_ffffffd8 (outparam)

    _v16 =  &_a8;
    return @rec ___mingw_vprintf@___mingw_vprintf@(format, _v16);
}

// Statistics:
//    2511 Register nodes
//    4004 Temporaries nodes
//     282 Casts
//     727 Statements
//     698 Labels
//     519 Gotos
//     127 Blocks
//   21912 Nodes
//     185 Assembly nodes
//     244 Unknown Types


Total time: 1 seconds.
